/*! For license information please see main.js.LICENSE.txt */
(()=>{"use strict";var e,t,n={528:(e,t,n)=>{n.d(t,{Z:()=>l});var i=n(537),a=n.n(i),r=n(645),o=n.n(r)()(a());o.push([e.id,"body{font-family:'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;font-size:18px}.loader{margin:auto;width:650px;height:900px;display:flex;justify-content:center;align-items:center;background-color:#cdcdcd}.container{background-color:#afb0af;width:500px;margin:auto;padding:20px}.navContainer{background-color:#84867b;display:flex;flex-direction:row;margin:auto;max-width:950px;min-width:950px;justify-content:space-around}.navContainer .linker{color:#cdcdcd;text-decoration:none;font-weight:bold}.navContainer .linker:hover{font-weight:bold;color:#fdc714;text-shadow:2px 2px 7px black}.spectral{height:40px}.fizika{display:flex;flex-direction:column;margin:auto;background-color:#f4f2eb;width:950px}.fizika .head{padding-left:300px;text-align:center}.fizika .warp{padding:2px 15px;display:flex;flex-direction:column;font-size:22px}.fizika .warp div{padding:10px 0px}.fizika .warp p{font-size:18px}.fizika .atomDet{padding:3px 20px}.fizika .summary{width:890px}.fizika .nameAtom{padding-top:15px;font-size:26px;width:800px;padding-left:35px}.fizika .nameAtom:hover{cursor:pointer;color:#fc9700;text-shadow:1px 1px 2px black}.fizika .symbol{text-align:center;width:90px;height:auto;background-color:#fdfdfd;border:1px solid #100e42;border-radius:7px;font-size:52px;color:#070818;font-family:'Arial Narrow Bold', sans-serif}.fizika .symbolClick{display:flex;position:relative;justify-content:center;align-items:center;color:#070818;border:1px solid #070818;background-color:#ffffff;border-radius:7px;font-size:52px;width:100px;height:100px}.fizika .symbolClick:hover{cursor:pointer;text-shadow:1px 1px 2px #fe9b30}.fizika .symbolClick .number{color:#000000;font-size:18px;position:absolute;top:5px;right:5px}.fizika .symbolClick .name{color:#000000;font-size:14px;position:absolute;bottom:5px;left:5px}.fizika .spImg{height:100px}.fizika .imgHold{width:930px}.fizika .atomicMass{width:200px}.fizika model-viewer{margin:auto;cursor:grab;display:flex;height:700px;width:925px;border-color:#fd4a14;overflow:hidden;position:relative;user-select:none}.fizika .span{width:925px;height:2px;border-bottom:solid 2px #828c82}.fizika strong{padding-top:15px}.view-button{background-color:transparent;border-color:transparent}.back-to-top{position:fixed;bottom:120px;right:480px;color:#05020e;cursor:pointer;border-radius:4px}.back-to-top:hover{text-shadow:1px 1px 5px #fc6906}.back-to-top .arrowup{align-items:center;padding-bottom:15px;padding-right:3px;font-size:55px;width:24px;height:24px;color:#100e2aac;background-color:transparent;border-radius:12px;border:solid 3px #100e2aac}.periodic-table{display:grid;grid-template-columns:repeat(18, 64px);grid-template-rows:repeat(10, 64px);grid-gap:4px;position:absolute;margin-top:360px;left:50%;transform:translate(-50%, -50%)}.element{border:1px solid #aaa;display:flex;position:relative;align-items:center;justify-content:center;font-family:Tahoma, Geneva, Verdana, sans-serif;font-size:34px;cursor:pointer}.element .number{font-size:12px;position:absolute;top:3px;right:3px}.element .name{font-size:9px;position:absolute;bottom:3px;left:3px}.element:hover{transform:scale(1.4, 1.4);z-index:1}.category{font-size:20px;width:1200px;margin:auto;margin-top:750px;text-align:center}.category td{width:400px;height:20px;border-radius:6px}.category .space{height:500px}@media screen and (max-width: 900px){.navContainer{max-width:780px;min-width:780px;margin:auto}.periodic-table{margin-top:240px;display:grid;grid-template-columns:repeat(18, 36px);grid-template-rows:repeat(10, 47px);grid-gap:3px;position:absolute;left:50%;transform:translate(-50%, -50%)}.element{top:25px;font-size:22px}.element .number{font-size:6;top:0px;right:1px}.element .name{color:transparent}.fizika{width:780px}.fizika .imgHold{width:755px}.fizika .summary{width:740px}.fizika model-viewer{height:500px;width:720px}.fizika .span{width:755px}.category{font-size:16px;width:750px;margin:auto;margin-top:530px;text-align:center}.category td{height:20px;width:250px;border-radius:6px}.category .space{height:900px}.back-to-top{bottom:20px;right:50px}}@media screen and (max-width: 500px){body{font-size:16px;margin:0;padding:0}.fizika{width:358px}.fizika .head{padding-left:100px;font-size:26px}.fizika .warp{max-width:358px;padding:3px 10px;font-size:16px}.fizika .warp div{padding:5px 0px}.fizika .warp p{font-size:12px}.fizika .atomDet{padding:2px 12px}.fizika .summary{width:340px}.fizika .symbol{max-width:70px;min-width:70px;font-size:32px}.fizika .nameAtom{padding-left:15px;font-size:25px}.fizika .symbolClick{font-size:42px;width:80px;height:80px}.fizika .symbolClick:hover{cursor:pointer;text-shadow:1px 1px 3px #f3b85f}.fizika .symbolClick .number{color:#000000;font-size:16px;position:absolute;top:5px;right:5px}.fizika .symbolClick .name{color:#000000;font-size:11px;position:absolute;bottom:5px;left:5px}.fizika .spImg{height:60px}.fizika .imgHold{width:343px}.fizika model-viewer{height:300px;width:343px}.fizika .span{width:343px}.loader{max-width:358px;min-width:358px;height:700px}.navContainer{max-width:358px;min-width:358px;margin:auto}.navContainer .linker:hover{text-shadow:1px 1px 4px black}.periodic-table{margin-top:-250px;display:grid;grid-template-columns:repeat(18, 18px);grid-template-rows:repeat(10, 20px);grid-gap:1px;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%)}.element{border:1px solid transparent;display:flex;position:relative;align-items:center;justify-content:center;font-family:Tahoma, Geneva, Verdana, sans-serif;font-size:12px}.element .number{font-size:3px;position:absolute;top:0px;left:9px}.element .name{color:transparent}.category{font-size:14px;width:345px;margin:auto;margin-top:320px;text-align:center}.category td{height:50px;width:115px;border-radius:6px}.category .space{height:900px}.back-to-top{bottom:20px;right:20px}}\n","",{version:3,sources:["webpack://./src/scss/main.scss"],names:[],mappings:"AAIA,KACI,oGAAqG,CACrG,cAAe,CAGlB,QAGG,WAAY,CACZ,WAAY,CACZ,YAAa,CACb,YAAa,CACb,sBAAuB,CACvB,kBAAmB,CACnB,wBAlBe,CAmBlB,WAGG,wBAAyB,CACzB,WAAY,CACZ,WAAY,CACZ,YAAa,CAChB,cAIG,wBAAyB,CACzB,YAAa,CACb,kBAAmB,CACnB,WAAY,CACZ,eAAgB,CAChB,eAAgB,CAChB,4BAA6B,CAPjC,sBAUQ,aAvCW,CAwCX,oBAAqB,CACrB,gBAAiB,CAZzB,4BAeY,gBAAiB,CACjB,aAAc,CACd,6BAA8B,CACjC,UAaL,WAAY,CACf,QAIG,YAAa,CACb,qBAAsB,CACtB,WAAY,CAKZ,wBAAyB,CACzB,WAAY,CAThB,cAYQ,kBAAmB,CACnB,iBAAkB,CAb1B,cAiBQ,gBAAiB,CACjB,YAAa,CACb,qBAAsB,CACtB,cAAe,CApBvB,kBAsBY,gBAAiB,CAtB7B,gBAyBY,cAAe,CAzB3B,iBA8BQ,gBAAiB,CA9BzB,iBAiCQ,WAAY,CAjCpB,kBAqCQ,gBAAiB,CAKjB,cAAe,CACf,WAAY,CACZ,iBAAkB,CA5C1B,wBA+CY,cAAe,CACf,aAAc,CACd,6BAA8B,CAjD1C,gBAsDQ,iBAAkB,CAClB,UAAW,CACX,WAAY,CACZ,wBAAyB,CACzB,wBAAyB,CAEzB,iBAAkB,CAClB,cAAe,CACf,aAAc,CACd,2CAA4C,CA/DpD,qBAmEQ,YAAa,CACb,iBAAkB,CAClB,sBAAuB,CACvB,kBAAmB,CACnB,aAAc,CACd,wBAAyB,CACzB,wBAAyB,CACzB,iBAAkB,CAClB,cAAe,CACf,WAAY,CACZ,YAAa,CA7ErB,2BAgFY,cAAe,CAGf,+BAA0C,CAnFtD,6BAwFY,aAAc,CACd,cAAe,CACf,iBAAkB,CAClB,OAAQ,CACR,SAAU,CA5FtB,2BAgGY,aAAc,CACd,cAAe,CACf,iBAAkB,CAClB,UAAW,CACX,QAAS,CApGrB,eA0GQ,YAAa,CA1GrB,iBAgHQ,WAAY,CAhHpB,oBAsHQ,WAAY,CAtHpB,qBA4HQ,WAAY,CACZ,WAAY,CACZ,YAAa,CACb,YAAa,CACb,WAAY,CACZ,oBAAqB,CACrB,eAAgB,CAChB,iBAAkB,CAClB,gBAAiB,CApIzB,cAwIQ,WAAY,CACZ,UAAW,CACX,+BAAgC,CACnC,eAID,gBAAiB,CACpB,aAMG,4BAA6B,CAC7B,wBAAyB,CAE5B,aAKG,cAAe,CACf,YAAa,CACb,WAAY,CAEZ,aAAc,CACd,cAAe,CACf,iBAAkB,CAPtB,mBAUQ,+BAAwC,CAVhD,sBAcQ,kBAAmB,CACnB,mBAAoB,CACvB,iBAAkB,CACf,cAAe,CACf,UAAW,CACX,WAAY,CACZ,eAAgB,CAChB,4BAA8B,CAE9B,kBAAmB,CACnB,0BAA2B,CAC9B,gBASD,YAAa,CACb,sCAAuC,CACvC,mCAAoC,CACpC,YAAa,CACb,iBAAkB,CAClB,gBAAiB,CACjB,QAAS,CACT,+BAAgC,CACnC,SAIG,qBAAsB,CACtB,YAAa,CACb,iBAAkB,CAClB,kBAAmB,CACnB,sBAAuB,CACvB,+CAAgD,CAChD,cAAe,CACf,cAAe,CATnB,iBAYQ,cAAe,CACf,iBAAkB,CAClB,OAAQ,CACR,SAAU,CAflB,eAmBQ,aAAc,CACd,iBAAkB,CAClB,UAAW,CACX,QAAS,CACZ,eAID,yBAA0B,CAC1B,SAAU,CACb,UAGG,cAAe,CACf,YAAa,CACb,WAAY,CACZ,gBAAiB,CACjB,iBAAkB,CALtB,aAQQ,WAAY,CACZ,WAAY,CACZ,iBAAkB,CAV1B,iBAaQ,YAAa,CAChB,qCAMD,cACI,eAAgB,CAChB,eAAgB,CAGhB,WAAY,CAEf,gBAGG,gBAAiB,CACjB,YAAa,CACb,sCAAuC,CACvC,mCAAoC,CACpC,YAAa,CACb,iBAAkB,CAElB,QAAS,CACT,+BAAgC,CACnC,SAGG,QAAS,CACT,cAAe,CAFnB,iBAKQ,WAAY,CACZ,OAAQ,CACR,SAAU,CAPlB,eAYQ,iBAAkB,CAErB,QAKD,WAAY,CADhB,iBAIQ,WAAY,CAJpB,iBAOQ,WAAY,CAPpB,qBAYQ,YAAa,CACb,WAAY,CAbpB,cAkBQ,WAAY,CACf,UAID,cAAe,CACf,WAAY,CACZ,WAAY,CACZ,gBAAiB,CACjB,iBAAkB,CALtB,aAQQ,WAAY,CACZ,WAAY,CACZ,iBAAkB,CAV1B,iBAaQ,YAAa,CAChB,aAID,WAAY,CACZ,UAAW,CAAE,CAGrB,qCACI,KACI,cAAe,CACf,QAAS,CACT,SAAU,CAGb,QAGG,WAAY,CADhB,cAIQ,kBAAmB,CACnB,cAAe,CALvB,cASQ,eAAgB,CAChB,gBAAiB,CACjB,cAAe,CAXvB,kBAaY,eAAgB,CAb5B,gBAiBY,cAAe,CAjB3B,iBAqBQ,gBAAiB,CArBzB,iBAwBQ,WAAY,CAxBpB,gBA4BQ,cAAe,CACf,cAAe,CACf,cAAe,CA9BvB,kBAkCQ,iBAAkB,CAClB,cAAe,CAnCvB,qBA0CQ,cAAe,CACf,UAAW,CACX,WAAY,CA5CpB,2BA+CY,cAAe,CAGf,+BAAgC,CAlD5C,6BAuDY,aAAc,CACd,cAAe,CACf,iBAAkB,CAClB,OAAQ,CACR,SAAU,CA3DtB,2BA+DY,aAAc,CACd,cAAe,CACf,iBAAkB,CAClB,UAAW,CACX,QAAS,CAnErB,eA0EQ,WAAY,CA1EpB,iBA8EQ,WAAY,CA9EpB,qBAmFQ,YAAa,CACb,WAAY,CApFpB,cAyFQ,WAAY,CACf,QAID,eAAgB,CAChB,eAAgB,CAChB,YAAa,CAChB,cAGG,eAAgB,CAChB,eAAgB,CAChB,WAAY,CAHhB,4BAMQ,6BAA8B,CACjC,gBAOD,iBAAkB,CAClB,YAAa,CACb,sCAAuC,CACvC,mCAAoC,CACpC,YAAa,CACb,iBAAkB,CAClB,OAAQ,CACR,QAAS,CACT,+BAAgC,CACnC,SAIG,4BAA6B,CAC7B,YAAa,CACb,iBAAkB,CAClB,kBAAmB,CACnB,sBAAuB,CACvB,+CAAgD,CAChD,cAAe,CARnB,iBAWQ,aAAc,CACd,iBAAkB,CAClB,OAAQ,CACR,QAAS,CAdjB,eAmBQ,iBAAkB,CAErB,UAMD,cAAe,CACf,WAAY,CACZ,WAAY,CACZ,gBAAiB,CACjB,iBAAkB,CALtB,aAQQ,WAAY,CACZ,WAAY,CACZ,iBAAkB,CAV1B,iBAaQ,YAAa,CAChB,aAID,WAAY,CACZ,UAAW,CACd",sourcesContent:["$color-one: #cdcdcd;\r\n$color-two: #a7abb0;\r\n$color-three: rgb(164, 168, 206);\r\n\r\nbody {\r\n    font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;\r\n    font-size: 18px;\r\n\r\n\r\n}\r\n\r\n.loader {\r\n    margin: auto;\r\n    width: 650px;\r\n    height: 900px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: $color-one;\r\n}\r\n\r\n.container {\r\n    background-color: #afb0af;\r\n    width: 500px;\r\n    margin: auto;\r\n    padding: 20px;\r\n}\r\n\r\n\r\n.navContainer {\r\n    background-color: #84867b;\r\n    display: flex;\r\n    flex-direction: row;\r\n    margin: auto;\r\n    max-width: 950px;\r\n    min-width: 950px;\r\n    justify-content: space-around;\r\n\r\n    .linker {\r\n        color: $color-one;\r\n        text-decoration: none;\r\n        font-weight: bold;\r\n\r\n        &:hover {\r\n            font-weight: bold;\r\n            color: #fdc714;\r\n            text-shadow: 2px 2px 7px black;\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n.spectral {\r\n    height: 40px;\r\n}\r\n\r\n\r\n.fizika {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin: auto;\r\n\r\n    // padding: 12px;\r\n    // padding-left: 75px;\r\n    // padding-right: 10px;\r\n    background-color: #f4f2eb;\r\n    width: 950px;\r\n\r\n    .head {\r\n        padding-left: 300px;\r\n        text-align: center;\r\n    }\r\n\r\n    .warp {\r\n        padding: 2px 15px;\r\n        display: flex;\r\n        flex-direction: column;\r\n        font-size: 22px;\r\n        div {\r\n            padding: 10px 0px;\r\n        }\r\n        p {\r\n            font-size: 18px;\r\n        }\r\n    }\r\n\r\n    .atomDet {\r\n        padding: 3px 20px;\r\n    }\r\n    .summary {\r\n        width: 890px;\r\n    }\r\n\r\n    .nameAtom {\r\n        padding-top: 15px;\r\n        // display: flex;\r\n\r\n        // justify-content: center;\r\n        // align-items: center;\r\n        font-size: 26px;\r\n        width: 800px;\r\n        padding-left: 35px;\r\n\r\n        &:hover {\r\n            cursor: pointer;\r\n            color: #fc9700;\r\n            text-shadow: 1px 1px 2px black;\r\n        }\r\n    }\r\n\r\n    .symbol {\r\n        text-align: center;\r\n        width: 90px;\r\n        height: auto;\r\n        background-color: #fdfdfd;\r\n        border: 1px solid #100e42;\r\n\r\n        border-radius: 7px;\r\n        font-size: 52px;\r\n        color: #070818;\r\n        font-family: 'Arial Narrow Bold', sans-serif;\r\n    }\r\n\r\n    .symbolClick {\r\n        display: flex;\r\n        position: relative;\r\n        justify-content: center;\r\n        align-items: center;\r\n        color: #070818;\r\n        border: 1px solid #070818;\r\n        background-color: #ffffff;\r\n        border-radius: 7px;\r\n        font-size: 52px;\r\n        width: 100px;\r\n        height: 100px;\r\n\r\n        &:hover {\r\n            cursor: pointer;\r\n\r\n\r\n            text-shadow: 1px 1px 2px rgb(254, 155, 48);\r\n\r\n        }\r\n\r\n        .number {\r\n            color: #000000;\r\n            font-size: 18px;\r\n            position: absolute;\r\n            top: 5px;\r\n            right: 5px;\r\n        }\r\n\r\n        .name {\r\n            color: #000000;\r\n            font-size: 14px;\r\n            position: absolute;\r\n            bottom: 5px;\r\n            left: 5px;\r\n        }\r\n    }\r\n\r\n\r\n    .spImg {\r\n        height: 100px;\r\n    }\r\n\r\n\r\n\r\n    .imgHold {\r\n        width: 930px;\r\n\r\n\r\n    }\r\n\r\n    .atomicMass {\r\n        width: 200px;\r\n    }\r\n\r\n\r\n\r\n    model-viewer {\r\n        margin: auto;\r\n        cursor: grab;\r\n        display: flex;\r\n        height: 700px;\r\n        width: 925px;\r\n        border-color: #fd4a14;\r\n        overflow: hidden;\r\n        position: relative;\r\n        user-select: none;\r\n    }\r\n\r\n    .span {\r\n        width: 925px;\r\n        height: 2px;\r\n        border-bottom: solid 2px #828c82;\r\n    }\r\n}\r\n\r\n.fizika strong {\r\n    padding-top: 15px;\r\n}\r\n\r\n\r\n\r\n\r\n.view-button {\r\n    background-color: transparent;\r\n    border-color: transparent;\r\n\r\n}\r\n\r\n\r\n\r\n.back-to-top {\r\n    position: fixed;\r\n    bottom: 120px;\r\n    right: 480px;\r\n\r\n    color: #05020e;\r\n    cursor: pointer;\r\n    border-radius: 4px;\r\n\r\n    &:hover {\r\n        text-shadow:1px 1px 5px rgb(252, 105, 6);\r\n    }\r\n\r\n    .arrowup {\r\n        align-items: center;\r\n        padding-bottom: 15px;\r\n     padding-right: 3px;\r\n        font-size: 55px;\r\n        width: 24px;\r\n        height: 24px;\r\n        color: #100e2aac;\r\n        background-color:  transparent;\r\n\r\n        border-radius: 12px;\r\n        border: solid 3px #100e2aac;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n.periodic-table {\r\n    display: grid;\r\n    grid-template-columns: repeat(18, 64px);\r\n    grid-template-rows: repeat(10, 64px);\r\n    grid-gap: 4px;\r\n    position: absolute;\r\n    margin-top: 360px;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n}\r\n\r\n.element {\r\n\r\n    border: 1px solid #aaa;\r\n    display: flex;\r\n    position: relative;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-family: Tahoma, Geneva, Verdana, sans-serif;\r\n    font-size: 34px;\r\n    cursor: pointer;\r\n\r\n    .number {\r\n        font-size: 12px;\r\n        position: absolute;\r\n        top: 3px;\r\n        right: 3px;\r\n    }\r\n\r\n    .name {\r\n        font-size: 9px;\r\n        position: absolute;\r\n        bottom: 3px;\r\n        left: 3px;\r\n    }\r\n}\r\n\r\n.element:hover {\r\n    transform: scale(1.4, 1.4);\r\n    z-index: 1;\r\n}\r\n\r\n.category {\r\n    font-size: 20px;\r\n    width: 1200px;\r\n    margin: auto;\r\n    margin-top: 750px;\r\n    text-align: center;\r\n\r\n    td {\r\n        width: 400px;\r\n        height: 20px;\r\n        border-radius: 6px;\r\n    }\r\n    .space {\r\n        height: 500px;\r\n    }\r\n}\r\n\r\n\r\n\r\n@media screen and (max-width: 900px) {\r\n    .navContainer {\r\n        max-width: 780px;\r\n        min-width: 780px;\r\n\r\n\r\n        margin: auto;\r\n\r\n    }\r\n\r\n    .periodic-table {\r\n        margin-top: 240px;\r\n        display: grid;\r\n        grid-template-columns: repeat(18, 36px);\r\n        grid-template-rows: repeat(10, 47px);\r\n        grid-gap: 3px;\r\n        position: absolute;\r\n        \r\n        left: 50%;\r\n        transform: translate(-50%, -50%);\r\n    }\r\n\r\n    .element {\r\n        top: 25px;\r\n        font-size: 22px;\r\n\r\n        .number {\r\n            font-size: 6;\r\n            top: 0px;\r\n            right: 1px;\r\n        }\r\n\r\n        .name {\r\n\r\n            color: transparent;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    .fizika {\r\n        width: 780px;\r\n\r\n        .imgHold {\r\n            width: 755px;\r\n        }\r\n        .summary {\r\n            width: 740px;\r\n        }\r\n\r\n        model-viewer {\r\n\r\n            height: 500px;\r\n            width: 720px;\r\n\r\n        }\r\n\r\n        .span {\r\n            width: 755px;\r\n        }\r\n\r\n    }\r\n    .category {\r\n        font-size: 16px;\r\n        width: 750px;\r\n        margin: auto;\r\n        margin-top: 530px;\r\n        text-align: center;\r\n        \r\n        td {\r\n            height: 20px;\r\n            width: 250px;\r\n            border-radius: 6px;\r\n        }\r\n        .space {\r\n            height: 900px;\r\n        }\r\n    }\r\n    .back-to-top {\r\n   \r\n        bottom: 20px;\r\n        right: 50px;}\r\n}\r\n\r\n@media screen and (max-width: 500px) {\r\n    body {\r\n        font-size: 16px;\r\n        margin: 0;\r\n        padding: 0;\r\n\r\n\r\n    }\r\n\r\n    .fizika {\r\n        width: 358px;\r\n        // padding-left: 10px;\r\n        .head {\r\n            padding-left: 100px;\r\n            font-size: 26px;\r\n        }\r\n\r\n        .warp {\r\n            max-width: 358px;\r\n            padding: 3px 10px;\r\n            font-size: 16px;\r\n            div {\r\n                padding: 5px 0px;\r\n            }\r\n\r\n            p {\r\n                font-size: 12px;\r\n            }\r\n        }\r\n        .atomDet {\r\n            padding: 2px 12px;\r\n        }\r\n        .summary {\r\n            width: 340px;\r\n        }\r\n\r\n        .symbol {\r\n            max-width: 70px;\r\n            min-width: 70px;\r\n            font-size: 32px;\r\n        }\r\n\r\n        .nameAtom {\r\n            padding-left: 15px;\r\n            font-size: 25px;\r\n        }\r\n\r\n        .symbolClick {\r\n\r\n\r\n\r\n            font-size: 42px;\r\n            width: 80px;\r\n            height: 80px;\r\n\r\n            &:hover {\r\n                cursor: pointer;\r\n\r\n\r\n                text-shadow: 1px 1px 3px #f3b85f;\r\n\r\n            }\r\n\r\n            .number {\r\n                color: #000000;\r\n                font-size: 16px;\r\n                position: absolute;\r\n                top: 5px;\r\n                right: 5px;\r\n            }\r\n\r\n            .name {\r\n                color: #000000;\r\n                font-size: 11px;\r\n                position: absolute;\r\n                bottom: 5px;\r\n                left: 5px;\r\n            }\r\n        }\r\n\r\n\r\n        .spImg {\r\n            // width: 70px;\r\n            height: 60px;\r\n        }\r\n\r\n        .imgHold {\r\n            width: 343px;\r\n        }\r\n\r\n        model-viewer {\r\n\r\n            height: 300px;\r\n            width: 343px;\r\n\r\n        }\r\n\r\n        .span {\r\n            width: 343px;\r\n        }\r\n    }\r\n\r\n    .loader {\r\n        max-width: 358px;\r\n        min-width: 358px;\r\n        height: 700px;\r\n    }\r\n\r\n    .navContainer {\r\n        max-width: 358px;\r\n        min-width: 358px;\r\n        margin: auto;\r\n\r\n        .linker:hover {\r\n            text-shadow: 1px 1px 4px black;\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    .periodic-table {\r\n        margin-top: -250px;\r\n        display: grid;\r\n        grid-template-columns: repeat(18, 18px);\r\n        grid-template-rows: repeat(10, 20px);\r\n        grid-gap: 1px;\r\n        position: absolute;\r\n        top: 50%;\r\n        left: 50%;\r\n        transform: translate(-50%, -50%);\r\n    }\r\n\r\n    .element {\r\n        // background: rgb(218, 253, 229);\r\n        border: 1px solid transparent;\r\n        display: flex;\r\n        position: relative;\r\n        align-items: center;\r\n        justify-content: center;\r\n        font-family: Tahoma, Geneva, Verdana, sans-serif;\r\n        font-size: 12px;\r\n\r\n        .number {\r\n            font-size: 3px;\r\n            position: absolute;\r\n            top: 0px;\r\n            left: 9px;\r\n        }\r\n\r\n        .name {\r\n\r\n            color: transparent;\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    .category {\r\n        font-size: 14px;\r\n        width: 345px;\r\n        margin: auto;\r\n        margin-top: 320px;\r\n        text-align: center;\r\n        \r\n        td {\r\n            height: 50px;\r\n            width: 115px;\r\n            border-radius: 6px;\r\n        }\r\n        .space {\r\n            height: 900px;\r\n        }\r\n    }\r\n    .back-to-top {\r\n      \r\n        bottom: 20px;\r\n        right: 20px;\r\n    }\r\n}"],sourceRoot:""}]);const l=o},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",i=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),i&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),i&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,i,a,r){"string"==typeof e&&(e=[[null,e,void 0]]);var o={};if(i)for(var l=0;l<this.length;l++){var s=this[l][0];null!=s&&(o[s]=!0)}for(var u=0;u<e.length;u++){var c=[].concat(e[u]);i&&o[c[0]]||(void 0!==r&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=r),n&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=n):c[2]=n),a&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=a):c[4]="".concat(a)),t.push(c))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var i=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(i),r="/*# ".concat(a," */");return[t].concat([r]).join("\n")}return[t].join("\n")}},448:(e,t,n)=>{var i=n(294),a=n(840);function r(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var o=new Set,l={};function s(e,t){u(e,t),u(e+"Capture",t)}function u(e,t){for(l[e]=t,e=0;e<t.length;e++)o.add(t[e])}var c=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),m=Object.prototype.hasOwnProperty,p=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,d={},h={};function g(e,t,n,i,a,r,o){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=i,this.attributeNamespace=a,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=r,this.removeEmptyString=o}var f={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){f[e]=new g(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];f[t]=new g(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){f[e]=new g(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){f[e]=new g(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){f[e]=new g(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){f[e]=new g(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){f[e]=new g(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){f[e]=new g(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){f[e]=new g(e,5,!1,e.toLowerCase(),null,!1,!1)}));var b=/[\-:]([a-z])/g;function _(e){return e[1].toUpperCase()}function y(e,t,n,i){var a=f.hasOwnProperty(t)?f[t]:null;(null!==a?0!==a.type:i||!(2<t.length)||"o"!==t[0]&&"O"!==t[0]||"n"!==t[1]&&"N"!==t[1])&&(function(e,t,n,i){if(null==t||function(e,t,n,i){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!i&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,i))return!0;if(i)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,a,i)&&(n=null),i||null===a?function(e){return!!m.call(h,e)||!m.call(d,e)&&(p.test(e)?h[e]=!0:(d[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):a.mustUseProperty?e[a.propertyName]=null===n?3!==a.type&&"":n:(t=a.attributeName,i=a.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(a=a.type)||4===a&&!0===n?"":""+n,i?e.setAttributeNS(i,t,n):e.setAttribute(t,n))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(b,_);f[t]=new g(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(b,_);f[t]=new g(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(b,_);f[t]=new g(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){f[e]=new g(e,1,!1,e.toLowerCase(),null,!1,!1)})),f.xlinkHref=new g("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){f[e]=new g(e,1,!1,e.toLowerCase(),null,!0,!0)}));var v=i.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,w=Symbol.for("react.element"),k=Symbol.for("react.portal"),C=Symbol.for("react.fragment"),x=Symbol.for("react.strict_mode"),A=Symbol.for("react.profiler"),S=Symbol.for("react.provider"),B=Symbol.for("react.context"),E=Symbol.for("react.forward_ref"),z=Symbol.for("react.suspense"),N=Symbol.for("react.suspense_list"),P=Symbol.for("react.memo"),I=Symbol.for("react.lazy");Symbol.for("react.scope"),Symbol.for("react.debug_trace_mode");var T=Symbol.for("react.offscreen");Symbol.for("react.legacy_hidden"),Symbol.for("react.cache"),Symbol.for("react.tracing_marker");var R=Symbol.iterator;function L(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=R&&e[R]||e["@@iterator"])?e:null}var M,O=Object.assign;function j(e){if(void 0===M)try{throw Error()}catch(e){var t=e.stack.trim().match(/\n( *(at )?)/);M=t&&t[1]||""}return"\n"+M+e}var W=!1;function U(e,t){if(!e||W)return"";W=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"==typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(e){var i=e}Reflect.construct(e,[],t)}else{try{t.call()}catch(e){i=e}e.call(t.prototype)}else{try{throw Error()}catch(e){i=e}e()}}catch(t){if(t&&i&&"string"==typeof t.stack){for(var a=t.stack.split("\n"),r=i.stack.split("\n"),o=a.length-1,l=r.length-1;1<=o&&0<=l&&a[o]!==r[l];)l--;for(;1<=o&&0<=l;o--,l--)if(a[o]!==r[l]){if(1!==o||1!==l)do{if(o--,0>--l||a[o]!==r[l]){var s="\n"+a[o].replace(" at new "," at ");return e.displayName&&s.includes("<anonymous>")&&(s=s.replace("<anonymous>",e.displayName)),s}}while(1<=o&&0<=l);break}}}finally{W=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?j(e):""}function F(e){switch(e.tag){case 5:return j(e.type);case 16:return j("Lazy");case 13:return j("Suspense");case 19:return j("SuspenseList");case 0:case 2:case 15:return U(e.type,!1);case 11:return U(e.type.render,!1);case 1:return U(e.type,!0);default:return""}}function D(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case C:return"Fragment";case k:return"Portal";case A:return"Profiler";case x:return"StrictMode";case z:return"Suspense";case N:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case B:return(e.displayName||"Context")+".Consumer";case S:return(e._context.displayName||"Context")+".Provider";case E:var t=e.render;return(e=e.displayName)||(e=""!==(e=t.displayName||t.name||"")?"ForwardRef("+e+")":"ForwardRef"),e;case P:return null!==(t=e.displayName||null)?t:D(e.type)||"Memo";case I:t=e._payload,e=e._init;try{return D(e(t))}catch(e){}}return null}function Y(e){var t=e.type;switch(e.tag){case 24:return"Cache";case 9:return(t.displayName||"Context")+".Consumer";case 10:return(t._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return e=(e=t.render).displayName||e.name||"",t.displayName||(""!==e?"ForwardRef("+e+")":"ForwardRef");case 7:return"Fragment";case 5:return t;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return D(t);case 8:return t===x?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if("function"==typeof t)return t.displayName||t.name||null;if("string"==typeof t)return t}return null}function H(e){switch(typeof e){case"boolean":case"number":case"string":case"undefined":case"object":return e;default:return""}}function G(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function V(e){e._valueTracker||(e._valueTracker=function(e){var t=G(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),i=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var a=n.get,r=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return a.call(this)},set:function(e){i=""+e,r.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return i},setValue:function(e){i=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function Q(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),i="";return e&&(i=G(e)?e.checked?"true":"false":e.value),(e=i)!==n&&(t.setValue(e),!0)}function $(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function J(e,t){var n=t.checked;return O({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function K(e,t){var n=null==t.defaultValue?"":t.defaultValue,i=null!=t.checked?t.checked:t.defaultChecked;n=H(null!=t.value?t.value:n),e._wrapperState={initialChecked:i,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function q(e,t){null!=(t=t.checked)&&y(e,"checked",t,!1)}function X(e,t){q(e,t);var n=H(t.value),i=t.type;if(null!=n)"number"===i?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===i||"reset"===i)return void e.removeAttribute("value");t.hasOwnProperty("value")?ee(e,t.type,n):t.hasOwnProperty("defaultValue")&&ee(e,t.type,H(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function Z(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var i=t.type;if(!("submit"!==i&&"reset"!==i||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function ee(e,t,n){"number"===t&&$(e.ownerDocument)===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}var te=Array.isArray;function ne(e,t,n,i){if(e=e.options,t){t={};for(var a=0;a<n.length;a++)t["$"+n[a]]=!0;for(n=0;n<e.length;n++)a=t.hasOwnProperty("$"+e[n].value),e[n].selected!==a&&(e[n].selected=a),a&&i&&(e[n].defaultSelected=!0)}else{for(n=""+H(n),t=null,a=0;a<e.length;a++){if(e[a].value===n)return e[a].selected=!0,void(i&&(e[a].defaultSelected=!0));null!==t||e[a].disabled||(t=e[a])}null!==t&&(t.selected=!0)}}function ie(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(r(91));return O({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function ae(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(r(92));if(te(n)){if(1<n.length)throw Error(r(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:H(n)}}function re(e,t){var n=H(t.value),i=H(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=i&&(e.defaultValue=""+i)}function oe(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}function le(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function se(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?le(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var ue,ce,me=(ce=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((ue=ue||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=ue.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,i){MSApp.execUnsafeLocalFunction((function(){return ce(e,t)}))}:ce);function pe(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var de={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},he=["Webkit","ms","Moz","O"];function ge(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||de.hasOwnProperty(e)&&de[e]?(""+t).trim():t+"px"}function fe(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var i=0===n.indexOf("--"),a=ge(n,t[n],i);"float"===n&&(n="cssFloat"),i?e.setProperty(n,a):e[n]=a}}Object.keys(de).forEach((function(e){he.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),de[t]=de[e]}))}));var be=O({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function _e(e,t){if(t){if(be[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(r(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(r(60));if("object"!=typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(r(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(r(62))}}function ye(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var ve=null;function we(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var ke=null,Ce=null,xe=null;function Ae(e){if(e=ya(e)){if("function"!=typeof ke)throw Error(r(280));var t=e.stateNode;t&&(t=wa(t),ke(e.stateNode,e.type,t))}}function Se(e){Ce?xe?xe.push(e):xe=[e]:Ce=e}function Be(){if(Ce){var e=Ce,t=xe;if(xe=Ce=null,Ae(e),t)for(e=0;e<t.length;e++)Ae(t[e])}}function Ee(e,t){return e(t)}function ze(){}var Ne=!1;function Pe(e,t,n){if(Ne)return e(t,n);Ne=!0;try{return Ee(e,t,n)}finally{Ne=!1,(null!==Ce||null!==xe)&&(ze(),Be())}}function Ie(e,t){var n=e.stateNode;if(null===n)return null;var i=wa(n);if(null===i)return null;n=i[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(i=!i.disabled)||(i=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!i;break e;default:e=!1}if(e)return null;if(n&&"function"!=typeof n)throw Error(r(231,t,typeof n));return n}var Te=!1;if(c)try{var Re={};Object.defineProperty(Re,"passive",{get:function(){Te=!0}}),window.addEventListener("test",Re,Re),window.removeEventListener("test",Re,Re)}catch(ce){Te=!1}function Le(e,t,n,i,a,r,o,l,s){var u=Array.prototype.slice.call(arguments,3);try{t.apply(n,u)}catch(e){this.onError(e)}}var Me=!1,Oe=null,je=!1,We=null,Ue={onError:function(e){Me=!0,Oe=e}};function Fe(e,t,n,i,a,r,o,l,s){Me=!1,Oe=null,Le.apply(Ue,arguments)}function De(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(4098&(t=e).flags)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function Ye(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&null!==(e=e.alternate)&&(t=e.memoizedState),null!==t)return t.dehydrated}return null}function He(e){if(De(e)!==e)throw Error(r(188))}function Ge(e){return null!==(e=function(e){var t=e.alternate;if(!t){if(null===(t=De(e)))throw Error(r(188));return t!==e?null:e}for(var n=e,i=t;;){var a=n.return;if(null===a)break;var o=a.alternate;if(null===o){if(null!==(i=a.return)){n=i;continue}break}if(a.child===o.child){for(o=a.child;o;){if(o===n)return He(a),e;if(o===i)return He(a),t;o=o.sibling}throw Error(r(188))}if(n.return!==i.return)n=a,i=o;else{for(var l=!1,s=a.child;s;){if(s===n){l=!0,n=a,i=o;break}if(s===i){l=!0,i=a,n=o;break}s=s.sibling}if(!l){for(s=o.child;s;){if(s===n){l=!0,n=o,i=a;break}if(s===i){l=!0,i=o,n=a;break}s=s.sibling}if(!l)throw Error(r(189))}}if(n.alternate!==i)throw Error(r(190))}if(3!==n.tag)throw Error(r(188));return n.stateNode.current===n?e:t}(e))?Ve(e):null}function Ve(e){if(5===e.tag||6===e.tag)return e;for(e=e.child;null!==e;){var t=Ve(e);if(null!==t)return t;e=e.sibling}return null}var Qe=a.unstable_scheduleCallback,$e=a.unstable_cancelCallback,Je=a.unstable_shouldYield,Ke=a.unstable_requestPaint,qe=a.unstable_now,Xe=a.unstable_getCurrentPriorityLevel,Ze=a.unstable_ImmediatePriority,et=a.unstable_UserBlockingPriority,tt=a.unstable_NormalPriority,nt=a.unstable_LowPriority,it=a.unstable_IdlePriority,at=null,rt=null,ot=Math.clz32?Math.clz32:function(e){return 0===(e>>>=0)?32:31-(lt(e)/st|0)|0},lt=Math.log,st=Math.LN2,ut=64,ct=4194304;function mt(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return 4194240&e;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return 130023424&e;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function pt(e,t){var n=e.pendingLanes;if(0===n)return 0;var i=0,a=e.suspendedLanes,r=e.pingedLanes,o=268435455&n;if(0!==o){var l=o&~a;0!==l?i=mt(l):0!=(r&=o)&&(i=mt(r))}else 0!=(o=n&~a)?i=mt(o):0!==r&&(i=mt(r));if(0===i)return 0;if(0!==t&&t!==i&&0==(t&a)&&((a=i&-i)>=(r=t&-t)||16===a&&0!=(4194240&r)))return t;if(0!=(4&i)&&(i|=16&n),0!==(t=e.entangledLanes))for(e=e.entanglements,t&=i;0<t;)a=1<<(n=31-ot(t)),i|=e[n],t&=~a;return i}function dt(e,t){switch(e){case 1:case 2:case 4:return t+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t+5e3;default:return-1}}function ht(e){return 0!=(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function gt(){var e=ut;return 0==(4194240&(ut<<=1))&&(ut=64),e}function ft(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function bt(e,t,n){e.pendingLanes|=t,536870912!==t&&(e.suspendedLanes=0,e.pingedLanes=0),(e=e.eventTimes)[t=31-ot(t)]=n}function _t(e,t){var n=e.entangledLanes|=t;for(e=e.entanglements;n;){var i=31-ot(n),a=1<<i;a&t|e[i]&t&&(e[i]|=t),n&=~a}}var yt=0;function vt(e){return 1<(e&=-e)?4<e?0!=(268435455&e)?16:536870912:4:1}var wt,kt,Ct,xt,At,St=!1,Bt=[],Et=null,zt=null,Nt=null,Pt=new Map,It=new Map,Tt=[],Rt="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function Lt(e,t){switch(e){case"focusin":case"focusout":Et=null;break;case"dragenter":case"dragleave":zt=null;break;case"mouseover":case"mouseout":Nt=null;break;case"pointerover":case"pointerout":Pt.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":It.delete(t.pointerId)}}function Mt(e,t,n,i,a,r){return null===e||e.nativeEvent!==r?(e={blockedOn:t,domEventName:n,eventSystemFlags:i,nativeEvent:r,targetContainers:[a]},null!==t&&null!==(t=ya(t))&&kt(t),e):(e.eventSystemFlags|=i,t=e.targetContainers,null!==a&&-1===t.indexOf(a)&&t.push(a),e)}function Ot(e){var t=_a(e.target);if(null!==t){var n=De(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=Ye(n)))return e.blockedOn=t,void At(e.priority,(function(){Ct(n)}))}else if(3===t&&n.stateNode.current.memoizedState.isDehydrated)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function jt(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var n=Jt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n)return null!==(t=ya(n))&&kt(t),e.blockedOn=n,!1;var i=new(n=e.nativeEvent).constructor(n.type,n);ve=i,n.target.dispatchEvent(i),ve=null,t.shift()}return!0}function Wt(e,t,n){jt(e)&&n.delete(t)}function Ut(){St=!1,null!==Et&&jt(Et)&&(Et=null),null!==zt&&jt(zt)&&(zt=null),null!==Nt&&jt(Nt)&&(Nt=null),Pt.forEach(Wt),It.forEach(Wt)}function Ft(e,t){e.blockedOn===t&&(e.blockedOn=null,St||(St=!0,a.unstable_scheduleCallback(a.unstable_NormalPriority,Ut)))}function Dt(e){function t(t){return Ft(t,e)}if(0<Bt.length){Ft(Bt[0],e);for(var n=1;n<Bt.length;n++){var i=Bt[n];i.blockedOn===e&&(i.blockedOn=null)}}for(null!==Et&&Ft(Et,e),null!==zt&&Ft(zt,e),null!==Nt&&Ft(Nt,e),Pt.forEach(t),It.forEach(t),n=0;n<Tt.length;n++)(i=Tt[n]).blockedOn===e&&(i.blockedOn=null);for(;0<Tt.length&&null===(n=Tt[0]).blockedOn;)Ot(n),null===n.blockedOn&&Tt.shift()}var Yt=v.ReactCurrentBatchConfig,Ht=!0;function Gt(e,t,n,i){var a=yt,r=Yt.transition;Yt.transition=null;try{yt=1,Qt(e,t,n,i)}finally{yt=a,Yt.transition=r}}function Vt(e,t,n,i){var a=yt,r=Yt.transition;Yt.transition=null;try{yt=4,Qt(e,t,n,i)}finally{yt=a,Yt.transition=r}}function Qt(e,t,n,i){if(Ht){var a=Jt(e,t,n,i);if(null===a)Hi(e,t,i,$t,n),Lt(e,i);else if(function(e,t,n,i,a){switch(t){case"focusin":return Et=Mt(Et,e,t,n,i,a),!0;case"dragenter":return zt=Mt(zt,e,t,n,i,a),!0;case"mouseover":return Nt=Mt(Nt,e,t,n,i,a),!0;case"pointerover":var r=a.pointerId;return Pt.set(r,Mt(Pt.get(r)||null,e,t,n,i,a)),!0;case"gotpointercapture":return r=a.pointerId,It.set(r,Mt(It.get(r)||null,e,t,n,i,a)),!0}return!1}(a,e,t,n,i))i.stopPropagation();else if(Lt(e,i),4&t&&-1<Rt.indexOf(e)){for(;null!==a;){var r=ya(a);if(null!==r&&wt(r),null===(r=Jt(e,t,n,i))&&Hi(e,t,i,$t,n),r===a)break;a=r}null!==a&&i.stopPropagation()}else Hi(e,t,i,null,n)}}var $t=null;function Jt(e,t,n,i){if($t=null,null!==(e=_a(e=we(i))))if(null===(t=De(e)))e=null;else if(13===(n=t.tag)){if(null!==(e=Ye(t)))return e;e=null}else if(3===n){if(t.stateNode.current.memoizedState.isDehydrated)return 3===t.tag?t.stateNode.containerInfo:null;e=null}else t!==e&&(e=null);return $t=e,null}function Kt(e){switch(e){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(Xe()){case Ze:return 1;case et:return 4;case tt:case nt:return 16;case it:return 536870912;default:return 16}default:return 16}}var qt=null,Xt=null,Zt=null;function en(){if(Zt)return Zt;var e,t,n=Xt,i=n.length,a="value"in qt?qt.value:qt.textContent,r=a.length;for(e=0;e<i&&n[e]===a[e];e++);var o=i-e;for(t=1;t<=o&&n[i-t]===a[r-t];t++);return Zt=a.slice(e,1<t?1-t:void 0)}function tn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function nn(){return!0}function an(){return!1}function rn(e){function t(t,n,i,a,r){for(var o in this._reactName=t,this._targetInst=i,this.type=n,this.nativeEvent=a,this.target=r,this.currentTarget=null,e)e.hasOwnProperty(o)&&(t=e[o],this[o]=t?t(a):a[o]);return this.isDefaultPrevented=(null!=a.defaultPrevented?a.defaultPrevented:!1===a.returnValue)?nn:an,this.isPropagationStopped=an,this}return O(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=nn)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=nn)},persist:function(){},isPersistent:nn}),t}var on,ln,sn,un={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},cn=rn(un),mn=O({},un,{view:0,detail:0}),pn=rn(mn),dn=O({},mn,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:An,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==sn&&(sn&&"mousemove"===e.type?(on=e.screenX-sn.screenX,ln=e.screenY-sn.screenY):ln=on=0,sn=e),on)},movementY:function(e){return"movementY"in e?e.movementY:ln}}),hn=rn(dn),gn=rn(O({},dn,{dataTransfer:0})),fn=rn(O({},mn,{relatedTarget:0})),bn=rn(O({},un,{animationName:0,elapsedTime:0,pseudoElement:0})),_n=O({},un,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),yn=rn(_n),vn=rn(O({},un,{data:0})),wn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},kn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Cn={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function xn(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Cn[e])&&!!t[e]}function An(){return xn}var Sn=O({},mn,{key:function(e){if(e.key){var t=wn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=tn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?kn[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:An,charCode:function(e){return"keypress"===e.type?tn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?tn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),Bn=rn(Sn),En=rn(O({},dn,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),zn=rn(O({},mn,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:An})),Nn=rn(O({},un,{propertyName:0,elapsedTime:0,pseudoElement:0})),Pn=O({},dn,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),In=rn(Pn),Tn=[9,13,27,32],Rn=c&&"CompositionEvent"in window,Ln=null;c&&"documentMode"in document&&(Ln=document.documentMode);var Mn=c&&"TextEvent"in window&&!Ln,On=c&&(!Rn||Ln&&8<Ln&&11>=Ln),jn=String.fromCharCode(32),Wn=!1;function Un(e,t){switch(e){case"keyup":return-1!==Tn.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Fn(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var Dn=!1,Yn={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Hn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Yn[e.type]:"textarea"===t}function Gn(e,t,n,i){Se(i),0<(t=Vi(t,"onChange")).length&&(n=new cn("onChange","change",null,n,i),e.push({event:n,listeners:t}))}var Vn=null,Qn=null;function $n(e){ji(e,0)}function Jn(e){if(Q(va(e)))return e}function Kn(e,t){if("change"===e)return t}var qn=!1;if(c){var Xn;if(c){var Zn="oninput"in document;if(!Zn){var ei=document.createElement("div");ei.setAttribute("oninput","return;"),Zn="function"==typeof ei.oninput}Xn=Zn}else Xn=!1;qn=Xn&&(!document.documentMode||9<document.documentMode)}function ti(){Vn&&(Vn.detachEvent("onpropertychange",ni),Qn=Vn=null)}function ni(e){if("value"===e.propertyName&&Jn(Qn)){var t=[];Gn(t,Qn,e,we(e)),Pe($n,t)}}function ii(e,t,n){"focusin"===e?(ti(),Qn=n,(Vn=t).attachEvent("onpropertychange",ni)):"focusout"===e&&ti()}function ai(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Jn(Qn)}function ri(e,t){if("click"===e)return Jn(t)}function oi(e,t){if("input"===e||"change"===e)return Jn(t)}var li="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t};function si(e,t){if(li(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),i=Object.keys(t);if(n.length!==i.length)return!1;for(i=0;i<n.length;i++){var a=n[i];if(!m.call(t,a)||!li(e[a],t[a]))return!1}return!0}function ui(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function ci(e,t){var n,i=ui(e);for(e=0;i;){if(3===i.nodeType){if(n=e+i.textContent.length,e<=t&&n>=t)return{node:i,offset:t-e};e=n}e:{for(;i;){if(i.nextSibling){i=i.nextSibling;break e}i=i.parentNode}i=void 0}i=ui(i)}}function mi(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?mi(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function pi(){for(var e=window,t=$();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=$((e=t.contentWindow).document)}return t}function di(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}function hi(e){var t=pi(),n=e.focusedElem,i=e.selectionRange;if(t!==n&&n&&n.ownerDocument&&mi(n.ownerDocument.documentElement,n)){if(null!==i&&di(n))if(t=i.start,void 0===(e=i.end)&&(e=t),"selectionStart"in n)n.selectionStart=t,n.selectionEnd=Math.min(e,n.value.length);else if((e=(t=n.ownerDocument||document)&&t.defaultView||window).getSelection){e=e.getSelection();var a=n.textContent.length,r=Math.min(i.start,a);i=void 0===i.end?r:Math.min(i.end,a),!e.extend&&r>i&&(a=i,i=r,r=a),a=ci(n,r);var o=ci(n,i);a&&o&&(1!==e.rangeCount||e.anchorNode!==a.node||e.anchorOffset!==a.offset||e.focusNode!==o.node||e.focusOffset!==o.offset)&&((t=t.createRange()).setStart(a.node,a.offset),e.removeAllRanges(),r>i?(e.addRange(t),e.extend(o.node,o.offset)):(t.setEnd(o.node,o.offset),e.addRange(t)))}for(t=[],e=n;e=e.parentNode;)1===e.nodeType&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for("function"==typeof n.focus&&n.focus(),n=0;n<t.length;n++)(e=t[n]).element.scrollLeft=e.left,e.element.scrollTop=e.top}}var gi=c&&"documentMode"in document&&11>=document.documentMode,fi=null,bi=null,_i=null,yi=!1;function vi(e,t,n){var i=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;yi||null==fi||fi!==$(i)||(i="selectionStart"in(i=fi)&&di(i)?{start:i.selectionStart,end:i.selectionEnd}:{anchorNode:(i=(i.ownerDocument&&i.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:i.anchorOffset,focusNode:i.focusNode,focusOffset:i.focusOffset},_i&&si(_i,i)||(_i=i,0<(i=Vi(bi,"onSelect")).length&&(t=new cn("onSelect","select",null,t,n),e.push({event:t,listeners:i}),t.target=fi)))}function wi(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var ki={animationend:wi("Animation","AnimationEnd"),animationiteration:wi("Animation","AnimationIteration"),animationstart:wi("Animation","AnimationStart"),transitionend:wi("Transition","TransitionEnd")},Ci={},xi={};function Ai(e){if(Ci[e])return Ci[e];if(!ki[e])return e;var t,n=ki[e];for(t in n)if(n.hasOwnProperty(t)&&t in xi)return Ci[e]=n[t];return e}c&&(xi=document.createElement("div").style,"AnimationEvent"in window||(delete ki.animationend.animation,delete ki.animationiteration.animation,delete ki.animationstart.animation),"TransitionEvent"in window||delete ki.transitionend.transition);var Si=Ai("animationend"),Bi=Ai("animationiteration"),Ei=Ai("animationstart"),zi=Ai("transitionend"),Ni=new Map,Pi="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function Ii(e,t){Ni.set(e,t),s(t,[e])}for(var Ti=0;Ti<Pi.length;Ti++){var Ri=Pi[Ti];Ii(Ri.toLowerCase(),"on"+(Ri[0].toUpperCase()+Ri.slice(1)))}Ii(Si,"onAnimationEnd"),Ii(Bi,"onAnimationIteration"),Ii(Ei,"onAnimationStart"),Ii("dblclick","onDoubleClick"),Ii("focusin","onFocus"),Ii("focusout","onBlur"),Ii(zi,"onTransitionEnd"),u("onMouseEnter",["mouseout","mouseover"]),u("onMouseLeave",["mouseout","mouseover"]),u("onPointerEnter",["pointerout","pointerover"]),u("onPointerLeave",["pointerout","pointerover"]),s("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),s("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),s("onBeforeInput",["compositionend","keypress","textInput","paste"]),s("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),s("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),s("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Li="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Mi=new Set("cancel close invalid load scroll toggle".split(" ").concat(Li));function Oi(e,t,n){var i=e.type||"unknown-event";e.currentTarget=n,function(e,t,n,i,a,o,l,s,u){if(Fe.apply(this,arguments),Me){if(!Me)throw Error(r(198));var c=Oe;Me=!1,Oe=null,je||(je=!0,We=c)}}(i,t,void 0,e),e.currentTarget=null}function ji(e,t){t=0!=(4&t);for(var n=0;n<e.length;n++){var i=e[n],a=i.event;i=i.listeners;e:{var r=void 0;if(t)for(var o=i.length-1;0<=o;o--){var l=i[o],s=l.instance,u=l.currentTarget;if(l=l.listener,s!==r&&a.isPropagationStopped())break e;Oi(a,l,u),r=s}else for(o=0;o<i.length;o++){if(s=(l=i[o]).instance,u=l.currentTarget,l=l.listener,s!==r&&a.isPropagationStopped())break e;Oi(a,l,u),r=s}}}if(je)throw e=We,je=!1,We=null,e}function Wi(e,t){var n=t[ga];void 0===n&&(n=t[ga]=new Set);var i=e+"__bubble";n.has(i)||(Yi(t,e,2,!1),n.add(i))}function Ui(e,t,n){var i=0;t&&(i|=4),Yi(n,e,i,t)}var Fi="_reactListening"+Math.random().toString(36).slice(2);function Di(e){if(!e[Fi]){e[Fi]=!0,o.forEach((function(t){"selectionchange"!==t&&(Mi.has(t)||Ui(t,!1,e),Ui(t,!0,e))}));var t=9===e.nodeType?e:e.ownerDocument;null===t||t[Fi]||(t[Fi]=!0,Ui("selectionchange",!1,t))}}function Yi(e,t,n,i){switch(Kt(t)){case 1:var a=Gt;break;case 4:a=Vt;break;default:a=Qt}n=a.bind(null,t,n,e),a=void 0,!Te||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(a=!0),i?void 0!==a?e.addEventListener(t,n,{capture:!0,passive:a}):e.addEventListener(t,n,!0):void 0!==a?e.addEventListener(t,n,{passive:a}):e.addEventListener(t,n,!1)}function Hi(e,t,n,i,a){var r=i;if(0==(1&t)&&0==(2&t)&&null!==i)e:for(;;){if(null===i)return;var o=i.tag;if(3===o||4===o){var l=i.stateNode.containerInfo;if(l===a||8===l.nodeType&&l.parentNode===a)break;if(4===o)for(o=i.return;null!==o;){var s=o.tag;if((3===s||4===s)&&((s=o.stateNode.containerInfo)===a||8===s.nodeType&&s.parentNode===a))return;o=o.return}for(;null!==l;){if(null===(o=_a(l)))return;if(5===(s=o.tag)||6===s){i=r=o;continue e}l=l.parentNode}}i=i.return}Pe((function(){var i=r,a=we(n),o=[];e:{var l=Ni.get(e);if(void 0!==l){var s=cn,u=e;switch(e){case"keypress":if(0===tn(n))break e;case"keydown":case"keyup":s=Bn;break;case"focusin":u="focus",s=fn;break;case"focusout":u="blur",s=fn;break;case"beforeblur":case"afterblur":s=fn;break;case"click":if(2===n.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":s=hn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":s=gn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":s=zn;break;case Si:case Bi:case Ei:s=bn;break;case zi:s=Nn;break;case"scroll":s=pn;break;case"wheel":s=In;break;case"copy":case"cut":case"paste":s=yn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":s=En}var c=0!=(4&t),m=!c&&"scroll"===e,p=c?null!==l?l+"Capture":null:l;c=[];for(var d,h=i;null!==h;){var g=(d=h).stateNode;if(5===d.tag&&null!==g&&(d=g,null!==p&&null!=(g=Ie(h,p))&&c.push(Gi(h,g,d))),m)break;h=h.return}0<c.length&&(l=new s(l,u,null,n,a),o.push({event:l,listeners:c}))}}if(0==(7&t)){if(s="mouseout"===e||"pointerout"===e,(!(l="mouseover"===e||"pointerover"===e)||n===ve||!(u=n.relatedTarget||n.fromElement)||!_a(u)&&!u[ha])&&(s||l)&&(l=a.window===a?a:(l=a.ownerDocument)?l.defaultView||l.parentWindow:window,s?(s=i,null!==(u=(u=n.relatedTarget||n.toElement)?_a(u):null)&&(u!==(m=De(u))||5!==u.tag&&6!==u.tag)&&(u=null)):(s=null,u=i),s!==u)){if(c=hn,g="onMouseLeave",p="onMouseEnter",h="mouse","pointerout"!==e&&"pointerover"!==e||(c=En,g="onPointerLeave",p="onPointerEnter",h="pointer"),m=null==s?l:va(s),d=null==u?l:va(u),(l=new c(g,h+"leave",s,n,a)).target=m,l.relatedTarget=d,g=null,_a(a)===i&&((c=new c(p,h+"enter",u,n,a)).target=d,c.relatedTarget=m,g=c),m=g,s&&u)e:{for(p=u,h=0,d=c=s;d;d=Qi(d))h++;for(d=0,g=p;g;g=Qi(g))d++;for(;0<h-d;)c=Qi(c),h--;for(;0<d-h;)p=Qi(p),d--;for(;h--;){if(c===p||null!==p&&c===p.alternate)break e;c=Qi(c),p=Qi(p)}c=null}else c=null;null!==s&&$i(o,l,s,c,!1),null!==u&&null!==m&&$i(o,m,u,c,!0)}if("select"===(s=(l=i?va(i):window).nodeName&&l.nodeName.toLowerCase())||"input"===s&&"file"===l.type)var f=Kn;else if(Hn(l))if(qn)f=oi;else{f=ai;var b=ii}else(s=l.nodeName)&&"input"===s.toLowerCase()&&("checkbox"===l.type||"radio"===l.type)&&(f=ri);switch(f&&(f=f(e,i))?Gn(o,f,n,a):(b&&b(e,l,i),"focusout"===e&&(b=l._wrapperState)&&b.controlled&&"number"===l.type&&ee(l,"number",l.value)),b=i?va(i):window,e){case"focusin":(Hn(b)||"true"===b.contentEditable)&&(fi=b,bi=i,_i=null);break;case"focusout":_i=bi=fi=null;break;case"mousedown":yi=!0;break;case"contextmenu":case"mouseup":case"dragend":yi=!1,vi(o,n,a);break;case"selectionchange":if(gi)break;case"keydown":case"keyup":vi(o,n,a)}var _;if(Rn)e:{switch(e){case"compositionstart":var y="onCompositionStart";break e;case"compositionend":y="onCompositionEnd";break e;case"compositionupdate":y="onCompositionUpdate";break e}y=void 0}else Dn?Un(e,n)&&(y="onCompositionEnd"):"keydown"===e&&229===n.keyCode&&(y="onCompositionStart");y&&(On&&"ko"!==n.locale&&(Dn||"onCompositionStart"!==y?"onCompositionEnd"===y&&Dn&&(_=en()):(Xt="value"in(qt=a)?qt.value:qt.textContent,Dn=!0)),0<(b=Vi(i,y)).length&&(y=new vn(y,e,null,n,a),o.push({event:y,listeners:b}),(_||null!==(_=Fn(n)))&&(y.data=_))),(_=Mn?function(e,t){switch(e){case"compositionend":return Fn(t);case"keypress":return 32!==t.which?null:(Wn=!0,jn);case"textInput":return(e=t.data)===jn&&Wn?null:e;default:return null}}(e,n):function(e,t){if(Dn)return"compositionend"===e||!Rn&&Un(e,t)?(e=en(),Zt=Xt=qt=null,Dn=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return On&&"ko"!==t.locale?null:t.data}}(e,n))&&0<(i=Vi(i,"onBeforeInput")).length&&(a=new vn("onBeforeInput","beforeinput",null,n,a),o.push({event:a,listeners:i}),a.data=_)}ji(o,t)}))}function Gi(e,t,n){return{instance:e,listener:t,currentTarget:n}}function Vi(e,t){for(var n=t+"Capture",i=[];null!==e;){var a=e,r=a.stateNode;5===a.tag&&null!==r&&(a=r,null!=(r=Ie(e,n))&&i.unshift(Gi(e,r,a)),null!=(r=Ie(e,t))&&i.push(Gi(e,r,a))),e=e.return}return i}function Qi(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function $i(e,t,n,i,a){for(var r=t._reactName,o=[];null!==n&&n!==i;){var l=n,s=l.alternate,u=l.stateNode;if(null!==s&&s===i)break;5===l.tag&&null!==u&&(l=u,a?null!=(s=Ie(n,r))&&o.unshift(Gi(n,s,l)):a||null!=(s=Ie(n,r))&&o.push(Gi(n,s,l))),n=n.return}0!==o.length&&e.push({event:t,listeners:o})}var Ji=/\r\n?/g,Ki=/\u0000|\uFFFD/g;function qi(e){return("string"==typeof e?e:""+e).replace(Ji,"\n").replace(Ki,"")}function Xi(e,t,n){if(t=qi(t),qi(e)!==t&&n)throw Error(r(425))}function Zi(){}var ea=null,ta=null;function na(e,t){return"textarea"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var ia="function"==typeof setTimeout?setTimeout:void 0,aa="function"==typeof clearTimeout?clearTimeout:void 0,ra="function"==typeof Promise?Promise:void 0,oa="function"==typeof queueMicrotask?queueMicrotask:void 0!==ra?function(e){return ra.resolve(null).then(e).catch(la)}:ia;function la(e){setTimeout((function(){throw e}))}function sa(e,t){var n=t,i=0;do{var a=n.nextSibling;if(e.removeChild(n),a&&8===a.nodeType)if("/$"===(n=a.data)){if(0===i)return e.removeChild(a),void Dt(t);i--}else"$"!==n&&"$?"!==n&&"$!"!==n||i++;n=a}while(n);Dt(t)}function ua(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break;if(8===t){if("$"===(t=e.data)||"$!"===t||"$?"===t)break;if("/$"===t)return null}}return e}function ca(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var ma=Math.random().toString(36).slice(2),pa="__reactFiber$"+ma,da="__reactProps$"+ma,ha="__reactContainer$"+ma,ga="__reactEvents$"+ma,fa="__reactListeners$"+ma,ba="__reactHandles$"+ma;function _a(e){var t=e[pa];if(t)return t;for(var n=e.parentNode;n;){if(t=n[ha]||n[pa]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=ca(e);null!==e;){if(n=e[pa])return n;e=ca(e)}return t}n=(e=n).parentNode}return null}function ya(e){return!(e=e[pa]||e[ha])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function va(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(r(33))}function wa(e){return e[da]||null}var ka=[],Ca=-1;function xa(e){return{current:e}}function Aa(e){0>Ca||(e.current=ka[Ca],ka[Ca]=null,Ca--)}function Sa(e,t){Ca++,ka[Ca]=e.current,e.current=t}var Ba={},Ea=xa(Ba),za=xa(!1),Na=Ba;function Pa(e,t){var n=e.type.contextTypes;if(!n)return Ba;var i=e.stateNode;if(i&&i.__reactInternalMemoizedUnmaskedChildContext===t)return i.__reactInternalMemoizedMaskedChildContext;var a,r={};for(a in n)r[a]=t[a];return i&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=r),r}function Ia(e){return null!=e.childContextTypes}function Ta(){Aa(za),Aa(Ea)}function Ra(e,t,n){if(Ea.current!==Ba)throw Error(r(168));Sa(Ea,t),Sa(za,n)}function La(e,t,n){var i=e.stateNode;if(t=t.childContextTypes,"function"!=typeof i.getChildContext)return n;for(var a in i=i.getChildContext())if(!(a in t))throw Error(r(108,Y(e)||"Unknown",a));return O({},n,i)}function Ma(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||Ba,Na=Ea.current,Sa(Ea,e),Sa(za,za.current),!0}function Oa(e,t,n){var i=e.stateNode;if(!i)throw Error(r(169));n?(e=La(e,t,Na),i.__reactInternalMemoizedMergedChildContext=e,Aa(za),Aa(Ea),Sa(Ea,e)):Aa(za),Sa(za,n)}var ja=null,Wa=!1,Ua=!1;function Fa(e){null===ja?ja=[e]:ja.push(e)}function Da(){if(!Ua&&null!==ja){Ua=!0;var e=0,t=yt;try{var n=ja;for(yt=1;e<n.length;e++){var i=n[e];do{i=i(!0)}while(null!==i)}ja=null,Wa=!1}catch(t){throw null!==ja&&(ja=ja.slice(e+1)),Qe(Ze,Da),t}finally{yt=t,Ua=!1}}return null}var Ya=[],Ha=0,Ga=null,Va=0,Qa=[],$a=0,Ja=null,Ka=1,qa="";function Xa(e,t){Ya[Ha++]=Va,Ya[Ha++]=Ga,Ga=e,Va=t}function Za(e,t,n){Qa[$a++]=Ka,Qa[$a++]=qa,Qa[$a++]=Ja,Ja=e;var i=Ka;e=qa;var a=32-ot(i)-1;i&=~(1<<a),n+=1;var r=32-ot(t)+a;if(30<r){var o=a-a%5;r=(i&(1<<o)-1).toString(32),i>>=o,a-=o,Ka=1<<32-ot(t)+a|n<<a|i,qa=r+e}else Ka=1<<r|n<<a|i,qa=e}function er(e){null!==e.return&&(Xa(e,1),Za(e,1,0))}function tr(e){for(;e===Ga;)Ga=Ya[--Ha],Ya[Ha]=null,Va=Ya[--Ha],Ya[Ha]=null;for(;e===Ja;)Ja=Qa[--$a],Qa[$a]=null,qa=Qa[--$a],Qa[$a]=null,Ka=Qa[--$a],Qa[$a]=null}var nr=null,ir=null,ar=!1,rr=null;function or(e,t){var n=Iu(5,null,null,0);n.elementType="DELETED",n.stateNode=t,n.return=e,null===(t=e.deletions)?(e.deletions=[n],e.flags|=16):t.push(n)}function lr(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,nr=e,ir=ua(t.firstChild),!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,nr=e,ir=null,!0);case 13:return null!==(t=8!==t.nodeType?null:t)&&(n=null!==Ja?{id:Ka,overflow:qa}:null,e.memoizedState={dehydrated:t,treeContext:n,retryLane:1073741824},(n=Iu(18,null,null,0)).stateNode=t,n.return=e,e.child=n,nr=e,ir=null,!0);default:return!1}}function sr(e){return 0!=(1&e.mode)&&0==(128&e.flags)}function ur(e){if(ar){var t=ir;if(t){var n=t;if(!lr(e,t)){if(sr(e))throw Error(r(418));t=ua(n.nextSibling);var i=nr;t&&lr(e,t)?or(i,n):(e.flags=-4097&e.flags|2,ar=!1,nr=e)}}else{if(sr(e))throw Error(r(418));e.flags=-4097&e.flags|2,ar=!1,nr=e}}}function cr(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;nr=e}function mr(e){if(e!==nr)return!1;if(!ar)return cr(e),ar=!0,!1;var t;if((t=3!==e.tag)&&!(t=5!==e.tag)&&(t="head"!==(t=e.type)&&"body"!==t&&!na(e.type,e.memoizedProps)),t&&(t=ir)){if(sr(e))throw pr(),Error(r(418));for(;t;)or(e,t),t=ua(t.nextSibling)}if(cr(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(r(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){ir=ua(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}ir=null}}else ir=nr?ua(e.stateNode.nextSibling):null;return!0}function pr(){for(var e=ir;e;)e=ua(e.nextSibling)}function dr(){ir=nr=null,ar=!1}function hr(e){null===rr?rr=[e]:rr.push(e)}var gr=v.ReactCurrentBatchConfig;function fr(e,t){if(e&&e.defaultProps){for(var n in t=O({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}return t}var br=xa(null),_r=null,yr=null,vr=null;function wr(){vr=yr=_r=null}function kr(e){var t=br.current;Aa(br),e._currentValue=t}function Cr(e,t,n){for(;null!==e;){var i=e.alternate;if((e.childLanes&t)!==t?(e.childLanes|=t,null!==i&&(i.childLanes|=t)):null!==i&&(i.childLanes&t)!==t&&(i.childLanes|=t),e===n)break;e=e.return}}function xr(e,t){_r=e,vr=yr=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!=(e.lanes&t)&&(vl=!0),e.firstContext=null)}function Ar(e){var t=e._currentValue;if(vr!==e)if(e={context:e,memoizedValue:t,next:null},null===yr){if(null===_r)throw Error(r(308));yr=e,_r.dependencies={lanes:0,firstContext:e}}else yr=yr.next=e;return t}var Sr=null;function Br(e){null===Sr?Sr=[e]:Sr.push(e)}function Er(e,t,n,i){var a=t.interleaved;return null===a?(n.next=n,Br(t)):(n.next=a.next,a.next=n),t.interleaved=n,zr(e,i)}function zr(e,t){e.lanes|=t;var n=e.alternate;for(null!==n&&(n.lanes|=t),n=e,e=e.return;null!==e;)e.childLanes|=t,null!==(n=e.alternate)&&(n.childLanes|=t),n=e,e=e.return;return 3===n.tag?n.stateNode:null}var Nr=!1;function Pr(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function Ir(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function Tr(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function Rr(e,t,n){var i=e.updateQueue;if(null===i)return null;if(i=i.shared,0!=(2&zs)){var a=i.pending;return null===a?t.next=t:(t.next=a.next,a.next=t),i.pending=t,zr(e,n)}return null===(a=i.interleaved)?(t.next=t,Br(i)):(t.next=a.next,a.next=t),i.interleaved=t,zr(e,n)}function Lr(e,t,n){if(null!==(t=t.updateQueue)&&(t=t.shared,0!=(4194240&n))){var i=t.lanes;n|=i&=e.pendingLanes,t.lanes=n,_t(e,n)}}function Mr(e,t){var n=e.updateQueue,i=e.alternate;if(null!==i&&n===(i=i.updateQueue)){var a=null,r=null;if(null!==(n=n.firstBaseUpdate)){do{var o={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};null===r?a=r=o:r=r.next=o,n=n.next}while(null!==n);null===r?a=r=t:r=r.next=t}else a=r=t;return n={baseState:i.baseState,firstBaseUpdate:a,lastBaseUpdate:r,shared:i.shared,effects:i.effects},void(e.updateQueue=n)}null===(e=n.lastBaseUpdate)?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function Or(e,t,n,i){var a=e.updateQueue;Nr=!1;var r=a.firstBaseUpdate,o=a.lastBaseUpdate,l=a.shared.pending;if(null!==l){a.shared.pending=null;var s=l,u=s.next;s.next=null,null===o?r=u:o.next=u,o=s;var c=e.alternate;null!==c&&(l=(c=c.updateQueue).lastBaseUpdate)!==o&&(null===l?c.firstBaseUpdate=u:l.next=u,c.lastBaseUpdate=s)}if(null!==r){var m=a.baseState;for(o=0,c=u=s=null,l=r;;){var p=l.lane,d=l.eventTime;if((i&p)===p){null!==c&&(c=c.next={eventTime:d,lane:0,tag:l.tag,payload:l.payload,callback:l.callback,next:null});e:{var h=e,g=l;switch(p=t,d=n,g.tag){case 1:if("function"==typeof(h=g.payload)){m=h.call(d,m,p);break e}m=h;break e;case 3:h.flags=-65537&h.flags|128;case 0:if(null==(p="function"==typeof(h=g.payload)?h.call(d,m,p):h))break e;m=O({},m,p);break e;case 2:Nr=!0}}null!==l.callback&&0!==l.lane&&(e.flags|=64,null===(p=a.effects)?a.effects=[l]:p.push(l))}else d={eventTime:d,lane:p,tag:l.tag,payload:l.payload,callback:l.callback,next:null},null===c?(u=c=d,s=m):c=c.next=d,o|=p;if(null===(l=l.next)){if(null===(l=a.shared.pending))break;l=(p=l).next,p.next=null,a.lastBaseUpdate=p,a.shared.pending=null}}if(null===c&&(s=m),a.baseState=s,a.firstBaseUpdate=u,a.lastBaseUpdate=c,null!==(t=a.shared.interleaved)){a=t;do{o|=a.lane,a=a.next}while(a!==t)}else null===r&&(a.shared.lanes=0);Os|=o,e.lanes=o,e.memoizedState=m}}function jr(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var i=e[t],a=i.callback;if(null!==a){if(i.callback=null,i=n,"function"!=typeof a)throw Error(r(191,a));a.call(i)}}}var Wr=(new i.Component).refs;function Ur(e,t,n,i){n=null==(n=n(i,t=e.memoizedState))?t:O({},t,n),e.memoizedState=n,0===e.lanes&&(e.updateQueue.baseState=n)}var Fr={isMounted:function(e){return!!(e=e._reactInternals)&&De(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternals;var i=tu(),a=nu(e),r=Tr(i,a);r.payload=t,null!=n&&(r.callback=n),null!==(t=Rr(e,r,a))&&(iu(t,e,a,i),Lr(t,e,a))},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var i=tu(),a=nu(e),r=Tr(i,a);r.tag=1,r.payload=t,null!=n&&(r.callback=n),null!==(t=Rr(e,r,a))&&(iu(t,e,a,i),Lr(t,e,a))},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=tu(),i=nu(e),a=Tr(n,i);a.tag=2,null!=t&&(a.callback=t),null!==(t=Rr(e,a,i))&&(iu(t,e,i,n),Lr(t,e,i))}};function Dr(e,t,n,i,a,r,o){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(i,r,o):!(t.prototype&&t.prototype.isPureReactComponent&&si(n,i)&&si(a,r))}function Yr(e,t,n){var i=!1,a=Ba,r=t.contextType;return"object"==typeof r&&null!==r?r=Ar(r):(a=Ia(t)?Na:Ea.current,r=(i=null!=(i=t.contextTypes))?Pa(e,a):Ba),t=new t(n,r),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=Fr,e.stateNode=t,t._reactInternals=e,i&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=a,e.__reactInternalMemoizedMaskedChildContext=r),t}function Hr(e,t,n,i){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,i),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,i),t.state!==e&&Fr.enqueueReplaceState(t,t.state,null)}function Gr(e,t,n,i){var a=e.stateNode;a.props=n,a.state=e.memoizedState,a.refs=Wr,Pr(e);var r=t.contextType;"object"==typeof r&&null!==r?a.context=Ar(r):(r=Ia(t)?Na:Ea.current,a.context=Pa(e,r)),a.state=e.memoizedState,"function"==typeof(r=t.getDerivedStateFromProps)&&(Ur(e,t,r,n),a.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof a.getSnapshotBeforeUpdate||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||(t=a.state,"function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount(),t!==a.state&&Fr.enqueueReplaceState(a,a.state,null),Or(e,n,a,i),a.state=e.memoizedState),"function"==typeof a.componentDidMount&&(e.flags|=4194308)}function Vr(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(r(309));var i=n.stateNode}if(!i)throw Error(r(147,e));var a=i,o=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===o?t.ref:(t=function(e){var t=a.refs;t===Wr&&(t=a.refs={}),null===e?delete t[o]:t[o]=e},t._stringRef=o,t)}if("string"!=typeof e)throw Error(r(284));if(!n._owner)throw Error(r(290,e))}return e}function Qr(e,t){throw e=Object.prototype.toString.call(t),Error(r(31,"[object Object]"===e?"object with keys {"+Object.keys(t).join(", ")+"}":e))}function $r(e){return(0,e._init)(e._payload)}function Jr(e){function t(t,n){if(e){var i=t.deletions;null===i?(t.deletions=[n],t.flags|=16):i.push(n)}}function n(n,i){if(!e)return null;for(;null!==i;)t(n,i),i=i.sibling;return null}function i(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function a(e,t){return(e=Ru(e,t)).index=0,e.sibling=null,e}function o(t,n,i){return t.index=i,e?null!==(i=t.alternate)?(i=i.index)<n?(t.flags|=2,n):i:(t.flags|=2,n):(t.flags|=1048576,n)}function l(t){return e&&null===t.alternate&&(t.flags|=2),t}function s(e,t,n,i){return null===t||6!==t.tag?((t=ju(n,e.mode,i)).return=e,t):((t=a(t,n)).return=e,t)}function u(e,t,n,i){var r=n.type;return r===C?m(e,t,n.props.children,i,n.key):null!==t&&(t.elementType===r||"object"==typeof r&&null!==r&&r.$$typeof===I&&$r(r)===t.type)?((i=a(t,n.props)).ref=Vr(e,t,n),i.return=e,i):((i=Lu(n.type,n.key,n.props,null,e.mode,i)).ref=Vr(e,t,n),i.return=e,i)}function c(e,t,n,i){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Wu(n,e.mode,i)).return=e,t):((t=a(t,n.children||[])).return=e,t)}function m(e,t,n,i,r){return null===t||7!==t.tag?((t=Mu(n,e.mode,i,r)).return=e,t):((t=a(t,n)).return=e,t)}function p(e,t,n){if("string"==typeof t&&""!==t||"number"==typeof t)return(t=ju(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case w:return(n=Lu(t.type,t.key,t.props,null,e.mode,n)).ref=Vr(e,null,t),n.return=e,n;case k:return(t=Wu(t,e.mode,n)).return=e,t;case I:return p(e,(0,t._init)(t._payload),n)}if(te(t)||L(t))return(t=Mu(t,e.mode,n,null)).return=e,t;Qr(e,t)}return null}function d(e,t,n,i){var a=null!==t?t.key:null;if("string"==typeof n&&""!==n||"number"==typeof n)return null!==a?null:s(e,t,""+n,i);if("object"==typeof n&&null!==n){switch(n.$$typeof){case w:return n.key===a?u(e,t,n,i):null;case k:return n.key===a?c(e,t,n,i):null;case I:return d(e,t,(a=n._init)(n._payload),i)}if(te(n)||L(n))return null!==a?null:m(e,t,n,i,null);Qr(e,n)}return null}function h(e,t,n,i,a){if("string"==typeof i&&""!==i||"number"==typeof i)return s(t,e=e.get(n)||null,""+i,a);if("object"==typeof i&&null!==i){switch(i.$$typeof){case w:return u(t,e=e.get(null===i.key?n:i.key)||null,i,a);case k:return c(t,e=e.get(null===i.key?n:i.key)||null,i,a);case I:return h(e,t,n,(0,i._init)(i._payload),a)}if(te(i)||L(i))return m(t,e=e.get(n)||null,i,a,null);Qr(t,i)}return null}function g(a,r,l,s){for(var u=null,c=null,m=r,g=r=0,f=null;null!==m&&g<l.length;g++){m.index>g?(f=m,m=null):f=m.sibling;var b=d(a,m,l[g],s);if(null===b){null===m&&(m=f);break}e&&m&&null===b.alternate&&t(a,m),r=o(b,r,g),null===c?u=b:c.sibling=b,c=b,m=f}if(g===l.length)return n(a,m),ar&&Xa(a,g),u;if(null===m){for(;g<l.length;g++)null!==(m=p(a,l[g],s))&&(r=o(m,r,g),null===c?u=m:c.sibling=m,c=m);return ar&&Xa(a,g),u}for(m=i(a,m);g<l.length;g++)null!==(f=h(m,a,g,l[g],s))&&(e&&null!==f.alternate&&m.delete(null===f.key?g:f.key),r=o(f,r,g),null===c?u=f:c.sibling=f,c=f);return e&&m.forEach((function(e){return t(a,e)})),ar&&Xa(a,g),u}function f(a,l,s,u){var c=L(s);if("function"!=typeof c)throw Error(r(150));if(null==(s=c.call(s)))throw Error(r(151));for(var m=c=null,g=l,f=l=0,b=null,_=s.next();null!==g&&!_.done;f++,_=s.next()){g.index>f?(b=g,g=null):b=g.sibling;var y=d(a,g,_.value,u);if(null===y){null===g&&(g=b);break}e&&g&&null===y.alternate&&t(a,g),l=o(y,l,f),null===m?c=y:m.sibling=y,m=y,g=b}if(_.done)return n(a,g),ar&&Xa(a,f),c;if(null===g){for(;!_.done;f++,_=s.next())null!==(_=p(a,_.value,u))&&(l=o(_,l,f),null===m?c=_:m.sibling=_,m=_);return ar&&Xa(a,f),c}for(g=i(a,g);!_.done;f++,_=s.next())null!==(_=h(g,a,f,_.value,u))&&(e&&null!==_.alternate&&g.delete(null===_.key?f:_.key),l=o(_,l,f),null===m?c=_:m.sibling=_,m=_);return e&&g.forEach((function(e){return t(a,e)})),ar&&Xa(a,f),c}return function e(i,r,o,s){if("object"==typeof o&&null!==o&&o.type===C&&null===o.key&&(o=o.props.children),"object"==typeof o&&null!==o){switch(o.$$typeof){case w:e:{for(var u=o.key,c=r;null!==c;){if(c.key===u){if((u=o.type)===C){if(7===c.tag){n(i,c.sibling),(r=a(c,o.props.children)).return=i,i=r;break e}}else if(c.elementType===u||"object"==typeof u&&null!==u&&u.$$typeof===I&&$r(u)===c.type){n(i,c.sibling),(r=a(c,o.props)).ref=Vr(i,c,o),r.return=i,i=r;break e}n(i,c);break}t(i,c),c=c.sibling}o.type===C?((r=Mu(o.props.children,i.mode,s,o.key)).return=i,i=r):((s=Lu(o.type,o.key,o.props,null,i.mode,s)).ref=Vr(i,r,o),s.return=i,i=s)}return l(i);case k:e:{for(c=o.key;null!==r;){if(r.key===c){if(4===r.tag&&r.stateNode.containerInfo===o.containerInfo&&r.stateNode.implementation===o.implementation){n(i,r.sibling),(r=a(r,o.children||[])).return=i,i=r;break e}n(i,r);break}t(i,r),r=r.sibling}(r=Wu(o,i.mode,s)).return=i,i=r}return l(i);case I:return e(i,r,(c=o._init)(o._payload),s)}if(te(o))return g(i,r,o,s);if(L(o))return f(i,r,o,s);Qr(i,o)}return"string"==typeof o&&""!==o||"number"==typeof o?(o=""+o,null!==r&&6===r.tag?(n(i,r.sibling),(r=a(r,o)).return=i,i=r):(n(i,r),(r=ju(o,i.mode,s)).return=i,i=r),l(i)):n(i,r)}}var Kr=Jr(!0),qr=Jr(!1),Xr={},Zr=xa(Xr),eo=xa(Xr),to=xa(Xr);function no(e){if(e===Xr)throw Error(r(174));return e}function io(e,t){switch(Sa(to,t),Sa(eo,e),Sa(Zr,Xr),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:se(null,"");break;default:t=se(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}Aa(Zr),Sa(Zr,t)}function ao(){Aa(Zr),Aa(eo),Aa(to)}function ro(e){no(to.current);var t=no(Zr.current),n=se(t,e.type);t!==n&&(Sa(eo,e),Sa(Zr,n))}function oo(e){eo.current===e&&(Aa(Zr),Aa(eo))}var lo=xa(0);function so(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(128&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var uo=[];function co(){for(var e=0;e<uo.length;e++)uo[e]._workInProgressVersionPrimary=null;uo.length=0}var mo=v.ReactCurrentDispatcher,po=v.ReactCurrentBatchConfig,ho=0,go=null,fo=null,bo=null,_o=!1,yo=!1,vo=0,wo=0;function ko(){throw Error(r(321))}function Co(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!li(e[n],t[n]))return!1;return!0}function xo(e,t,n,i,a,o){if(ho=o,go=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,mo.current=null===e||null===e.memoizedState?ll:sl,e=n(i,a),yo){o=0;do{if(yo=!1,vo=0,25<=o)throw Error(r(301));o+=1,bo=fo=null,t.updateQueue=null,mo.current=ul,e=n(i,a)}while(yo)}if(mo.current=ol,t=null!==fo&&null!==fo.next,ho=0,bo=fo=go=null,_o=!1,t)throw Error(r(300));return e}function Ao(){var e=0!==vo;return vo=0,e}function So(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===bo?go.memoizedState=bo=e:bo=bo.next=e,bo}function Bo(){if(null===fo){var e=go.alternate;e=null!==e?e.memoizedState:null}else e=fo.next;var t=null===bo?go.memoizedState:bo.next;if(null!==t)bo=t,fo=e;else{if(null===e)throw Error(r(310));e={memoizedState:(fo=e).memoizedState,baseState:fo.baseState,baseQueue:fo.baseQueue,queue:fo.queue,next:null},null===bo?go.memoizedState=bo=e:bo=bo.next=e}return bo}function Eo(e,t){return"function"==typeof t?t(e):t}function zo(e){var t=Bo(),n=t.queue;if(null===n)throw Error(r(311));n.lastRenderedReducer=e;var i=fo,a=i.baseQueue,o=n.pending;if(null!==o){if(null!==a){var l=a.next;a.next=o.next,o.next=l}i.baseQueue=a=o,n.pending=null}if(null!==a){o=a.next,i=i.baseState;var s=l=null,u=null,c=o;do{var m=c.lane;if((ho&m)===m)null!==u&&(u=u.next={lane:0,action:c.action,hasEagerState:c.hasEagerState,eagerState:c.eagerState,next:null}),i=c.hasEagerState?c.eagerState:e(i,c.action);else{var p={lane:m,action:c.action,hasEagerState:c.hasEagerState,eagerState:c.eagerState,next:null};null===u?(s=u=p,l=i):u=u.next=p,go.lanes|=m,Os|=m}c=c.next}while(null!==c&&c!==o);null===u?l=i:u.next=s,li(i,t.memoizedState)||(vl=!0),t.memoizedState=i,t.baseState=l,t.baseQueue=u,n.lastRenderedState=i}if(null!==(e=n.interleaved)){a=e;do{o=a.lane,go.lanes|=o,Os|=o,a=a.next}while(a!==e)}else null===a&&(n.lanes=0);return[t.memoizedState,n.dispatch]}function No(e){var t=Bo(),n=t.queue;if(null===n)throw Error(r(311));n.lastRenderedReducer=e;var i=n.dispatch,a=n.pending,o=t.memoizedState;if(null!==a){n.pending=null;var l=a=a.next;do{o=e(o,l.action),l=l.next}while(l!==a);li(o,t.memoizedState)||(vl=!0),t.memoizedState=o,null===t.baseQueue&&(t.baseState=o),n.lastRenderedState=o}return[o,i]}function Po(){}function Io(e,t){var n=go,i=Bo(),a=t(),o=!li(i.memoizedState,a);if(o&&(i.memoizedState=a,vl=!0),i=i.queue,Ho(Lo.bind(null,n,i,e),[e]),i.getSnapshot!==t||o||null!==bo&&1&bo.memoizedState.tag){if(n.flags|=2048,Wo(9,Ro.bind(null,n,i,a,t),void 0,null),null===Ns)throw Error(r(349));0!=(30&ho)||To(n,t,a)}return a}function To(e,t,n){e.flags|=16384,e={getSnapshot:t,value:n},null===(t=go.updateQueue)?(t={lastEffect:null,stores:null},go.updateQueue=t,t.stores=[e]):null===(n=t.stores)?t.stores=[e]:n.push(e)}function Ro(e,t,n,i){t.value=n,t.getSnapshot=i,Mo(t)&&Oo(e)}function Lo(e,t,n){return n((function(){Mo(t)&&Oo(e)}))}function Mo(e){var t=e.getSnapshot;e=e.value;try{var n=t();return!li(e,n)}catch(e){return!0}}function Oo(e){var t=zr(e,1);null!==t&&iu(t,e,1,-1)}function jo(e){var t=So();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Eo,lastRenderedState:e},t.queue=e,e=e.dispatch=nl.bind(null,go,e),[t.memoizedState,e]}function Wo(e,t,n,i){return e={tag:e,create:t,destroy:n,deps:i,next:null},null===(t=go.updateQueue)?(t={lastEffect:null,stores:null},go.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(i=n.next,n.next=e,e.next=i,t.lastEffect=e),e}function Uo(){return Bo().memoizedState}function Fo(e,t,n,i){var a=So();go.flags|=e,a.memoizedState=Wo(1|t,n,void 0,void 0===i?null:i)}function Do(e,t,n,i){var a=Bo();i=void 0===i?null:i;var r=void 0;if(null!==fo){var o=fo.memoizedState;if(r=o.destroy,null!==i&&Co(i,o.deps))return void(a.memoizedState=Wo(t,n,r,i))}go.flags|=e,a.memoizedState=Wo(1|t,n,r,i)}function Yo(e,t){return Fo(8390656,8,e,t)}function Ho(e,t){return Do(2048,8,e,t)}function Go(e,t){return Do(4,2,e,t)}function Vo(e,t){return Do(4,4,e,t)}function Qo(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function $o(e,t,n){return n=null!=n?n.concat([e]):null,Do(4,4,Qo.bind(null,t,e),n)}function Jo(){}function Ko(e,t){var n=Bo();t=void 0===t?null:t;var i=n.memoizedState;return null!==i&&null!==t&&Co(t,i[1])?i[0]:(n.memoizedState=[e,t],e)}function qo(e,t){var n=Bo();t=void 0===t?null:t;var i=n.memoizedState;return null!==i&&null!==t&&Co(t,i[1])?i[0]:(e=e(),n.memoizedState=[e,t],e)}function Xo(e,t,n){return 0==(21&ho)?(e.baseState&&(e.baseState=!1,vl=!0),e.memoizedState=n):(li(n,t)||(n=gt(),go.lanes|=n,Os|=n,e.baseState=!0),t)}function Zo(e,t){var n=yt;yt=0!==n&&4>n?n:4,e(!0);var i=po.transition;po.transition={};try{e(!1),t()}finally{yt=n,po.transition=i}}function el(){return Bo().memoizedState}function tl(e,t,n){var i=nu(e);n={lane:i,action:n,hasEagerState:!1,eagerState:null,next:null},il(e)?al(t,n):null!==(n=Er(e,t,n,i))&&(iu(n,e,i,tu()),rl(n,t,i))}function nl(e,t,n){var i=nu(e),a={lane:i,action:n,hasEagerState:!1,eagerState:null,next:null};if(il(e))al(t,a);else{var r=e.alternate;if(0===e.lanes&&(null===r||0===r.lanes)&&null!==(r=t.lastRenderedReducer))try{var o=t.lastRenderedState,l=r(o,n);if(a.hasEagerState=!0,a.eagerState=l,li(l,o)){var s=t.interleaved;return null===s?(a.next=a,Br(t)):(a.next=s.next,s.next=a),void(t.interleaved=a)}}catch(e){}null!==(n=Er(e,t,a,i))&&(iu(n,e,i,a=tu()),rl(n,t,i))}}function il(e){var t=e.alternate;return e===go||null!==t&&t===go}function al(e,t){yo=_o=!0;var n=e.pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}function rl(e,t,n){if(0!=(4194240&n)){var i=t.lanes;n|=i&=e.pendingLanes,t.lanes=n,_t(e,n)}}var ol={readContext:Ar,useCallback:ko,useContext:ko,useEffect:ko,useImperativeHandle:ko,useInsertionEffect:ko,useLayoutEffect:ko,useMemo:ko,useReducer:ko,useRef:ko,useState:ko,useDebugValue:ko,useDeferredValue:ko,useTransition:ko,useMutableSource:ko,useSyncExternalStore:ko,useId:ko,unstable_isNewReconciler:!1},ll={readContext:Ar,useCallback:function(e,t){return So().memoizedState=[e,void 0===t?null:t],e},useContext:Ar,useEffect:Yo,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,Fo(4194308,4,Qo.bind(null,t,e),n)},useLayoutEffect:function(e,t){return Fo(4194308,4,e,t)},useInsertionEffect:function(e,t){return Fo(4,2,e,t)},useMemo:function(e,t){var n=So();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var i=So();return t=void 0!==n?n(t):t,i.memoizedState=i.baseState=t,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:t},i.queue=e,e=e.dispatch=tl.bind(null,go,e),[i.memoizedState,e]},useRef:function(e){return e={current:e},So().memoizedState=e},useState:jo,useDebugValue:Jo,useDeferredValue:function(e){return So().memoizedState=e},useTransition:function(){var e=jo(!1),t=e[0];return e=Zo.bind(null,e[1]),So().memoizedState=e,[t,e]},useMutableSource:function(){},useSyncExternalStore:function(e,t,n){var i=go,a=So();if(ar){if(void 0===n)throw Error(r(407));n=n()}else{if(n=t(),null===Ns)throw Error(r(349));0!=(30&ho)||To(i,t,n)}a.memoizedState=n;var o={value:n,getSnapshot:t};return a.queue=o,Yo(Lo.bind(null,i,o,e),[e]),i.flags|=2048,Wo(9,Ro.bind(null,i,o,n,t),void 0,null),n},useId:function(){var e=So(),t=Ns.identifierPrefix;if(ar){var n=qa;t=":"+t+"R"+(n=(Ka&~(1<<32-ot(Ka)-1)).toString(32)+n),0<(n=vo++)&&(t+="H"+n.toString(32)),t+=":"}else t=":"+t+"r"+(n=wo++).toString(32)+":";return e.memoizedState=t},unstable_isNewReconciler:!1},sl={readContext:Ar,useCallback:Ko,useContext:Ar,useEffect:Ho,useImperativeHandle:$o,useInsertionEffect:Go,useLayoutEffect:Vo,useMemo:qo,useReducer:zo,useRef:Uo,useState:function(){return zo(Eo)},useDebugValue:Jo,useDeferredValue:function(e){return Xo(Bo(),fo.memoizedState,e)},useTransition:function(){return[zo(Eo)[0],Bo().memoizedState]},useMutableSource:Po,useSyncExternalStore:Io,useId:el,unstable_isNewReconciler:!1},ul={readContext:Ar,useCallback:Ko,useContext:Ar,useEffect:Ho,useImperativeHandle:$o,useInsertionEffect:Go,useLayoutEffect:Vo,useMemo:qo,useReducer:No,useRef:Uo,useState:function(){return No(Eo)},useDebugValue:Jo,useDeferredValue:function(e){var t=Bo();return null===fo?t.memoizedState=e:Xo(t,fo.memoizedState,e)},useTransition:function(){return[No(Eo)[0],Bo().memoizedState]},useMutableSource:Po,useSyncExternalStore:Io,useId:el,unstable_isNewReconciler:!1};function cl(e,t){try{var n="",i=t;do{n+=F(i),i=i.return}while(i);var a=n}catch(e){a="\nError generating stack: "+e.message+"\n"+e.stack}return{value:e,source:t,stack:a,digest:null}}function ml(e,t,n){return{value:e,source:null,stack:null!=n?n:null,digest:null!=t?t:null}}function pl(e,t){try{console.error(t.value)}catch(e){setTimeout((function(){throw e}))}}var dl="function"==typeof WeakMap?WeakMap:Map;function hl(e,t,n){(n=Tr(-1,n)).tag=3,n.payload={element:null};var i=t.value;return n.callback=function(){Gs||(Gs=!0,Vs=i),pl(0,t)},n}function gl(e,t,n){(n=Tr(-1,n)).tag=3;var i=e.type.getDerivedStateFromError;if("function"==typeof i){var a=t.value;n.payload=function(){return i(a)},n.callback=function(){pl(0,t)}}var r=e.stateNode;return null!==r&&"function"==typeof r.componentDidCatch&&(n.callback=function(){pl(0,t),"function"!=typeof i&&(null===Qs?Qs=new Set([this]):Qs.add(this));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),n}function fl(e,t,n){var i=e.pingCache;if(null===i){i=e.pingCache=new dl;var a=new Set;i.set(t,a)}else void 0===(a=i.get(t))&&(a=new Set,i.set(t,a));a.has(n)||(a.add(n),e=Su.bind(null,e,t,n),t.then(e,e))}function bl(e){do{var t;if((t=13===e.tag)&&(t=null===(t=e.memoizedState)||null!==t.dehydrated),t)return e;e=e.return}while(null!==e);return null}function _l(e,t,n,i,a){return 0==(1&e.mode)?(e===t?e.flags|=65536:(e.flags|=128,n.flags|=131072,n.flags&=-52805,1===n.tag&&(null===n.alternate?n.tag=17:((t=Tr(-1,1)).tag=2,Rr(n,t,1))),n.lanes|=1),e):(e.flags|=65536,e.lanes=a,e)}var yl=v.ReactCurrentOwner,vl=!1;function wl(e,t,n,i){t.child=null===e?qr(t,null,n,i):Kr(t,e.child,n,i)}function kl(e,t,n,i,a){n=n.render;var r=t.ref;return xr(t,a),i=xo(e,t,n,i,r,a),n=Ao(),null===e||vl?(ar&&n&&er(t),t.flags|=1,wl(e,t,i,a),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~a,Gl(e,t,a))}function Cl(e,t,n,i,a){if(null===e){var r=n.type;return"function"!=typeof r||Tu(r)||void 0!==r.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Lu(n.type,null,i,t,t.mode,a)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=r,xl(e,t,r,i,a))}if(r=e.child,0==(e.lanes&a)){var o=r.memoizedProps;if((n=null!==(n=n.compare)?n:si)(o,i)&&e.ref===t.ref)return Gl(e,t,a)}return t.flags|=1,(e=Ru(r,i)).ref=t.ref,e.return=t,t.child=e}function xl(e,t,n,i,a){if(null!==e){var r=e.memoizedProps;if(si(r,i)&&e.ref===t.ref){if(vl=!1,t.pendingProps=i=r,0==(e.lanes&a))return t.lanes=e.lanes,Gl(e,t,a);0!=(131072&e.flags)&&(vl=!0)}}return Bl(e,t,n,i,a)}function Al(e,t,n){var i=t.pendingProps,a=i.children,r=null!==e?e.memoizedState:null;if("hidden"===i.mode)if(0==(1&t.mode))t.memoizedState={baseLanes:0,cachePool:null,transitions:null},Sa(Rs,Ts),Ts|=n;else{if(0==(1073741824&n))return e=null!==r?r.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e,cachePool:null,transitions:null},t.updateQueue=null,Sa(Rs,Ts),Ts|=e,null;t.memoizedState={baseLanes:0,cachePool:null,transitions:null},i=null!==r?r.baseLanes:n,Sa(Rs,Ts),Ts|=i}else null!==r?(i=r.baseLanes|n,t.memoizedState=null):i=n,Sa(Rs,Ts),Ts|=i;return wl(e,t,a,n),t.child}function Sl(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.flags|=512,t.flags|=2097152)}function Bl(e,t,n,i,a){var r=Ia(n)?Na:Ea.current;return r=Pa(t,r),xr(t,a),n=xo(e,t,n,i,r,a),i=Ao(),null===e||vl?(ar&&i&&er(t),t.flags|=1,wl(e,t,n,a),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~a,Gl(e,t,a))}function El(e,t,n,i,a){if(Ia(n)){var r=!0;Ma(t)}else r=!1;if(xr(t,a),null===t.stateNode)Hl(e,t),Yr(t,n,i),Gr(t,n,i,a),i=!0;else if(null===e){var o=t.stateNode,l=t.memoizedProps;o.props=l;var s=o.context,u=n.contextType;u="object"==typeof u&&null!==u?Ar(u):Pa(t,u=Ia(n)?Na:Ea.current);var c=n.getDerivedStateFromProps,m="function"==typeof c||"function"==typeof o.getSnapshotBeforeUpdate;m||"function"!=typeof o.UNSAFE_componentWillReceiveProps&&"function"!=typeof o.componentWillReceiveProps||(l!==i||s!==u)&&Hr(t,o,i,u),Nr=!1;var p=t.memoizedState;o.state=p,Or(t,i,o,a),s=t.memoizedState,l!==i||p!==s||za.current||Nr?("function"==typeof c&&(Ur(t,n,c,i),s=t.memoizedState),(l=Nr||Dr(t,n,l,i,p,s,u))?(m||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||("function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount()),"function"==typeof o.componentDidMount&&(t.flags|=4194308)):("function"==typeof o.componentDidMount&&(t.flags|=4194308),t.memoizedProps=i,t.memoizedState=s),o.props=i,o.state=s,o.context=u,i=l):("function"==typeof o.componentDidMount&&(t.flags|=4194308),i=!1)}else{o=t.stateNode,Ir(e,t),l=t.memoizedProps,u=t.type===t.elementType?l:fr(t.type,l),o.props=u,m=t.pendingProps,p=o.context,s="object"==typeof(s=n.contextType)&&null!==s?Ar(s):Pa(t,s=Ia(n)?Na:Ea.current);var d=n.getDerivedStateFromProps;(c="function"==typeof d||"function"==typeof o.getSnapshotBeforeUpdate)||"function"!=typeof o.UNSAFE_componentWillReceiveProps&&"function"!=typeof o.componentWillReceiveProps||(l!==m||p!==s)&&Hr(t,o,i,s),Nr=!1,p=t.memoizedState,o.state=p,Or(t,i,o,a);var h=t.memoizedState;l!==m||p!==h||za.current||Nr?("function"==typeof d&&(Ur(t,n,d,i),h=t.memoizedState),(u=Nr||Dr(t,n,u,i,p,h,s)||!1)?(c||"function"!=typeof o.UNSAFE_componentWillUpdate&&"function"!=typeof o.componentWillUpdate||("function"==typeof o.componentWillUpdate&&o.componentWillUpdate(i,h,s),"function"==typeof o.UNSAFE_componentWillUpdate&&o.UNSAFE_componentWillUpdate(i,h,s)),"function"==typeof o.componentDidUpdate&&(t.flags|=4),"function"==typeof o.getSnapshotBeforeUpdate&&(t.flags|=1024)):("function"!=typeof o.componentDidUpdate||l===e.memoizedProps&&p===e.memoizedState||(t.flags|=4),"function"!=typeof o.getSnapshotBeforeUpdate||l===e.memoizedProps&&p===e.memoizedState||(t.flags|=1024),t.memoizedProps=i,t.memoizedState=h),o.props=i,o.state=h,o.context=s,i=u):("function"!=typeof o.componentDidUpdate||l===e.memoizedProps&&p===e.memoizedState||(t.flags|=4),"function"!=typeof o.getSnapshotBeforeUpdate||l===e.memoizedProps&&p===e.memoizedState||(t.flags|=1024),i=!1)}return zl(e,t,n,i,r,a)}function zl(e,t,n,i,a,r){Sl(e,t);var o=0!=(128&t.flags);if(!i&&!o)return a&&Oa(t,n,!1),Gl(e,t,r);i=t.stateNode,yl.current=t;var l=o&&"function"!=typeof n.getDerivedStateFromError?null:i.render();return t.flags|=1,null!==e&&o?(t.child=Kr(t,e.child,null,r),t.child=Kr(t,null,l,r)):wl(e,t,l,r),t.memoizedState=i.state,a&&Oa(t,n,!0),t.child}function Nl(e){var t=e.stateNode;t.pendingContext?Ra(0,t.pendingContext,t.pendingContext!==t.context):t.context&&Ra(0,t.context,!1),io(e,t.containerInfo)}function Pl(e,t,n,i,a){return dr(),hr(a),t.flags|=256,wl(e,t,n,i),t.child}var Il,Tl,Rl,Ll,Ml={dehydrated:null,treeContext:null,retryLane:0};function Ol(e){return{baseLanes:e,cachePool:null,transitions:null}}function jl(e,t,n){var i,a=t.pendingProps,o=lo.current,l=!1,s=0!=(128&t.flags);if((i=s)||(i=(null===e||null!==e.memoizedState)&&0!=(2&o)),i?(l=!0,t.flags&=-129):null!==e&&null===e.memoizedState||(o|=1),Sa(lo,1&o),null===e)return ur(t),null!==(e=t.memoizedState)&&null!==(e=e.dehydrated)?(0==(1&t.mode)?t.lanes=1:"$!"===e.data?t.lanes=8:t.lanes=1073741824,null):(s=a.children,e=a.fallback,l?(a=t.mode,l=t.child,s={mode:"hidden",children:s},0==(1&a)&&null!==l?(l.childLanes=0,l.pendingProps=s):l=Ou(s,a,0,null),e=Mu(e,a,n,null),l.return=t,e.return=t,l.sibling=e,t.child=l,t.child.memoizedState=Ol(n),t.memoizedState=Ml,e):Wl(t,s));if(null!==(o=e.memoizedState)&&null!==(i=o.dehydrated))return function(e,t,n,i,a,o,l){if(n)return 256&t.flags?(t.flags&=-257,Ul(e,t,l,i=ml(Error(r(422))))):null!==t.memoizedState?(t.child=e.child,t.flags|=128,null):(o=i.fallback,a=t.mode,i=Ou({mode:"visible",children:i.children},a,0,null),(o=Mu(o,a,l,null)).flags|=2,i.return=t,o.return=t,i.sibling=o,t.child=i,0!=(1&t.mode)&&Kr(t,e.child,null,l),t.child.memoizedState=Ol(l),t.memoizedState=Ml,o);if(0==(1&t.mode))return Ul(e,t,l,null);if("$!"===a.data){if(i=a.nextSibling&&a.nextSibling.dataset)var s=i.dgst;return i=s,Ul(e,t,l,i=ml(o=Error(r(419)),i,void 0))}if(s=0!=(l&e.childLanes),vl||s){if(null!==(i=Ns)){switch(l&-l){case 4:a=2;break;case 16:a=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:a=32;break;case 536870912:a=268435456;break;default:a=0}0!==(a=0!=(a&(i.suspendedLanes|l))?0:a)&&a!==o.retryLane&&(o.retryLane=a,zr(e,a),iu(i,e,a,-1))}return fu(),Ul(e,t,l,i=ml(Error(r(421))))}return"$?"===a.data?(t.flags|=128,t.child=e.child,t=Eu.bind(null,e),a._reactRetry=t,null):(e=o.treeContext,ir=ua(a.nextSibling),nr=t,ar=!0,rr=null,null!==e&&(Qa[$a++]=Ka,Qa[$a++]=qa,Qa[$a++]=Ja,Ka=e.id,qa=e.overflow,Ja=t),(t=Wl(t,i.children)).flags|=4096,t)}(e,t,s,a,i,o,n);if(l){l=a.fallback,s=t.mode,i=(o=e.child).sibling;var u={mode:"hidden",children:a.children};return 0==(1&s)&&t.child!==o?((a=t.child).childLanes=0,a.pendingProps=u,t.deletions=null):(a=Ru(o,u)).subtreeFlags=14680064&o.subtreeFlags,null!==i?l=Ru(i,l):(l=Mu(l,s,n,null)).flags|=2,l.return=t,a.return=t,a.sibling=l,t.child=a,a=l,l=t.child,s=null===(s=e.child.memoizedState)?Ol(n):{baseLanes:s.baseLanes|n,cachePool:null,transitions:s.transitions},l.memoizedState=s,l.childLanes=e.childLanes&~n,t.memoizedState=Ml,a}return e=(l=e.child).sibling,a=Ru(l,{mode:"visible",children:a.children}),0==(1&t.mode)&&(a.lanes=n),a.return=t,a.sibling=null,null!==e&&(null===(n=t.deletions)?(t.deletions=[e],t.flags|=16):n.push(e)),t.child=a,t.memoizedState=null,a}function Wl(e,t){return(t=Ou({mode:"visible",children:t},e.mode,0,null)).return=e,e.child=t}function Ul(e,t,n,i){return null!==i&&hr(i),Kr(t,e.child,null,n),(e=Wl(t,t.pendingProps.children)).flags|=2,t.memoizedState=null,e}function Fl(e,t,n){e.lanes|=t;var i=e.alternate;null!==i&&(i.lanes|=t),Cr(e.return,t,n)}function Dl(e,t,n,i,a){var r=e.memoizedState;null===r?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:i,tail:n,tailMode:a}:(r.isBackwards=t,r.rendering=null,r.renderingStartTime=0,r.last=i,r.tail=n,r.tailMode=a)}function Yl(e,t,n){var i=t.pendingProps,a=i.revealOrder,r=i.tail;if(wl(e,t,i.children,n),0!=(2&(i=lo.current)))i=1&i|2,t.flags|=128;else{if(null!==e&&0!=(128&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Fl(e,n,t);else if(19===e.tag)Fl(e,n,t);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}i&=1}if(Sa(lo,i),0==(1&t.mode))t.memoizedState=null;else switch(a){case"forwards":for(n=t.child,a=null;null!==n;)null!==(e=n.alternate)&&null===so(e)&&(a=n),n=n.sibling;null===(n=a)?(a=t.child,t.child=null):(a=n.sibling,n.sibling=null),Dl(t,!1,a,n,r);break;case"backwards":for(n=null,a=t.child,t.child=null;null!==a;){if(null!==(e=a.alternate)&&null===so(e)){t.child=a;break}e=a.sibling,a.sibling=n,n=a,a=e}Dl(t,!0,n,null,r);break;case"together":Dl(t,!1,null,null,void 0);break;default:t.memoizedState=null}return t.child}function Hl(e,t){0==(1&t.mode)&&null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2)}function Gl(e,t,n){if(null!==e&&(t.dependencies=e.dependencies),Os|=t.lanes,0==(n&t.childLanes))return null;if(null!==e&&t.child!==e.child)throw Error(r(153));if(null!==t.child){for(n=Ru(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Ru(e,e.pendingProps)).return=t;n.sibling=null}return t.child}function Vl(e,t){if(!ar)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var i=null;null!==n;)null!==n.alternate&&(i=n),n=n.sibling;null===i?t||null===e.tail?e.tail=null:e.tail.sibling=null:i.sibling=null}}function Ql(e){var t=null!==e.alternate&&e.alternate.child===e.child,n=0,i=0;if(t)for(var a=e.child;null!==a;)n|=a.lanes|a.childLanes,i|=14680064&a.subtreeFlags,i|=14680064&a.flags,a.return=e,a=a.sibling;else for(a=e.child;null!==a;)n|=a.lanes|a.childLanes,i|=a.subtreeFlags,i|=a.flags,a.return=e,a=a.sibling;return e.subtreeFlags|=i,e.childLanes=n,t}function $l(e,t,n){var i=t.pendingProps;switch(tr(t),t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return Ql(t),null;case 1:case 17:return Ia(t.type)&&Ta(),Ql(t),null;case 3:return i=t.stateNode,ao(),Aa(za),Aa(Ea),co(),i.pendingContext&&(i.context=i.pendingContext,i.pendingContext=null),null!==e&&null!==e.child||(mr(t)?t.flags|=4:null===e||e.memoizedState.isDehydrated&&0==(256&t.flags)||(t.flags|=1024,null!==rr&&(lu(rr),rr=null))),Tl(e,t),Ql(t),null;case 5:oo(t);var a=no(to.current);if(n=t.type,null!==e&&null!=t.stateNode)Rl(e,t,n,i,a),e.ref!==t.ref&&(t.flags|=512,t.flags|=2097152);else{if(!i){if(null===t.stateNode)throw Error(r(166));return Ql(t),null}if(e=no(Zr.current),mr(t)){i=t.stateNode,n=t.type;var o=t.memoizedProps;switch(i[pa]=t,i[da]=o,e=0!=(1&t.mode),n){case"dialog":Wi("cancel",i),Wi("close",i);break;case"iframe":case"object":case"embed":Wi("load",i);break;case"video":case"audio":for(a=0;a<Li.length;a++)Wi(Li[a],i);break;case"source":Wi("error",i);break;case"img":case"image":case"link":Wi("error",i),Wi("load",i);break;case"details":Wi("toggle",i);break;case"input":K(i,o),Wi("invalid",i);break;case"select":i._wrapperState={wasMultiple:!!o.multiple},Wi("invalid",i);break;case"textarea":ae(i,o),Wi("invalid",i)}for(var s in _e(n,o),a=null,o)if(o.hasOwnProperty(s)){var u=o[s];"children"===s?"string"==typeof u?i.textContent!==u&&(!0!==o.suppressHydrationWarning&&Xi(i.textContent,u,e),a=["children",u]):"number"==typeof u&&i.textContent!==""+u&&(!0!==o.suppressHydrationWarning&&Xi(i.textContent,u,e),a=["children",""+u]):l.hasOwnProperty(s)&&null!=u&&"onScroll"===s&&Wi("scroll",i)}switch(n){case"input":V(i),Z(i,o,!0);break;case"textarea":V(i),oe(i);break;case"select":case"option":break;default:"function"==typeof o.onClick&&(i.onclick=Zi)}i=a,t.updateQueue=i,null!==i&&(t.flags|=4)}else{s=9===a.nodeType?a:a.ownerDocument,"http://www.w3.org/1999/xhtml"===e&&(e=le(n)),"http://www.w3.org/1999/xhtml"===e?"script"===n?((e=s.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof i.is?e=s.createElement(n,{is:i.is}):(e=s.createElement(n),"select"===n&&(s=e,i.multiple?s.multiple=!0:i.size&&(s.size=i.size))):e=s.createElementNS(e,n),e[pa]=t,e[da]=i,Il(e,t,!1,!1),t.stateNode=e;e:{switch(s=ye(n,i),n){case"dialog":Wi("cancel",e),Wi("close",e),a=i;break;case"iframe":case"object":case"embed":Wi("load",e),a=i;break;case"video":case"audio":for(a=0;a<Li.length;a++)Wi(Li[a],e);a=i;break;case"source":Wi("error",e),a=i;break;case"img":case"image":case"link":Wi("error",e),Wi("load",e),a=i;break;case"details":Wi("toggle",e),a=i;break;case"input":K(e,i),a=J(e,i),Wi("invalid",e);break;case"option":default:a=i;break;case"select":e._wrapperState={wasMultiple:!!i.multiple},a=O({},i,{value:void 0}),Wi("invalid",e);break;case"textarea":ae(e,i),a=ie(e,i),Wi("invalid",e)}for(o in _e(n,a),u=a)if(u.hasOwnProperty(o)){var c=u[o];"style"===o?fe(e,c):"dangerouslySetInnerHTML"===o?null!=(c=c?c.__html:void 0)&&me(e,c):"children"===o?"string"==typeof c?("textarea"!==n||""!==c)&&pe(e,c):"number"==typeof c&&pe(e,""+c):"suppressContentEditableWarning"!==o&&"suppressHydrationWarning"!==o&&"autoFocus"!==o&&(l.hasOwnProperty(o)?null!=c&&"onScroll"===o&&Wi("scroll",e):null!=c&&y(e,o,c,s))}switch(n){case"input":V(e),Z(e,i,!1);break;case"textarea":V(e),oe(e);break;case"option":null!=i.value&&e.setAttribute("value",""+H(i.value));break;case"select":e.multiple=!!i.multiple,null!=(o=i.value)?ne(e,!!i.multiple,o,!1):null!=i.defaultValue&&ne(e,!!i.multiple,i.defaultValue,!0);break;default:"function"==typeof a.onClick&&(e.onclick=Zi)}switch(n){case"button":case"input":case"select":case"textarea":i=!!i.autoFocus;break e;case"img":i=!0;break e;default:i=!1}}i&&(t.flags|=4)}null!==t.ref&&(t.flags|=512,t.flags|=2097152)}return Ql(t),null;case 6:if(e&&null!=t.stateNode)Ll(e,t,e.memoizedProps,i);else{if("string"!=typeof i&&null===t.stateNode)throw Error(r(166));if(n=no(to.current),no(Zr.current),mr(t)){if(i=t.stateNode,n=t.memoizedProps,i[pa]=t,(o=i.nodeValue!==n)&&null!==(e=nr))switch(e.tag){case 3:Xi(i.nodeValue,n,0!=(1&e.mode));break;case 5:!0!==e.memoizedProps.suppressHydrationWarning&&Xi(i.nodeValue,n,0!=(1&e.mode))}o&&(t.flags|=4)}else(i=(9===n.nodeType?n:n.ownerDocument).createTextNode(i))[pa]=t,t.stateNode=i}return Ql(t),null;case 13:if(Aa(lo),i=t.memoizedState,null===e||null!==e.memoizedState&&null!==e.memoizedState.dehydrated){if(ar&&null!==ir&&0!=(1&t.mode)&&0==(128&t.flags))pr(),dr(),t.flags|=98560,o=!1;else if(o=mr(t),null!==i&&null!==i.dehydrated){if(null===e){if(!o)throw Error(r(318));if(!(o=null!==(o=t.memoizedState)?o.dehydrated:null))throw Error(r(317));o[pa]=t}else dr(),0==(128&t.flags)&&(t.memoizedState=null),t.flags|=4;Ql(t),o=!1}else null!==rr&&(lu(rr),rr=null),o=!0;if(!o)return 65536&t.flags?t:null}return 0!=(128&t.flags)?(t.lanes=n,t):((i=null!==i)!=(null!==e&&null!==e.memoizedState)&&i&&(t.child.flags|=8192,0!=(1&t.mode)&&(null===e||0!=(1&lo.current)?0===Ls&&(Ls=3):fu())),null!==t.updateQueue&&(t.flags|=4),Ql(t),null);case 4:return ao(),Tl(e,t),null===e&&Di(t.stateNode.containerInfo),Ql(t),null;case 10:return kr(t.type._context),Ql(t),null;case 19:if(Aa(lo),null===(o=t.memoizedState))return Ql(t),null;if(i=0!=(128&t.flags),null===(s=o.rendering))if(i)Vl(o,!1);else{if(0!==Ls||null!==e&&0!=(128&e.flags))for(e=t.child;null!==e;){if(null!==(s=so(e))){for(t.flags|=128,Vl(o,!1),null!==(i=s.updateQueue)&&(t.updateQueue=i,t.flags|=4),t.subtreeFlags=0,i=n,n=t.child;null!==n;)e=i,(o=n).flags&=14680066,null===(s=o.alternate)?(o.childLanes=0,o.lanes=e,o.child=null,o.subtreeFlags=0,o.memoizedProps=null,o.memoizedState=null,o.updateQueue=null,o.dependencies=null,o.stateNode=null):(o.childLanes=s.childLanes,o.lanes=s.lanes,o.child=s.child,o.subtreeFlags=0,o.deletions=null,o.memoizedProps=s.memoizedProps,o.memoizedState=s.memoizedState,o.updateQueue=s.updateQueue,o.type=s.type,e=s.dependencies,o.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return Sa(lo,1&lo.current|2),t.child}e=e.sibling}null!==o.tail&&qe()>Ys&&(t.flags|=128,i=!0,Vl(o,!1),t.lanes=4194304)}else{if(!i)if(null!==(e=so(s))){if(t.flags|=128,i=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.flags|=4),Vl(o,!0),null===o.tail&&"hidden"===o.tailMode&&!s.alternate&&!ar)return Ql(t),null}else 2*qe()-o.renderingStartTime>Ys&&1073741824!==n&&(t.flags|=128,i=!0,Vl(o,!1),t.lanes=4194304);o.isBackwards?(s.sibling=t.child,t.child=s):(null!==(n=o.last)?n.sibling=s:t.child=s,o.last=s)}return null!==o.tail?(t=o.tail,o.rendering=t,o.tail=t.sibling,o.renderingStartTime=qe(),t.sibling=null,n=lo.current,Sa(lo,i?1&n|2:1&n),t):(Ql(t),null);case 22:case 23:return pu(),i=null!==t.memoizedState,null!==e&&null!==e.memoizedState!==i&&(t.flags|=8192),i&&0!=(1&t.mode)?0!=(1073741824&Ts)&&(Ql(t),6&t.subtreeFlags&&(t.flags|=8192)):Ql(t),null;case 24:case 25:return null}throw Error(r(156,t.tag))}function Jl(e,t){switch(tr(t),t.tag){case 1:return Ia(t.type)&&Ta(),65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 3:return ao(),Aa(za),Aa(Ea),co(),0!=(65536&(e=t.flags))&&0==(128&e)?(t.flags=-65537&e|128,t):null;case 5:return oo(t),null;case 13:if(Aa(lo),null!==(e=t.memoizedState)&&null!==e.dehydrated){if(null===t.alternate)throw Error(r(340));dr()}return 65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 19:return Aa(lo),null;case 4:return ao(),null;case 10:return kr(t.type._context),null;case 22:case 23:return pu(),null;default:return null}}Il=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Tl=function(){},Rl=function(e,t,n,i){var a=e.memoizedProps;if(a!==i){e=t.stateNode,no(Zr.current);var r,o=null;switch(n){case"input":a=J(e,a),i=J(e,i),o=[];break;case"select":a=O({},a,{value:void 0}),i=O({},i,{value:void 0}),o=[];break;case"textarea":a=ie(e,a),i=ie(e,i),o=[];break;default:"function"!=typeof a.onClick&&"function"==typeof i.onClick&&(e.onclick=Zi)}for(c in _e(n,i),n=null,a)if(!i.hasOwnProperty(c)&&a.hasOwnProperty(c)&&null!=a[c])if("style"===c){var s=a[c];for(r in s)s.hasOwnProperty(r)&&(n||(n={}),n[r]="")}else"dangerouslySetInnerHTML"!==c&&"children"!==c&&"suppressContentEditableWarning"!==c&&"suppressHydrationWarning"!==c&&"autoFocus"!==c&&(l.hasOwnProperty(c)?o||(o=[]):(o=o||[]).push(c,null));for(c in i){var u=i[c];if(s=null!=a?a[c]:void 0,i.hasOwnProperty(c)&&u!==s&&(null!=u||null!=s))if("style"===c)if(s){for(r in s)!s.hasOwnProperty(r)||u&&u.hasOwnProperty(r)||(n||(n={}),n[r]="");for(r in u)u.hasOwnProperty(r)&&s[r]!==u[r]&&(n||(n={}),n[r]=u[r])}else n||(o||(o=[]),o.push(c,n)),n=u;else"dangerouslySetInnerHTML"===c?(u=u?u.__html:void 0,s=s?s.__html:void 0,null!=u&&s!==u&&(o=o||[]).push(c,u)):"children"===c?"string"!=typeof u&&"number"!=typeof u||(o=o||[]).push(c,""+u):"suppressContentEditableWarning"!==c&&"suppressHydrationWarning"!==c&&(l.hasOwnProperty(c)?(null!=u&&"onScroll"===c&&Wi("scroll",e),o||s===u||(o=[])):(o=o||[]).push(c,u))}n&&(o=o||[]).push("style",n);var c=o;(t.updateQueue=c)&&(t.flags|=4)}},Ll=function(e,t,n,i){n!==i&&(t.flags|=4)};var Kl=!1,ql=!1,Xl="function"==typeof WeakSet?WeakSet:Set,Zl=null;function es(e,t){var n=e.ref;if(null!==n)if("function"==typeof n)try{n(null)}catch(n){Au(e,t,n)}else n.current=null}function ts(e,t,n){try{n()}catch(n){Au(e,t,n)}}var ns=!1;function is(e,t,n){var i=t.updateQueue;if(null!==(i=null!==i?i.lastEffect:null)){var a=i=i.next;do{if((a.tag&e)===e){var r=a.destroy;a.destroy=void 0,void 0!==r&&ts(t,n,r)}a=a.next}while(a!==i)}}function as(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var i=n.create;n.destroy=i()}n=n.next}while(n!==t)}}function rs(e){var t=e.ref;if(null!==t){var n=e.stateNode;e.tag,e=n,"function"==typeof t?t(e):t.current=e}}function os(e){var t=e.alternate;null!==t&&(e.alternate=null,os(t)),e.child=null,e.deletions=null,e.sibling=null,5===e.tag&&null!==(t=e.stateNode)&&(delete t[pa],delete t[da],delete t[ga],delete t[fa],delete t[ba]),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function ls(e){return 5===e.tag||3===e.tag||4===e.tag}function ss(e){e:for(;;){for(;null===e.sibling;){if(null===e.return||ls(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;5!==e.tag&&6!==e.tag&&18!==e.tag;){if(2&e.flags)continue e;if(null===e.child||4===e.tag)continue e;e.child.return=e,e=e.child}if(!(2&e.flags))return e.stateNode}}function us(e,t,n){var i=e.tag;if(5===i||6===i)e=e.stateNode,t?8===n.nodeType?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(8===n.nodeType?(t=n.parentNode).insertBefore(e,n):(t=n).appendChild(e),null!=(n=n._reactRootContainer)||null!==t.onclick||(t.onclick=Zi));else if(4!==i&&null!==(e=e.child))for(us(e,t,n),e=e.sibling;null!==e;)us(e,t,n),e=e.sibling}function cs(e,t,n){var i=e.tag;if(5===i||6===i)e=e.stateNode,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==i&&null!==(e=e.child))for(cs(e,t,n),e=e.sibling;null!==e;)cs(e,t,n),e=e.sibling}var ms=null,ps=!1;function ds(e,t,n){for(n=n.child;null!==n;)hs(e,t,n),n=n.sibling}function hs(e,t,n){if(rt&&"function"==typeof rt.onCommitFiberUnmount)try{rt.onCommitFiberUnmount(at,n)}catch(e){}switch(n.tag){case 5:ql||es(n,t);case 6:var i=ms,a=ps;ms=null,ds(e,t,n),ps=a,null!==(ms=i)&&(ps?(e=ms,n=n.stateNode,8===e.nodeType?e.parentNode.removeChild(n):e.removeChild(n)):ms.removeChild(n.stateNode));break;case 18:null!==ms&&(ps?(e=ms,n=n.stateNode,8===e.nodeType?sa(e.parentNode,n):1===e.nodeType&&sa(e,n),Dt(e)):sa(ms,n.stateNode));break;case 4:i=ms,a=ps,ms=n.stateNode.containerInfo,ps=!0,ds(e,t,n),ms=i,ps=a;break;case 0:case 11:case 14:case 15:if(!ql&&null!==(i=n.updateQueue)&&null!==(i=i.lastEffect)){a=i=i.next;do{var r=a,o=r.destroy;r=r.tag,void 0!==o&&(0!=(2&r)||0!=(4&r))&&ts(n,t,o),a=a.next}while(a!==i)}ds(e,t,n);break;case 1:if(!ql&&(es(n,t),"function"==typeof(i=n.stateNode).componentWillUnmount))try{i.props=n.memoizedProps,i.state=n.memoizedState,i.componentWillUnmount()}catch(e){Au(n,t,e)}ds(e,t,n);break;case 21:ds(e,t,n);break;case 22:1&n.mode?(ql=(i=ql)||null!==n.memoizedState,ds(e,t,n),ql=i):ds(e,t,n);break;default:ds(e,t,n)}}function gs(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new Xl),t.forEach((function(t){var i=zu.bind(null,e,t);n.has(t)||(n.add(t),t.then(i,i))}))}}function fs(e,t){var n=t.deletions;if(null!==n)for(var i=0;i<n.length;i++){var a=n[i];try{var o=e,l=t,s=l;e:for(;null!==s;){switch(s.tag){case 5:ms=s.stateNode,ps=!1;break e;case 3:case 4:ms=s.stateNode.containerInfo,ps=!0;break e}s=s.return}if(null===ms)throw Error(r(160));hs(o,l,a),ms=null,ps=!1;var u=a.alternate;null!==u&&(u.return=null),a.return=null}catch(e){Au(a,t,e)}}if(12854&t.subtreeFlags)for(t=t.child;null!==t;)bs(t,e),t=t.sibling}function bs(e,t){var n=e.alternate,i=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:if(fs(t,e),_s(e),4&i){try{is(3,e,e.return),as(3,e)}catch(t){Au(e,e.return,t)}try{is(5,e,e.return)}catch(t){Au(e,e.return,t)}}break;case 1:fs(t,e),_s(e),512&i&&null!==n&&es(n,n.return);break;case 5:if(fs(t,e),_s(e),512&i&&null!==n&&es(n,n.return),32&e.flags){var a=e.stateNode;try{pe(a,"")}catch(t){Au(e,e.return,t)}}if(4&i&&null!=(a=e.stateNode)){var o=e.memoizedProps,l=null!==n?n.memoizedProps:o,s=e.type,u=e.updateQueue;if(e.updateQueue=null,null!==u)try{"input"===s&&"radio"===o.type&&null!=o.name&&q(a,o),ye(s,l);var c=ye(s,o);for(l=0;l<u.length;l+=2){var m=u[l],p=u[l+1];"style"===m?fe(a,p):"dangerouslySetInnerHTML"===m?me(a,p):"children"===m?pe(a,p):y(a,m,p,c)}switch(s){case"input":X(a,o);break;case"textarea":re(a,o);break;case"select":var d=a._wrapperState.wasMultiple;a._wrapperState.wasMultiple=!!o.multiple;var h=o.value;null!=h?ne(a,!!o.multiple,h,!1):d!==!!o.multiple&&(null!=o.defaultValue?ne(a,!!o.multiple,o.defaultValue,!0):ne(a,!!o.multiple,o.multiple?[]:"",!1))}a[da]=o}catch(t){Au(e,e.return,t)}}break;case 6:if(fs(t,e),_s(e),4&i){if(null===e.stateNode)throw Error(r(162));a=e.stateNode,o=e.memoizedProps;try{a.nodeValue=o}catch(t){Au(e,e.return,t)}}break;case 3:if(fs(t,e),_s(e),4&i&&null!==n&&n.memoizedState.isDehydrated)try{Dt(t.containerInfo)}catch(t){Au(e,e.return,t)}break;case 4:default:fs(t,e),_s(e);break;case 13:fs(t,e),_s(e),8192&(a=e.child).flags&&(o=null!==a.memoizedState,a.stateNode.isHidden=o,!o||null!==a.alternate&&null!==a.alternate.memoizedState||(Ds=qe())),4&i&&gs(e);break;case 22:if(m=null!==n&&null!==n.memoizedState,1&e.mode?(ql=(c=ql)||m,fs(t,e),ql=c):fs(t,e),_s(e),8192&i){if(c=null!==e.memoizedState,(e.stateNode.isHidden=c)&&!m&&0!=(1&e.mode))for(Zl=e,m=e.child;null!==m;){for(p=Zl=m;null!==Zl;){switch(h=(d=Zl).child,d.tag){case 0:case 11:case 14:case 15:is(4,d,d.return);break;case 1:es(d,d.return);var g=d.stateNode;if("function"==typeof g.componentWillUnmount){i=d,n=d.return;try{t=i,g.props=t.memoizedProps,g.state=t.memoizedState,g.componentWillUnmount()}catch(e){Au(i,n,e)}}break;case 5:es(d,d.return);break;case 22:if(null!==d.memoizedState){ks(p);continue}}null!==h?(h.return=d,Zl=h):ks(p)}m=m.sibling}e:for(m=null,p=e;;){if(5===p.tag){if(null===m){m=p;try{a=p.stateNode,c?"function"==typeof(o=a.style).setProperty?o.setProperty("display","none","important"):o.display="none":(s=p.stateNode,l=null!=(u=p.memoizedProps.style)&&u.hasOwnProperty("display")?u.display:null,s.style.display=ge("display",l))}catch(t){Au(e,e.return,t)}}}else if(6===p.tag){if(null===m)try{p.stateNode.nodeValue=c?"":p.memoizedProps}catch(t){Au(e,e.return,t)}}else if((22!==p.tag&&23!==p.tag||null===p.memoizedState||p===e)&&null!==p.child){p.child.return=p,p=p.child;continue}if(p===e)break e;for(;null===p.sibling;){if(null===p.return||p.return===e)break e;m===p&&(m=null),p=p.return}m===p&&(m=null),p.sibling.return=p.return,p=p.sibling}}break;case 19:fs(t,e),_s(e),4&i&&gs(e);case 21:}}function _s(e){var t=e.flags;if(2&t){try{e:{for(var n=e.return;null!==n;){if(ls(n)){var i=n;break e}n=n.return}throw Error(r(160))}switch(i.tag){case 5:var a=i.stateNode;32&i.flags&&(pe(a,""),i.flags&=-33),cs(e,ss(e),a);break;case 3:case 4:var o=i.stateNode.containerInfo;us(e,ss(e),o);break;default:throw Error(r(161))}}catch(t){Au(e,e.return,t)}e.flags&=-3}4096&t&&(e.flags&=-4097)}function ys(e,t,n){Zl=e,vs(e,t,n)}function vs(e,t,n){for(var i=0!=(1&e.mode);null!==Zl;){var a=Zl,r=a.child;if(22===a.tag&&i){var o=null!==a.memoizedState||Kl;if(!o){var l=a.alternate,s=null!==l&&null!==l.memoizedState||ql;l=Kl;var u=ql;if(Kl=o,(ql=s)&&!u)for(Zl=a;null!==Zl;)s=(o=Zl).child,22===o.tag&&null!==o.memoizedState?Cs(a):null!==s?(s.return=o,Zl=s):Cs(a);for(;null!==r;)Zl=r,vs(r,t,n),r=r.sibling;Zl=a,Kl=l,ql=u}ws(e)}else 0!=(8772&a.subtreeFlags)&&null!==r?(r.return=a,Zl=r):ws(e)}}function ws(e){for(;null!==Zl;){var t=Zl;if(0!=(8772&t.flags)){var n=t.alternate;try{if(0!=(8772&t.flags))switch(t.tag){case 0:case 11:case 15:ql||as(5,t);break;case 1:var i=t.stateNode;if(4&t.flags&&!ql)if(null===n)i.componentDidMount();else{var a=t.elementType===t.type?n.memoizedProps:fr(t.type,n.memoizedProps);i.componentDidUpdate(a,n.memoizedState,i.__reactInternalSnapshotBeforeUpdate)}var o=t.updateQueue;null!==o&&jr(t,o,i);break;case 3:var l=t.updateQueue;if(null!==l){if(n=null,null!==t.child)switch(t.child.tag){case 5:case 1:n=t.child.stateNode}jr(t,l,n)}break;case 5:var s=t.stateNode;if(null===n&&4&t.flags){n=s;var u=t.memoizedProps;switch(t.type){case"button":case"input":case"select":case"textarea":u.autoFocus&&n.focus();break;case"img":u.src&&(n.src=u.src)}}break;case 6:case 4:case 12:case 19:case 17:case 21:case 22:case 23:case 25:break;case 13:if(null===t.memoizedState){var c=t.alternate;if(null!==c){var m=c.memoizedState;if(null!==m){var p=m.dehydrated;null!==p&&Dt(p)}}}break;default:throw Error(r(163))}ql||512&t.flags&&rs(t)}catch(e){Au(t,t.return,e)}}if(t===e){Zl=null;break}if(null!==(n=t.sibling)){n.return=t.return,Zl=n;break}Zl=t.return}}function ks(e){for(;null!==Zl;){var t=Zl;if(t===e){Zl=null;break}var n=t.sibling;if(null!==n){n.return=t.return,Zl=n;break}Zl=t.return}}function Cs(e){for(;null!==Zl;){var t=Zl;try{switch(t.tag){case 0:case 11:case 15:var n=t.return;try{as(4,t)}catch(e){Au(t,n,e)}break;case 1:var i=t.stateNode;if("function"==typeof i.componentDidMount){var a=t.return;try{i.componentDidMount()}catch(e){Au(t,a,e)}}var r=t.return;try{rs(t)}catch(e){Au(t,r,e)}break;case 5:var o=t.return;try{rs(t)}catch(e){Au(t,o,e)}}}catch(e){Au(t,t.return,e)}if(t===e){Zl=null;break}var l=t.sibling;if(null!==l){l.return=t.return,Zl=l;break}Zl=t.return}}var xs,As=Math.ceil,Ss=v.ReactCurrentDispatcher,Bs=v.ReactCurrentOwner,Es=v.ReactCurrentBatchConfig,zs=0,Ns=null,Ps=null,Is=0,Ts=0,Rs=xa(0),Ls=0,Ms=null,Os=0,js=0,Ws=0,Us=null,Fs=null,Ds=0,Ys=1/0,Hs=null,Gs=!1,Vs=null,Qs=null,$s=!1,Js=null,Ks=0,qs=0,Xs=null,Zs=-1,eu=0;function tu(){return 0!=(6&zs)?qe():-1!==Zs?Zs:Zs=qe()}function nu(e){return 0==(1&e.mode)?1:0!=(2&zs)&&0!==Is?Is&-Is:null!==gr.transition?(0===eu&&(eu=gt()),eu):0!==(e=yt)?e:e=void 0===(e=window.event)?16:Kt(e.type)}function iu(e,t,n,i){if(50<qs)throw qs=0,Xs=null,Error(r(185));bt(e,n,i),0!=(2&zs)&&e===Ns||(e===Ns&&(0==(2&zs)&&(js|=n),4===Ls&&su(e,Is)),au(e,i),1===n&&0===zs&&0==(1&t.mode)&&(Ys=qe()+500,Wa&&Da()))}function au(e,t){var n=e.callbackNode;!function(e,t){for(var n=e.suspendedLanes,i=e.pingedLanes,a=e.expirationTimes,r=e.pendingLanes;0<r;){var o=31-ot(r),l=1<<o,s=a[o];-1===s?0!=(l&n)&&0==(l&i)||(a[o]=dt(l,t)):s<=t&&(e.expiredLanes|=l),r&=~l}}(e,t);var i=pt(e,e===Ns?Is:0);if(0===i)null!==n&&$e(n),e.callbackNode=null,e.callbackPriority=0;else if(t=i&-i,e.callbackPriority!==t){if(null!=n&&$e(n),1===t)0===e.tag?function(e){Wa=!0,Fa(e)}(uu.bind(null,e)):Fa(uu.bind(null,e)),oa((function(){0==(6&zs)&&Da()})),n=null;else{switch(vt(i)){case 1:n=Ze;break;case 4:n=et;break;case 16:default:n=tt;break;case 536870912:n=it}n=Nu(n,ru.bind(null,e))}e.callbackPriority=t,e.callbackNode=n}}function ru(e,t){if(Zs=-1,eu=0,0!=(6&zs))throw Error(r(327));var n=e.callbackNode;if(Cu()&&e.callbackNode!==n)return null;var i=pt(e,e===Ns?Is:0);if(0===i)return null;if(0!=(30&i)||0!=(i&e.expiredLanes)||t)t=bu(e,i);else{t=i;var a=zs;zs|=2;var o=gu();for(Ns===e&&Is===t||(Hs=null,Ys=qe()+500,du(e,t));;)try{yu();break}catch(t){hu(e,t)}wr(),Ss.current=o,zs=a,null!==Ps?t=0:(Ns=null,Is=0,t=Ls)}if(0!==t){if(2===t&&0!==(a=ht(e))&&(i=a,t=ou(e,a)),1===t)throw n=Ms,du(e,0),su(e,i),au(e,qe()),n;if(6===t)su(e,i);else{if(a=e.current.alternate,0==(30&i)&&!function(e){for(var t=e;;){if(16384&t.flags){var n=t.updateQueue;if(null!==n&&null!==(n=n.stores))for(var i=0;i<n.length;i++){var a=n[i],r=a.getSnapshot;a=a.value;try{if(!li(r(),a))return!1}catch(e){return!1}}}if(n=t.child,16384&t.subtreeFlags&&null!==n)n.return=t,t=n;else{if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return!0;t=t.return}t.sibling.return=t.return,t=t.sibling}}return!0}(a)&&(2===(t=bu(e,i))&&0!==(o=ht(e))&&(i=o,t=ou(e,o)),1===t))throw n=Ms,du(e,0),su(e,i),au(e,qe()),n;switch(e.finishedWork=a,e.finishedLanes=i,t){case 0:case 1:throw Error(r(345));case 2:case 5:ku(e,Fs,Hs);break;case 3:if(su(e,i),(130023424&i)===i&&10<(t=Ds+500-qe())){if(0!==pt(e,0))break;if(((a=e.suspendedLanes)&i)!==i){tu(),e.pingedLanes|=e.suspendedLanes&a;break}e.timeoutHandle=ia(ku.bind(null,e,Fs,Hs),t);break}ku(e,Fs,Hs);break;case 4:if(su(e,i),(4194240&i)===i)break;for(t=e.eventTimes,a=-1;0<i;){var l=31-ot(i);o=1<<l,(l=t[l])>a&&(a=l),i&=~o}if(i=a,10<(i=(120>(i=qe()-i)?120:480>i?480:1080>i?1080:1920>i?1920:3e3>i?3e3:4320>i?4320:1960*As(i/1960))-i)){e.timeoutHandle=ia(ku.bind(null,e,Fs,Hs),i);break}ku(e,Fs,Hs);break;default:throw Error(r(329))}}}return au(e,qe()),e.callbackNode===n?ru.bind(null,e):null}function ou(e,t){var n=Us;return e.current.memoizedState.isDehydrated&&(du(e,t).flags|=256),2!==(e=bu(e,t))&&(t=Fs,Fs=n,null!==t&&lu(t)),e}function lu(e){null===Fs?Fs=e:Fs.push.apply(Fs,e)}function su(e,t){for(t&=~Ws,t&=~js,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-ot(t),i=1<<n;e[n]=-1,t&=~i}}function uu(e){if(0!=(6&zs))throw Error(r(327));Cu();var t=pt(e,0);if(0==(1&t))return au(e,qe()),null;var n=bu(e,t);if(0!==e.tag&&2===n){var i=ht(e);0!==i&&(t=i,n=ou(e,i))}if(1===n)throw n=Ms,du(e,0),su(e,t),au(e,qe()),n;if(6===n)throw Error(r(345));return e.finishedWork=e.current.alternate,e.finishedLanes=t,ku(e,Fs,Hs),au(e,qe()),null}function cu(e,t){var n=zs;zs|=1;try{return e(t)}finally{0===(zs=n)&&(Ys=qe()+500,Wa&&Da())}}function mu(e){null!==Js&&0===Js.tag&&0==(6&zs)&&Cu();var t=zs;zs|=1;var n=Es.transition,i=yt;try{if(Es.transition=null,yt=1,e)return e()}finally{yt=i,Es.transition=n,0==(6&(zs=t))&&Da()}}function pu(){Ts=Rs.current,Aa(Rs)}function du(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,aa(n)),null!==Ps)for(n=Ps.return;null!==n;){var i=n;switch(tr(i),i.tag){case 1:null!=(i=i.type.childContextTypes)&&Ta();break;case 3:ao(),Aa(za),Aa(Ea),co();break;case 5:oo(i);break;case 4:ao();break;case 13:case 19:Aa(lo);break;case 10:kr(i.type._context);break;case 22:case 23:pu()}n=n.return}if(Ns=e,Ps=e=Ru(e.current,null),Is=Ts=t,Ls=0,Ms=null,Ws=js=Os=0,Fs=Us=null,null!==Sr){for(t=0;t<Sr.length;t++)if(null!==(i=(n=Sr[t]).interleaved)){n.interleaved=null;var a=i.next,r=n.pending;if(null!==r){var o=r.next;r.next=a,i.next=o}n.pending=i}Sr=null}return e}function hu(e,t){for(;;){var n=Ps;try{if(wr(),mo.current=ol,_o){for(var i=go.memoizedState;null!==i;){var a=i.queue;null!==a&&(a.pending=null),i=i.next}_o=!1}if(ho=0,bo=fo=go=null,yo=!1,vo=0,Bs.current=null,null===n||null===n.return){Ls=1,Ms=t,Ps=null;break}e:{var o=e,l=n.return,s=n,u=t;if(t=Is,s.flags|=32768,null!==u&&"object"==typeof u&&"function"==typeof u.then){var c=u,m=s,p=m.tag;if(0==(1&m.mode)&&(0===p||11===p||15===p)){var d=m.alternate;d?(m.updateQueue=d.updateQueue,m.memoizedState=d.memoizedState,m.lanes=d.lanes):(m.updateQueue=null,m.memoizedState=null)}var h=bl(l);if(null!==h){h.flags&=-257,_l(h,l,s,0,t),1&h.mode&&fl(o,c,t),u=c;var g=(t=h).updateQueue;if(null===g){var f=new Set;f.add(u),t.updateQueue=f}else g.add(u);break e}if(0==(1&t)){fl(o,c,t),fu();break e}u=Error(r(426))}else if(ar&&1&s.mode){var b=bl(l);if(null!==b){0==(65536&b.flags)&&(b.flags|=256),_l(b,l,s,0,t),hr(cl(u,s));break e}}o=u=cl(u,s),4!==Ls&&(Ls=2),null===Us?Us=[o]:Us.push(o),o=l;do{switch(o.tag){case 3:o.flags|=65536,t&=-t,o.lanes|=t,Mr(o,hl(0,u,t));break e;case 1:s=u;var _=o.type,y=o.stateNode;if(0==(128&o.flags)&&("function"==typeof _.getDerivedStateFromError||null!==y&&"function"==typeof y.componentDidCatch&&(null===Qs||!Qs.has(y)))){o.flags|=65536,t&=-t,o.lanes|=t,Mr(o,gl(o,s,t));break e}}o=o.return}while(null!==o)}wu(n)}catch(e){t=e,Ps===n&&null!==n&&(Ps=n=n.return);continue}break}}function gu(){var e=Ss.current;return Ss.current=ol,null===e?ol:e}function fu(){0!==Ls&&3!==Ls&&2!==Ls||(Ls=4),null===Ns||0==(268435455&Os)&&0==(268435455&js)||su(Ns,Is)}function bu(e,t){var n=zs;zs|=2;var i=gu();for(Ns===e&&Is===t||(Hs=null,du(e,t));;)try{_u();break}catch(t){hu(e,t)}if(wr(),zs=n,Ss.current=i,null!==Ps)throw Error(r(261));return Ns=null,Is=0,Ls}function _u(){for(;null!==Ps;)vu(Ps)}function yu(){for(;null!==Ps&&!Je();)vu(Ps)}function vu(e){var t=xs(e.alternate,e,Ts);e.memoizedProps=e.pendingProps,null===t?wu(e):Ps=t,Bs.current=null}function wu(e){var t=e;do{var n=t.alternate;if(e=t.return,0==(32768&t.flags)){if(null!==(n=$l(n,t,Ts)))return void(Ps=n)}else{if(null!==(n=Jl(n,t)))return n.flags&=32767,void(Ps=n);if(null===e)return Ls=6,void(Ps=null);e.flags|=32768,e.subtreeFlags=0,e.deletions=null}if(null!==(t=t.sibling))return void(Ps=t);Ps=t=e}while(null!==t);0===Ls&&(Ls=5)}function ku(e,t,n){var i=yt,a=Es.transition;try{Es.transition=null,yt=1,function(e,t,n,i){do{Cu()}while(null!==Js);if(0!=(6&zs))throw Error(r(327));n=e.finishedWork;var a=e.finishedLanes;if(null===n)return null;if(e.finishedWork=null,e.finishedLanes=0,n===e.current)throw Error(r(177));e.callbackNode=null,e.callbackPriority=0;var o=n.lanes|n.childLanes;if(function(e,t){var n=e.pendingLanes&~t;e.pendingLanes=t,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=t,e.mutableReadLanes&=t,e.entangledLanes&=t,t=e.entanglements;var i=e.eventTimes;for(e=e.expirationTimes;0<n;){var a=31-ot(n),r=1<<a;t[a]=0,i[a]=-1,e[a]=-1,n&=~r}}(e,o),e===Ns&&(Ps=Ns=null,Is=0),0==(2064&n.subtreeFlags)&&0==(2064&n.flags)||$s||($s=!0,Nu(tt,(function(){return Cu(),null}))),o=0!=(15990&n.flags),0!=(15990&n.subtreeFlags)||o){o=Es.transition,Es.transition=null;var l=yt;yt=1;var s=zs;zs|=4,Bs.current=null,function(e,t){if(ea=Ht,di(e=pi())){if("selectionStart"in e)var n={start:e.selectionStart,end:e.selectionEnd};else e:{var i=(n=(n=e.ownerDocument)&&n.defaultView||window).getSelection&&n.getSelection();if(i&&0!==i.rangeCount){n=i.anchorNode;var a=i.anchorOffset,o=i.focusNode;i=i.focusOffset;try{n.nodeType,o.nodeType}catch(e){n=null;break e}var l=0,s=-1,u=-1,c=0,m=0,p=e,d=null;t:for(;;){for(var h;p!==n||0!==a&&3!==p.nodeType||(s=l+a),p!==o||0!==i&&3!==p.nodeType||(u=l+i),3===p.nodeType&&(l+=p.nodeValue.length),null!==(h=p.firstChild);)d=p,p=h;for(;;){if(p===e)break t;if(d===n&&++c===a&&(s=l),d===o&&++m===i&&(u=l),null!==(h=p.nextSibling))break;d=(p=d).parentNode}p=h}n=-1===s||-1===u?null:{start:s,end:u}}else n=null}n=n||{start:0,end:0}}else n=null;for(ta={focusedElem:e,selectionRange:n},Ht=!1,Zl=t;null!==Zl;)if(e=(t=Zl).child,0!=(1028&t.subtreeFlags)&&null!==e)e.return=t,Zl=e;else for(;null!==Zl;){t=Zl;try{var g=t.alternate;if(0!=(1024&t.flags))switch(t.tag){case 0:case 11:case 15:case 5:case 6:case 4:case 17:break;case 1:if(null!==g){var f=g.memoizedProps,b=g.memoizedState,_=t.stateNode,y=_.getSnapshotBeforeUpdate(t.elementType===t.type?f:fr(t.type,f),b);_.__reactInternalSnapshotBeforeUpdate=y}break;case 3:var v=t.stateNode.containerInfo;1===v.nodeType?v.textContent="":9===v.nodeType&&v.documentElement&&v.removeChild(v.documentElement);break;default:throw Error(r(163))}}catch(e){Au(t,t.return,e)}if(null!==(e=t.sibling)){e.return=t.return,Zl=e;break}Zl=t.return}g=ns,ns=!1}(e,n),bs(n,e),hi(ta),Ht=!!ea,ta=ea=null,e.current=n,ys(n,e,a),Ke(),zs=s,yt=l,Es.transition=o}else e.current=n;if($s&&($s=!1,Js=e,Ks=a),0===(o=e.pendingLanes)&&(Qs=null),function(e){if(rt&&"function"==typeof rt.onCommitFiberRoot)try{rt.onCommitFiberRoot(at,e,void 0,128==(128&e.current.flags))}catch(e){}}(n.stateNode),au(e,qe()),null!==t)for(i=e.onRecoverableError,n=0;n<t.length;n++)i((a=t[n]).value,{componentStack:a.stack,digest:a.digest});if(Gs)throw Gs=!1,e=Vs,Vs=null,e;0!=(1&Ks)&&0!==e.tag&&Cu(),0!=(1&(o=e.pendingLanes))?e===Xs?qs++:(qs=0,Xs=e):qs=0,Da()}(e,t,n,i)}finally{Es.transition=a,yt=i}return null}function Cu(){if(null!==Js){var e=vt(Ks),t=Es.transition,n=yt;try{if(Es.transition=null,yt=16>e?16:e,null===Js)var i=!1;else{if(e=Js,Js=null,Ks=0,0!=(6&zs))throw Error(r(331));var a=zs;for(zs|=4,Zl=e.current;null!==Zl;){var o=Zl,l=o.child;if(0!=(16&Zl.flags)){var s=o.deletions;if(null!==s){for(var u=0;u<s.length;u++){var c=s[u];for(Zl=c;null!==Zl;){var m=Zl;switch(m.tag){case 0:case 11:case 15:is(8,m,o)}var p=m.child;if(null!==p)p.return=m,Zl=p;else for(;null!==Zl;){var d=(m=Zl).sibling,h=m.return;if(os(m),m===c){Zl=null;break}if(null!==d){d.return=h,Zl=d;break}Zl=h}}}var g=o.alternate;if(null!==g){var f=g.child;if(null!==f){g.child=null;do{var b=f.sibling;f.sibling=null,f=b}while(null!==f)}}Zl=o}}if(0!=(2064&o.subtreeFlags)&&null!==l)l.return=o,Zl=l;else e:for(;null!==Zl;){if(0!=(2048&(o=Zl).flags))switch(o.tag){case 0:case 11:case 15:is(9,o,o.return)}var _=o.sibling;if(null!==_){_.return=o.return,Zl=_;break e}Zl=o.return}}var y=e.current;for(Zl=y;null!==Zl;){var v=(l=Zl).child;if(0!=(2064&l.subtreeFlags)&&null!==v)v.return=l,Zl=v;else e:for(l=y;null!==Zl;){if(0!=(2048&(s=Zl).flags))try{switch(s.tag){case 0:case 11:case 15:as(9,s)}}catch(e){Au(s,s.return,e)}if(s===l){Zl=null;break e}var w=s.sibling;if(null!==w){w.return=s.return,Zl=w;break e}Zl=s.return}}if(zs=a,Da(),rt&&"function"==typeof rt.onPostCommitFiberRoot)try{rt.onPostCommitFiberRoot(at,e)}catch(e){}i=!0}return i}finally{yt=n,Es.transition=t}}return!1}function xu(e,t,n){e=Rr(e,t=hl(0,t=cl(n,t),1),1),t=tu(),null!==e&&(bt(e,1,t),au(e,t))}function Au(e,t,n){if(3===e.tag)xu(e,e,n);else for(;null!==t;){if(3===t.tag){xu(t,e,n);break}if(1===t.tag){var i=t.stateNode;if("function"==typeof t.type.getDerivedStateFromError||"function"==typeof i.componentDidCatch&&(null===Qs||!Qs.has(i))){t=Rr(t,e=gl(t,e=cl(n,e),1),1),e=tu(),null!==t&&(bt(t,1,e),au(t,e));break}}t=t.return}}function Su(e,t,n){var i=e.pingCache;null!==i&&i.delete(t),t=tu(),e.pingedLanes|=e.suspendedLanes&n,Ns===e&&(Is&n)===n&&(4===Ls||3===Ls&&(130023424&Is)===Is&&500>qe()-Ds?du(e,0):Ws|=n),au(e,t)}function Bu(e,t){0===t&&(0==(1&e.mode)?t=1:(t=ct,0==(130023424&(ct<<=1))&&(ct=4194304)));var n=tu();null!==(e=zr(e,t))&&(bt(e,t,n),au(e,n))}function Eu(e){var t=e.memoizedState,n=0;null!==t&&(n=t.retryLane),Bu(e,n)}function zu(e,t){var n=0;switch(e.tag){case 13:var i=e.stateNode,a=e.memoizedState;null!==a&&(n=a.retryLane);break;case 19:i=e.stateNode;break;default:throw Error(r(314))}null!==i&&i.delete(t),Bu(e,n)}function Nu(e,t){return Qe(e,t)}function Pu(e,t,n,i){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=i,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Iu(e,t,n,i){return new Pu(e,t,n,i)}function Tu(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Ru(e,t){var n=e.alternate;return null===n?((n=Iu(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.subtreeFlags=0,n.deletions=null),n.flags=14680064&e.flags,n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Lu(e,t,n,i,a,o){var l=2;if(i=e,"function"==typeof e)Tu(e)&&(l=1);else if("string"==typeof e)l=5;else e:switch(e){case C:return Mu(n.children,a,o,t);case x:l=8,a|=8;break;case A:return(e=Iu(12,n,t,2|a)).elementType=A,e.lanes=o,e;case z:return(e=Iu(13,n,t,a)).elementType=z,e.lanes=o,e;case N:return(e=Iu(19,n,t,a)).elementType=N,e.lanes=o,e;case T:return Ou(n,a,o,t);default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case S:l=10;break e;case B:l=9;break e;case E:l=11;break e;case P:l=14;break e;case I:l=16,i=null;break e}throw Error(r(130,null==e?e:typeof e,""))}return(t=Iu(l,n,t,a)).elementType=e,t.type=i,t.lanes=o,t}function Mu(e,t,n,i){return(e=Iu(7,e,i,t)).lanes=n,e}function Ou(e,t,n,i){return(e=Iu(22,e,i,t)).elementType=T,e.lanes=n,e.stateNode={isHidden:!1},e}function ju(e,t,n){return(e=Iu(6,e,null,t)).lanes=n,e}function Wu(e,t,n){return(t=Iu(4,null!==e.children?e.children:[],e.key,t)).lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Uu(e,t,n,i,a){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=ft(0),this.expirationTimes=ft(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=ft(0),this.identifierPrefix=i,this.onRecoverableError=a,this.mutableSourceEagerHydrationData=null}function Fu(e,t,n,i,a,r,o,l,s){return e=new Uu(e,t,n,l,s),1===t?(t=1,!0===r&&(t|=8)):t=0,r=Iu(3,null,null,t),e.current=r,r.stateNode=e,r.memoizedState={element:i,isDehydrated:n,cache:null,transitions:null,pendingSuspenseBoundaries:null},Pr(r),e}function Du(e){if(!e)return Ba;e:{if(De(e=e._reactInternals)!==e||1!==e.tag)throw Error(r(170));var t=e;do{switch(t.tag){case 3:t=t.stateNode.context;break e;case 1:if(Ia(t.type)){t=t.stateNode.__reactInternalMemoizedMergedChildContext;break e}}t=t.return}while(null!==t);throw Error(r(171))}if(1===e.tag){var n=e.type;if(Ia(n))return La(e,n,t)}return t}function Yu(e,t,n,i,a,r,o,l,s){return(e=Fu(n,i,!0,e,0,r,0,l,s)).context=Du(null),n=e.current,(r=Tr(i=tu(),a=nu(n))).callback=null!=t?t:null,Rr(n,r,a),e.current.lanes=a,bt(e,a,i),au(e,i),e}function Hu(e,t,n,i){var a=t.current,r=tu(),o=nu(a);return n=Du(n),null===t.context?t.context=n:t.pendingContext=n,(t=Tr(r,o)).payload={element:e},null!==(i=void 0===i?null:i)&&(t.callback=i),null!==(e=Rr(a,t,o))&&(iu(e,a,o,r),Lr(e,a,o)),o}function Gu(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function Vu(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var n=e.retryLane;e.retryLane=0!==n&&n<t?n:t}}function Qu(e,t){Vu(e,t),(e=e.alternate)&&Vu(e,t)}xs=function(e,t,n){if(null!==e)if(e.memoizedProps!==t.pendingProps||za.current)vl=!0;else{if(0==(e.lanes&n)&&0==(128&t.flags))return vl=!1,function(e,t,n){switch(t.tag){case 3:Nl(t),dr();break;case 5:ro(t);break;case 1:Ia(t.type)&&Ma(t);break;case 4:io(t,t.stateNode.containerInfo);break;case 10:var i=t.type._context,a=t.memoizedProps.value;Sa(br,i._currentValue),i._currentValue=a;break;case 13:if(null!==(i=t.memoizedState))return null!==i.dehydrated?(Sa(lo,1&lo.current),t.flags|=128,null):0!=(n&t.child.childLanes)?jl(e,t,n):(Sa(lo,1&lo.current),null!==(e=Gl(e,t,n))?e.sibling:null);Sa(lo,1&lo.current);break;case 19:if(i=0!=(n&t.childLanes),0!=(128&e.flags)){if(i)return Yl(e,t,n);t.flags|=128}if(null!==(a=t.memoizedState)&&(a.rendering=null,a.tail=null,a.lastEffect=null),Sa(lo,lo.current),i)break;return null;case 22:case 23:return t.lanes=0,Al(e,t,n)}return Gl(e,t,n)}(e,t,n);vl=0!=(131072&e.flags)}else vl=!1,ar&&0!=(1048576&t.flags)&&Za(t,Va,t.index);switch(t.lanes=0,t.tag){case 2:var i=t.type;Hl(e,t),e=t.pendingProps;var a=Pa(t,Ea.current);xr(t,n),a=xo(null,t,i,e,a,n);var o=Ao();return t.flags|=1,"object"==typeof a&&null!==a&&"function"==typeof a.render&&void 0===a.$$typeof?(t.tag=1,t.memoizedState=null,t.updateQueue=null,Ia(i)?(o=!0,Ma(t)):o=!1,t.memoizedState=null!==a.state&&void 0!==a.state?a.state:null,Pr(t),a.updater=Fr,t.stateNode=a,a._reactInternals=t,Gr(t,i,e,n),t=zl(null,t,i,!0,o,n)):(t.tag=0,ar&&o&&er(t),wl(null,t,a,n),t=t.child),t;case 16:i=t.elementType;e:{switch(Hl(e,t),e=t.pendingProps,i=(a=i._init)(i._payload),t.type=i,a=t.tag=function(e){if("function"==typeof e)return Tu(e)?1:0;if(null!=e){if((e=e.$$typeof)===E)return 11;if(e===P)return 14}return 2}(i),e=fr(i,e),a){case 0:t=Bl(null,t,i,e,n);break e;case 1:t=El(null,t,i,e,n);break e;case 11:t=kl(null,t,i,e,n);break e;case 14:t=Cl(null,t,i,fr(i.type,e),n);break e}throw Error(r(306,i,""))}return t;case 0:return i=t.type,a=t.pendingProps,Bl(e,t,i,a=t.elementType===i?a:fr(i,a),n);case 1:return i=t.type,a=t.pendingProps,El(e,t,i,a=t.elementType===i?a:fr(i,a),n);case 3:e:{if(Nl(t),null===e)throw Error(r(387));i=t.pendingProps,a=(o=t.memoizedState).element,Ir(e,t),Or(t,i,null,n);var l=t.memoizedState;if(i=l.element,o.isDehydrated){if(o={element:i,isDehydrated:!1,cache:l.cache,pendingSuspenseBoundaries:l.pendingSuspenseBoundaries,transitions:l.transitions},t.updateQueue.baseState=o,t.memoizedState=o,256&t.flags){t=Pl(e,t,i,n,a=cl(Error(r(423)),t));break e}if(i!==a){t=Pl(e,t,i,n,a=cl(Error(r(424)),t));break e}for(ir=ua(t.stateNode.containerInfo.firstChild),nr=t,ar=!0,rr=null,n=qr(t,null,i,n),t.child=n;n;)n.flags=-3&n.flags|4096,n=n.sibling}else{if(dr(),i===a){t=Gl(e,t,n);break e}wl(e,t,i,n)}t=t.child}return t;case 5:return ro(t),null===e&&ur(t),i=t.type,a=t.pendingProps,o=null!==e?e.memoizedProps:null,l=a.children,na(i,a)?l=null:null!==o&&na(i,o)&&(t.flags|=32),Sl(e,t),wl(e,t,l,n),t.child;case 6:return null===e&&ur(t),null;case 13:return jl(e,t,n);case 4:return io(t,t.stateNode.containerInfo),i=t.pendingProps,null===e?t.child=Kr(t,null,i,n):wl(e,t,i,n),t.child;case 11:return i=t.type,a=t.pendingProps,kl(e,t,i,a=t.elementType===i?a:fr(i,a),n);case 7:return wl(e,t,t.pendingProps,n),t.child;case 8:case 12:return wl(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(i=t.type._context,a=t.pendingProps,o=t.memoizedProps,l=a.value,Sa(br,i._currentValue),i._currentValue=l,null!==o)if(li(o.value,l)){if(o.children===a.children&&!za.current){t=Gl(e,t,n);break e}}else for(null!==(o=t.child)&&(o.return=t);null!==o;){var s=o.dependencies;if(null!==s){l=o.child;for(var u=s.firstContext;null!==u;){if(u.context===i){if(1===o.tag){(u=Tr(-1,n&-n)).tag=2;var c=o.updateQueue;if(null!==c){var m=(c=c.shared).pending;null===m?u.next=u:(u.next=m.next,m.next=u),c.pending=u}}o.lanes|=n,null!==(u=o.alternate)&&(u.lanes|=n),Cr(o.return,n,t),s.lanes|=n;break}u=u.next}}else if(10===o.tag)l=o.type===t.type?null:o.child;else if(18===o.tag){if(null===(l=o.return))throw Error(r(341));l.lanes|=n,null!==(s=l.alternate)&&(s.lanes|=n),Cr(l,n,t),l=o.sibling}else l=o.child;if(null!==l)l.return=o;else for(l=o;null!==l;){if(l===t){l=null;break}if(null!==(o=l.sibling)){o.return=l.return,l=o;break}l=l.return}o=l}wl(e,t,a.children,n),t=t.child}return t;case 9:return a=t.type,i=t.pendingProps.children,xr(t,n),i=i(a=Ar(a)),t.flags|=1,wl(e,t,i,n),t.child;case 14:return a=fr(i=t.type,t.pendingProps),Cl(e,t,i,a=fr(i.type,a),n);case 15:return xl(e,t,t.type,t.pendingProps,n);case 17:return i=t.type,a=t.pendingProps,a=t.elementType===i?a:fr(i,a),Hl(e,t),t.tag=1,Ia(i)?(e=!0,Ma(t)):e=!1,xr(t,n),Yr(t,i,a),Gr(t,i,a,n),zl(null,t,i,!0,e,n);case 19:return Yl(e,t,n);case 22:return Al(e,t,n)}throw Error(r(156,t.tag))};var $u="function"==typeof reportError?reportError:function(e){console.error(e)};function Ju(e){this._internalRoot=e}function Ku(e){this._internalRoot=e}function qu(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType)}function Xu(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Zu(){}function ec(e,t,n,i,a){var r=n._reactRootContainer;if(r){var o=r;if("function"==typeof a){var l=a;a=function(){var e=Gu(o);l.call(e)}}Hu(t,o,e,a)}else o=function(e,t,n,i,a){if(a){if("function"==typeof i){var r=i;i=function(){var e=Gu(o);r.call(e)}}var o=Yu(t,i,e,0,null,!1,0,"",Zu);return e._reactRootContainer=o,e[ha]=o.current,Di(8===e.nodeType?e.parentNode:e),mu(),o}for(;a=e.lastChild;)e.removeChild(a);if("function"==typeof i){var l=i;i=function(){var e=Gu(s);l.call(e)}}var s=Fu(e,0,!1,null,0,!1,0,"",Zu);return e._reactRootContainer=s,e[ha]=s.current,Di(8===e.nodeType?e.parentNode:e),mu((function(){Hu(t,s,n,i)})),s}(n,t,e,a,i);return Gu(o)}Ku.prototype.render=Ju.prototype.render=function(e){var t=this._internalRoot;if(null===t)throw Error(r(409));Hu(e,t,null,null)},Ku.prototype.unmount=Ju.prototype.unmount=function(){var e=this._internalRoot;if(null!==e){this._internalRoot=null;var t=e.containerInfo;mu((function(){Hu(null,e,null,null)})),t[ha]=null}},Ku.prototype.unstable_scheduleHydration=function(e){if(e){var t=xt();e={blockedOn:null,target:e,priority:t};for(var n=0;n<Tt.length&&0!==t&&t<Tt[n].priority;n++);Tt.splice(n,0,e),0===n&&Ot(e)}},wt=function(e){switch(e.tag){case 3:var t=e.stateNode;if(t.current.memoizedState.isDehydrated){var n=mt(t.pendingLanes);0!==n&&(_t(t,1|n),au(t,qe()),0==(6&zs)&&(Ys=qe()+500,Da()))}break;case 13:mu((function(){var t=zr(e,1);if(null!==t){var n=tu();iu(t,e,1,n)}})),Qu(e,1)}},kt=function(e){if(13===e.tag){var t=zr(e,134217728);null!==t&&iu(t,e,134217728,tu()),Qu(e,134217728)}},Ct=function(e){if(13===e.tag){var t=nu(e),n=zr(e,t);null!==n&&iu(n,e,t,tu()),Qu(e,t)}},xt=function(){return yt},At=function(e,t){var n=yt;try{return yt=e,t()}finally{yt=n}},ke=function(e,t,n){switch(t){case"input":if(X(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var i=n[t];if(i!==e&&i.form===e.form){var a=wa(i);if(!a)throw Error(r(90));Q(i),X(i,a)}}}break;case"textarea":re(e,n);break;case"select":null!=(t=n.value)&&ne(e,!!n.multiple,t,!1)}},Ee=cu,ze=mu;var tc={usingClientEntryPoint:!1,Events:[ya,va,wa,Se,Be,cu]},nc={findFiberByHostInstance:_a,bundleType:0,version:"18.2.0",rendererPackageName:"react-dom"},ic={bundleType:nc.bundleType,version:nc.version,rendererPackageName:nc.rendererPackageName,rendererConfig:nc.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:v.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=Ge(e))?null:e.stateNode},findFiberByHostInstance:nc.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.2.0-next-9e3b772b8-20220608"};if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var ac=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!ac.isDisabled&&ac.supportsFiber)try{at=ac.inject(ic),rt=ac}catch(ce){}}t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=tc,t.createPortal=function(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!qu(t))throw Error(r(200));return function(e,t,n){var i=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:k,key:null==i?null:""+i,children:e,containerInfo:t,implementation:n}}(e,t,null,n)},t.createRoot=function(e,t){if(!qu(e))throw Error(r(299));var n=!1,i="",a=$u;return null!=t&&(!0===t.unstable_strictMode&&(n=!0),void 0!==t.identifierPrefix&&(i=t.identifierPrefix),void 0!==t.onRecoverableError&&(a=t.onRecoverableError)),t=Fu(e,1,!1,null,0,n,0,i,a),e[ha]=t.current,Di(8===e.nodeType?e.parentNode:e),new Ju(t)},t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternals;if(void 0===t){if("function"==typeof e.render)throw Error(r(188));throw e=Object.keys(e).join(","),Error(r(268,e))}return null===(e=Ge(t))?null:e.stateNode},t.flushSync=function(e){return mu(e)},t.hydrate=function(e,t,n){if(!Xu(t))throw Error(r(200));return ec(null,e,t,!0,n)},t.hydrateRoot=function(e,t,n){if(!qu(e))throw Error(r(405));var i=null!=n&&n.hydratedSources||null,a=!1,o="",l=$u;if(null!=n&&(!0===n.unstable_strictMode&&(a=!0),void 0!==n.identifierPrefix&&(o=n.identifierPrefix),void 0!==n.onRecoverableError&&(l=n.onRecoverableError)),t=Yu(t,null,e,1,null!=n?n:null,a,0,o,l),e[ha]=t.current,Di(e),i)for(e=0;e<i.length;e++)a=(a=(n=i[e])._getVersion)(n._source),null==t.mutableSourceEagerHydrationData?t.mutableSourceEagerHydrationData=[n,a]:t.mutableSourceEagerHydrationData.push(n,a);return new Ku(t)},t.render=function(e,t,n){if(!Xu(t))throw Error(r(200));return ec(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!Xu(e))throw Error(r(40));return!!e._reactRootContainer&&(mu((function(){ec(null,null,e,!1,(function(){e._reactRootContainer=null,e[ha]=null}))})),!0)},t.unstable_batchedUpdates=cu,t.unstable_renderSubtreeIntoContainer=function(e,t,n,i){if(!Xu(n))throw Error(r(200));if(null==e||void 0===e._reactInternals)throw Error(r(38));return ec(e,t,n,!1,i)},t.version="18.2.0-next-9e3b772b8-20220608"},745:(e,t,n)=>{var i=n(935);t.createRoot=i.createRoot,t.hydrateRoot=i.hydrateRoot},935:(e,t,n)=>{!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n(448)},408:(e,t)=>{var n=Symbol.for("react.element"),i=Symbol.for("react.portal"),a=Symbol.for("react.fragment"),r=Symbol.for("react.strict_mode"),o=Symbol.for("react.profiler"),l=Symbol.for("react.provider"),s=Symbol.for("react.context"),u=Symbol.for("react.forward_ref"),c=Symbol.for("react.suspense"),m=Symbol.for("react.memo"),p=Symbol.for("react.lazy"),d=Symbol.iterator,h={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},g=Object.assign,f={};function b(e,t,n){this.props=e,this.context=t,this.refs=f,this.updater=n||h}function _(){}function y(e,t,n){this.props=e,this.context=t,this.refs=f,this.updater=n||h}b.prototype.isReactComponent={},b.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,t,"setState")},b.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},_.prototype=b.prototype;var v=y.prototype=new _;v.constructor=y,g(v,b.prototype),v.isPureReactComponent=!0;var w=Array.isArray,k=Object.prototype.hasOwnProperty,C={current:null},x={key:!0,ref:!0,__self:!0,__source:!0};function A(e,t,i){var a,r={},o=null,l=null;if(null!=t)for(a in void 0!==t.ref&&(l=t.ref),void 0!==t.key&&(o=""+t.key),t)k.call(t,a)&&!x.hasOwnProperty(a)&&(r[a]=t[a]);var s=arguments.length-2;if(1===s)r.children=i;else if(1<s){for(var u=Array(s),c=0;c<s;c++)u[c]=arguments[c+2];r.children=u}if(e&&e.defaultProps)for(a in s=e.defaultProps)void 0===r[a]&&(r[a]=s[a]);return{$$typeof:n,type:e,key:o,ref:l,props:r,_owner:C.current}}function S(e){return"object"==typeof e&&null!==e&&e.$$typeof===n}var B=/\/+/g;function E(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function z(e,t,a,r,o){var l=typeof e;"undefined"!==l&&"boolean"!==l||(e=null);var s=!1;if(null===e)s=!0;else switch(l){case"string":case"number":s=!0;break;case"object":switch(e.$$typeof){case n:case i:s=!0}}if(s)return o=o(s=e),e=""===r?"."+E(s,0):r,w(o)?(a="",null!=e&&(a=e.replace(B,"$&/")+"/"),z(o,t,a,"",(function(e){return e}))):null!=o&&(S(o)&&(o=function(e,t){return{$$typeof:n,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(o,a+(!o.key||s&&s.key===o.key?"":(""+o.key).replace(B,"$&/")+"/")+e)),t.push(o)),1;if(s=0,r=""===r?".":r+":",w(e))for(var u=0;u<e.length;u++){var c=r+E(l=e[u],u);s+=z(l,t,a,c,o)}else if(c=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=d&&e[d]||e["@@iterator"])?e:null}(e),"function"==typeof c)for(e=c.call(e),u=0;!(l=e.next()).done;)s+=z(l=l.value,t,a,c=r+E(l,u++),o);else if("object"===l)throw t=String(e),Error("Objects are not valid as a React child (found: "+("[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t)+"). If you meant to render a collection of children, use an array instead.");return s}function N(e,t,n){if(null==e)return e;var i=[],a=0;return z(e,i,"","",(function(e){return t.call(n,e,a++)})),i}function P(e){if(-1===e._status){var t=e._result;(t=t()).then((function(t){0!==e._status&&-1!==e._status||(e._status=1,e._result=t)}),(function(t){0!==e._status&&-1!==e._status||(e._status=2,e._result=t)})),-1===e._status&&(e._status=0,e._result=t)}if(1===e._status)return e._result.default;throw e._result}var I={current:null},T={transition:null},R={ReactCurrentDispatcher:I,ReactCurrentBatchConfig:T,ReactCurrentOwner:C};t.Children={map:N,forEach:function(e,t,n){N(e,(function(){t.apply(this,arguments)}),n)},count:function(e){var t=0;return N(e,(function(){t++})),t},toArray:function(e){return N(e,(function(e){return e}))||[]},only:function(e){if(!S(e))throw Error("React.Children.only expected to receive a single React element child.");return e}},t.Component=b,t.Fragment=a,t.Profiler=o,t.PureComponent=y,t.StrictMode=r,t.Suspense=c,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=R,t.cloneElement=function(e,t,i){if(null==e)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+e+".");var a=g({},e.props),r=e.key,o=e.ref,l=e._owner;if(null!=t){if(void 0!==t.ref&&(o=t.ref,l=C.current),void 0!==t.key&&(r=""+t.key),e.type&&e.type.defaultProps)var s=e.type.defaultProps;for(u in t)k.call(t,u)&&!x.hasOwnProperty(u)&&(a[u]=void 0===t[u]&&void 0!==s?s[u]:t[u])}var u=arguments.length-2;if(1===u)a.children=i;else if(1<u){s=Array(u);for(var c=0;c<u;c++)s[c]=arguments[c+2];a.children=s}return{$$typeof:n,type:e.type,key:r,ref:o,props:a,_owner:l}},t.createContext=function(e){return(e={$$typeof:s,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null}).Provider={$$typeof:l,_context:e},e.Consumer=e},t.createElement=A,t.createFactory=function(e){var t=A.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:u,render:e}},t.isValidElement=S,t.lazy=function(e){return{$$typeof:p,_payload:{_status:-1,_result:e},_init:P}},t.memo=function(e,t){return{$$typeof:m,type:e,compare:void 0===t?null:t}},t.startTransition=function(e){var t=T.transition;T.transition={};try{e()}finally{T.transition=t}},t.unstable_act=function(){throw Error("act(...) is not supported in production builds of React.")},t.useCallback=function(e,t){return I.current.useCallback(e,t)},t.useContext=function(e){return I.current.useContext(e)},t.useDebugValue=function(){},t.useDeferredValue=function(e){return I.current.useDeferredValue(e)},t.useEffect=function(e,t){return I.current.useEffect(e,t)},t.useId=function(){return I.current.useId()},t.useImperativeHandle=function(e,t,n){return I.current.useImperativeHandle(e,t,n)},t.useInsertionEffect=function(e,t){return I.current.useInsertionEffect(e,t)},t.useLayoutEffect=function(e,t){return I.current.useLayoutEffect(e,t)},t.useMemo=function(e,t){return I.current.useMemo(e,t)},t.useReducer=function(e,t,n){return I.current.useReducer(e,t,n)},t.useRef=function(e){return I.current.useRef(e)},t.useState=function(e){return I.current.useState(e)},t.useSyncExternalStore=function(e,t,n){return I.current.useSyncExternalStore(e,t,n)},t.useTransition=function(){return I.current.useTransition()},t.version="18.2.0"},294:(e,t,n)=>{e.exports=n(408)},53:(e,t)=>{function n(e,t){var n=e.length;e.push(t);e:for(;0<n;){var i=n-1>>>1,a=e[i];if(!(0<r(a,t)))break e;e[i]=t,e[n]=a,n=i}}function i(e){return 0===e.length?null:e[0]}function a(e){if(0===e.length)return null;var t=e[0],n=e.pop();if(n!==t){e[0]=n;e:for(var i=0,a=e.length,o=a>>>1;i<o;){var l=2*(i+1)-1,s=e[l],u=l+1,c=e[u];if(0>r(s,n))u<a&&0>r(c,s)?(e[i]=c,e[u]=n,i=u):(e[i]=s,e[l]=n,i=l);else{if(!(u<a&&0>r(c,n)))break e;e[i]=c,e[u]=n,i=u}}}return t}function r(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}if("object"==typeof performance&&"function"==typeof performance.now){var o=performance;t.unstable_now=function(){return o.now()}}else{var l=Date,s=l.now();t.unstable_now=function(){return l.now()-s}}var u=[],c=[],m=1,p=null,d=3,h=!1,g=!1,f=!1,b="function"==typeof setTimeout?setTimeout:null,_="function"==typeof clearTimeout?clearTimeout:null,y="undefined"!=typeof setImmediate?setImmediate:null;function v(e){for(var t=i(c);null!==t;){if(null===t.callback)a(c);else{if(!(t.startTime<=e))break;a(c),t.sortIndex=t.expirationTime,n(u,t)}t=i(c)}}function w(e){if(f=!1,v(e),!g)if(null!==i(u))g=!0,T(k);else{var t=i(c);null!==t&&R(w,t.startTime-e)}}function k(e,n){g=!1,f&&(f=!1,_(S),S=-1),h=!0;var r=d;try{for(v(n),p=i(u);null!==p&&(!(p.expirationTime>n)||e&&!z());){var o=p.callback;if("function"==typeof o){p.callback=null,d=p.priorityLevel;var l=o(p.expirationTime<=n);n=t.unstable_now(),"function"==typeof l?p.callback=l:p===i(u)&&a(u),v(n)}else a(u);p=i(u)}if(null!==p)var s=!0;else{var m=i(c);null!==m&&R(w,m.startTime-n),s=!1}return s}finally{p=null,d=r,h=!1}}"undefined"!=typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);var C,x=!1,A=null,S=-1,B=5,E=-1;function z(){return!(t.unstable_now()-E<B)}function N(){if(null!==A){var e=t.unstable_now();E=e;var n=!0;try{n=A(!0,e)}finally{n?C():(x=!1,A=null)}}else x=!1}if("function"==typeof y)C=function(){y(N)};else if("undefined"!=typeof MessageChannel){var P=new MessageChannel,I=P.port2;P.port1.onmessage=N,C=function(){I.postMessage(null)}}else C=function(){b(N,0)};function T(e){A=e,x||(x=!0,C())}function R(e,n){S=b((function(){e(t.unstable_now())}),n)}t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){g||h||(g=!0,T(k))},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):B=0<e?Math.floor(1e3/e):5},t.unstable_getCurrentPriorityLevel=function(){return d},t.unstable_getFirstCallbackNode=function(){return i(u)},t.unstable_next=function(e){switch(d){case 1:case 2:case 3:var t=3;break;default:t=d}var n=d;d=t;try{return e()}finally{d=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=function(){},t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=d;d=e;try{return t()}finally{d=n}},t.unstable_scheduleCallback=function(e,a,r){var o=t.unstable_now();switch(r="object"==typeof r&&null!==r&&"number"==typeof(r=r.delay)&&0<r?o+r:o,e){case 1:var l=-1;break;case 2:l=250;break;case 5:l=1073741823;break;case 4:l=1e4;break;default:l=5e3}return e={id:m++,callback:a,priorityLevel:e,startTime:r,expirationTime:l=r+l,sortIndex:-1},r>o?(e.sortIndex=r,n(c,e),null===i(u)&&e===i(c)&&(f?(_(S),S=-1):f=!0,R(w,r-o))):(e.sortIndex=l,n(u,e),g||h||(g=!0,T(k))),e},t.unstable_shouldYield=z,t.unstable_wrapCallback=function(e){var t=d;return function(){var n=d;d=t;try{return e.apply(this,arguments)}finally{d=n}}}},840:(e,t,n)=>{e.exports=n(53)},379:e=>{var t=[];function n(e){for(var n=-1,i=0;i<t.length;i++)if(t[i].identifier===e){n=i;break}return n}function i(e,i){for(var r={},o=[],l=0;l<e.length;l++){var s=e[l],u=i.base?s[0]+i.base:s[0],c=r[u]||0,m="".concat(u," ").concat(c);r[u]=c+1;var p=n(m),d={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)t[p].references++,t[p].updater(d);else{var h=a(d,i);i.byIndex=l,t.splice(l,0,{identifier:m,updater:h,references:1})}o.push(m)}return o}function a(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,a){var r=i(e=e||[],a=a||{});return function(e){e=e||[];for(var o=0;o<r.length;o++){var l=n(r[o]);t[l].references--}for(var s=i(e,a),u=0;u<r.length;u++){var c=n(r[u]);0===t[c].references&&(t[c].updater(),t.splice(c,1))}r=s}}},569:e=>{var t={};e.exports=function(e,n){var i=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var i="";n.supports&&(i+="@supports (".concat(n.supports,") {")),n.media&&(i+="@media ".concat(n.media," {"));var a=void 0!==n.layer;a&&(i+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),i+=n.css,a&&(i+="}"),n.media&&(i+="}"),n.supports&&(i+="}");var r=n.sourceMap;r&&"undefined"!=typeof btoa&&(i+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),t.styleTagTransform(i,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},i={};function a(e){var t=i[e];if(void 0!==t)return t.exports;var r=i[e]={id:e,exports:{}};return n[e](r,r.exports,a),r.exports}a.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return a.d(t,{a:t}),t},t=Object.getPrototypeOf?e=>Object.getPrototypeOf(e):e=>e.__proto__,a.t=function(n,i){if(1&i&&(n=this(n)),8&i)return n;if("object"==typeof n&&n){if(4&i&&n.__esModule)return n;if(16&i&&"function"==typeof n.then)return n}var r=Object.create(null);a.r(r);var o={};e=e||[null,t({}),t([]),t(t)];for(var l=2&i&&n;"object"==typeof l&&!~e.indexOf(l);l=t(l))Object.getOwnPropertyNames(l).forEach((e=>o[e]=()=>n[e]));return o.default=()=>n,a.d(r,o),r},a.d=(e,t)=>{for(var n in t)a.o(t,n)&&!a.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},a.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),a.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},a.nc=void 0,(()=>{var e,t=a(294),n=a.t(t,2),i=a(745),r=a(379),o=a.n(r),l=a(795),s=a.n(l),u=a(569),c=a.n(u),m=a(565),p=a.n(m),d=a(216),h=a.n(d),g=a(589),f=a.n(g),b=a(528),_={};function y(){return y=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e},y.apply(this,arguments)}_.styleTagTransform=f(),_.setAttributes=p(),_.insert=c().bind(null,"head"),_.domAPI=s(),_.insertStyleElement=h(),o()(b.Z,_),b.Z&&b.Z.locals&&b.Z.locals,function(e){e.Pop="POP",e.Push="PUSH",e.Replace="REPLACE"}(e||(e={}));const v="popstate";function w(e,t){if(!1===e||null==e)throw new Error(t)}function k(e,t){if(!e){"undefined"!=typeof console&&console.warn(t);try{throw new Error(t)}catch(e){}}}function C(e,t){return{usr:e.state,key:e.key,idx:t}}function x(e,t,n,i){return void 0===n&&(n=null),y({pathname:"string"==typeof e?e:e.pathname,search:"",hash:""},"string"==typeof t?S(t):t,{state:n,key:t&&t.key||i||Math.random().toString(36).substr(2,8)})}function A(e){let{pathname:t="/",search:n="",hash:i=""}=e;return n&&"?"!==n&&(t+="?"===n.charAt(0)?n:"?"+n),i&&"#"!==i&&(t+="#"===i.charAt(0)?i:"#"+i),t}function S(e){let t={};if(e){let n=e.indexOf("#");n>=0&&(t.hash=e.substr(n),e=e.substr(0,n));let i=e.indexOf("?");i>=0&&(t.search=e.substr(i),e=e.substr(0,i)),e&&(t.pathname=e)}return t}var B;function E(e,t,n){void 0===n&&(n="/");let i=D(("string"==typeof t?S(t):t).pathname||"/",n);if(null==i)return null;let a=z(e);!function(e){e.sort(((e,t)=>e.score!==t.score?t.score-e.score:function(e,t){return e.length===t.length&&e.slice(0,-1).every(((e,n)=>e===t[n]))?e[e.length-1]-t[t.length-1]:0}(e.routesMeta.map((e=>e.childrenIndex)),t.routesMeta.map((e=>e.childrenIndex)))))}(a);let r=null;for(let e=0;null==r&&e<a.length;++e)r=W(a[e],F(i));return r}function z(e,t,n,i){void 0===t&&(t=[]),void 0===n&&(n=[]),void 0===i&&(i="");let a=(e,a,r)=>{let o={relativePath:void 0===r?e.path||"":r,caseSensitive:!0===e.caseSensitive,childrenIndex:a,route:e};o.relativePath.startsWith("/")&&(w(o.relativePath.startsWith(i),'Absolute route path "'+o.relativePath+'" nested under path "'+i+'" is not valid. An absolute child route path must start with the combined path of all its parent routes.'),o.relativePath=o.relativePath.slice(i.length));let l=V([i,o.relativePath]),s=n.concat(o);e.children&&e.children.length>0&&(w(!0!==e.index,'Index routes must not have child routes. Please remove all child routes from route path "'+l+'".'),z(e.children,t,s,l)),(null!=e.path||e.index)&&t.push({path:l,score:j(l,e.index),routesMeta:s})};return e.forEach(((e,t)=>{var n;if(""!==e.path&&null!=(n=e.path)&&n.includes("?"))for(let n of N(e.path))a(e,t,n);else a(e,t)})),t}function N(e){let t=e.split("/");if(0===t.length)return[];let[n,...i]=t,a=n.endsWith("?"),r=n.replace(/\?$/,"");if(0===i.length)return a?[r,""]:[r];let o=N(i.join("/")),l=[];return l.push(...o.map((e=>""===e?r:[r,e].join("/")))),a&&l.push(...o),l.map((t=>e.startsWith("/")&&""===t?"/":t))}!function(e){e.data="data",e.deferred="deferred",e.redirect="redirect",e.error="error"}(B||(B={})),new Set(["lazy","caseSensitive","path","id","index","children"]);const P=/^:\w+$/,I=3,T=2,R=1,L=10,M=-2,O=e=>"*"===e;function j(e,t){let n=e.split("/"),i=n.length;return n.some(O)&&(i+=M),t&&(i+=T),n.filter((e=>!O(e))).reduce(((e,t)=>e+(P.test(t)?I:""===t?R:L)),i)}function W(e,t){let{routesMeta:n}=e,i={},a="/",r=[];for(let e=0;e<n.length;++e){let o=n[e],l=e===n.length-1,s="/"===a?t:t.slice(a.length)||"/",u=U({path:o.relativePath,caseSensitive:o.caseSensitive,end:l},s);if(!u)return null;Object.assign(i,u.params);let c=o.route;r.push({params:i,pathname:V([a,u.pathname]),pathnameBase:Q(V([a,u.pathnameBase])),route:c}),"/"!==u.pathnameBase&&(a=V([a,u.pathnameBase]))}return r}function U(e,t){"string"==typeof e&&(e={path:e,caseSensitive:!1,end:!0});let[n,i]=function(e,t,n){void 0===t&&(t=!1),void 0===n&&(n=!0),k("*"===e||!e.endsWith("*")||e.endsWith("/*"),'Route path "'+e+'" will be treated as if it were "'+e.replace(/\*$/,"/*")+'" because the `*` character must always follow a `/` in the pattern. To get rid of this warning, please change the route path to "'+e.replace(/\*$/,"/*")+'".');let i=[],a="^"+e.replace(/\/*\*?$/,"").replace(/^\/*/,"/").replace(/[\\.*+^$?{}|()[\]]/g,"\\$&").replace(/\/:(\w+)/g,((e,t)=>(i.push(t),"/([^\\/]+)")));return e.endsWith("*")?(i.push("*"),a+="*"===e||"/*"===e?"(.*)$":"(?:\\/(.+)|\\/*)$"):n?a+="\\/*$":""!==e&&"/"!==e&&(a+="(?:(?=\\/|$))"),[new RegExp(a,t?void 0:"i"),i]}(e.path,e.caseSensitive,e.end),a=t.match(n);if(!a)return null;let r=a[0],o=r.replace(/(.)\/+$/,"$1"),l=a.slice(1);return{params:i.reduce(((e,t,n)=>{if("*"===t){let e=l[n]||"";o=r.slice(0,r.length-e.length).replace(/(.)\/+$/,"$1")}return e[t]=function(e,t){try{return decodeURIComponent(e)}catch(n){return k(!1,'The value for the URL param "'+t+'" will not be decoded because the string "'+e+'" is a malformed URL segment. This is probably due to a bad percent encoding ('+n+")."),e}}(l[n]||"",t),e}),{}),pathname:r,pathnameBase:o,pattern:e}}function F(e){try{return decodeURI(e)}catch(t){return k(!1,'The URL path "'+e+'" could not be decoded because it is is a malformed URL segment. This is probably due to a bad percent encoding ('+t+")."),e}}function D(e,t){if("/"===t)return e;if(!e.toLowerCase().startsWith(t.toLowerCase()))return null;let n=t.endsWith("/")?t.length-1:t.length,i=e.charAt(n);return i&&"/"!==i?null:e.slice(n)||"/"}function Y(e,t,n,i){return"Cannot include a '"+e+"' character in a manually specified `to."+t+"` field ["+JSON.stringify(i)+"].  Please separate it out to the `to."+n+'` field. Alternatively you may provide the full path as a string in <Link to="..."> and the router will parse it for you.'}function H(e){return e.filter(((e,t)=>0===t||e.route.path&&e.route.path.length>0))}function G(e,t,n,i){let a;void 0===i&&(i=!1),"string"==typeof e?a=S(e):(a=y({},e),w(!a.pathname||!a.pathname.includes("?"),Y("?","pathname","search",a)),w(!a.pathname||!a.pathname.includes("#"),Y("#","pathname","hash",a)),w(!a.search||!a.search.includes("#"),Y("#","search","hash",a)));let r,o=""===e||""===a.pathname,l=o?"/":a.pathname;if(i||null==l)r=n;else{let e=t.length-1;if(l.startsWith("..")){let t=l.split("/");for(;".."===t[0];)t.shift(),e-=1;a.pathname=t.join("/")}r=e>=0?t[e]:"/"}let s=function(e,t){void 0===t&&(t="/");let{pathname:n,search:i="",hash:a=""}="string"==typeof e?S(e):e,r=n?n.startsWith("/")?n:function(e,t){let n=t.replace(/\/+$/,"").split("/");return e.split("/").forEach((e=>{".."===e?n.length>1&&n.pop():"."!==e&&n.push(e)})),n.length>1?n.join("/"):"/"}(n,t):t;return{pathname:r,search:$(i),hash:J(a)}}(a,r),u=l&&"/"!==l&&l.endsWith("/"),c=(o||"."===l)&&n.endsWith("/");return s.pathname.endsWith("/")||!u&&!c||(s.pathname+="/"),s}const V=e=>e.join("/").replace(/\/\/+/g,"/"),Q=e=>e.replace(/\/+$/,"").replace(/^\/*/,"/"),$=e=>e&&"?"!==e?e.startsWith("?")?e:"?"+e:"",J=e=>e&&"#"!==e?e.startsWith("#")?e:"#"+e:"";Error;const K=["post","put","patch","delete"],q=(new Set(K),["get",...K]);function X(){return X=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e},X.apply(this,arguments)}new Set(q),new Set([301,302,303,307,308]),new Set([307,308]),Symbol("deferred");const Z=t.createContext(null),ee=t.createContext(null),te=t.createContext(null),ne=t.createContext(null),ie=t.createContext({outlet:null,matches:[],isDataRoute:!1}),ae=t.createContext(null);function re(){return null!=t.useContext(ne)}function oe(){return re()||w(!1),t.useContext(ne).location}function le(e){t.useContext(te).static||t.useLayoutEffect(e)}function se(){let{isDataRoute:e}=t.useContext(ie);return e?function(){let{router:e}=function(e){let n=t.useContext(Z);return n||w(!1),n}(ge.UseNavigateStable),n=be(fe.UseNavigateStable),i=t.useRef(!1);le((()=>{i.current=!0}));let a=t.useCallback((function(t,a){void 0===a&&(a={}),i.current&&("number"==typeof t?e.navigate(t):e.navigate(t,X({fromRouteId:n},a)))}),[e,n]);return a}():function(){re()||w(!1);let e=t.useContext(Z),{basename:n,navigator:i}=t.useContext(te),{matches:a}=t.useContext(ie),{pathname:r}=oe(),o=JSON.stringify(H(a).map((e=>e.pathnameBase))),l=t.useRef(!1);le((()=>{l.current=!0}));let s=t.useCallback((function(t,a){if(void 0===a&&(a={}),!l.current)return;if("number"==typeof t)return void i.go(t);let s=G(t,JSON.parse(o),r,"path"===a.relative);null==e&&"/"!==n&&(s.pathname="/"===s.pathname?n:V([n,s.pathname])),(a.replace?i.replace:i.push)(s,a.state,a)}),[n,i,o,r,e]);return s}()}function ue(e,n){let{relative:i}=void 0===n?{}:n,{matches:a}=t.useContext(ie),{pathname:r}=oe(),o=JSON.stringify(H(a).map((e=>e.pathnameBase)));return t.useMemo((()=>G(e,JSON.parse(o),r,"path"===i)),[e,o,r,i])}function ce(n,i,a){re()||w(!1);let{navigator:r}=t.useContext(te),{matches:o}=t.useContext(ie),l=o[o.length-1],s=l?l.params:{},u=(l&&l.pathname,l?l.pathnameBase:"/");l&&l.route;let c,m=oe();if(i){var p;let e="string"==typeof i?S(i):i;"/"===u||(null==(p=e.pathname)?void 0:p.startsWith(u))||w(!1),c=e}else c=m;let d=c.pathname||"/",h=E(n,{pathname:"/"===u?d:d.slice(u.length)||"/"}),g=function(e,n,i){var a;if(void 0===n&&(n=[]),void 0===i&&(i=null),null==e){var r;if(null==(r=i)||!r.errors)return null;e=i.matches}let o=e,l=null==(a=i)?void 0:a.errors;if(null!=l){let e=o.findIndex((e=>e.route.id&&(null==l?void 0:l[e.route.id])));e>=0||w(!1),o=o.slice(0,Math.min(o.length,e+1))}return o.reduceRight(((e,a,r)=>{let s=a.route.id?null==l?void 0:l[a.route.id]:null,u=null;i&&(u=a.route.errorElement||pe);let c=n.concat(o.slice(0,r+1)),m=()=>{let n;return n=s?u:a.route.Component?t.createElement(a.route.Component,null):a.route.element?a.route.element:e,t.createElement(he,{match:a,routeContext:{outlet:e,matches:c,isDataRoute:null!=i},children:n})};return i&&(a.route.ErrorBoundary||a.route.errorElement||0===r)?t.createElement(de,{location:i.location,revalidation:i.revalidation,component:u,error:s,children:m(),routeContext:{outlet:null,matches:c,isDataRoute:!0}}):m()}),null)}(h&&h.map((e=>Object.assign({},e,{params:Object.assign({},s,e.params),pathname:V([u,r.encodeLocation?r.encodeLocation(e.pathname).pathname:e.pathname]),pathnameBase:"/"===e.pathnameBase?u:V([u,r.encodeLocation?r.encodeLocation(e.pathnameBase).pathname:e.pathnameBase])}))),o,a);return i&&g?t.createElement(ne.Provider,{value:{location:X({pathname:"/",search:"",hash:"",state:null,key:"default"},c),navigationType:e.Pop}},g):g}function me(){let e=function(){var e;let n=t.useContext(ae),i=function(e){let n=t.useContext(ee);return n||w(!1),n}(fe.UseRouteError),a=be(fe.UseRouteError);return n||(null==(e=i.errors)?void 0:e[a])}(),n=function(e){return null!=e&&"number"==typeof e.status&&"string"==typeof e.statusText&&"boolean"==typeof e.internal&&"data"in e}(e)?e.status+" "+e.statusText:e instanceof Error?e.message:JSON.stringify(e),i=e instanceof Error?e.stack:null,a={padding:"0.5rem",backgroundColor:"rgba(200,200,200, 0.5)"};return t.createElement(t.Fragment,null,t.createElement("h2",null,"Unexpected Application Error!"),t.createElement("h3",{style:{fontStyle:"italic"}},n),i?t.createElement("pre",{style:a},i):null,null)}const pe=t.createElement(me,null);class de extends t.Component{constructor(e){super(e),this.state={location:e.location,revalidation:e.revalidation,error:e.error}}static getDerivedStateFromError(e){return{error:e}}static getDerivedStateFromProps(e,t){return t.location!==e.location||"idle"!==t.revalidation&&"idle"===e.revalidation?{error:e.error,location:e.location,revalidation:e.revalidation}:{error:e.error||t.error,location:t.location,revalidation:e.revalidation||t.revalidation}}componentDidCatch(e,t){console.error("React Router caught the following error during render",e,t)}render(){return this.state.error?t.createElement(ie.Provider,{value:this.props.routeContext},t.createElement(ae.Provider,{value:this.state.error,children:this.props.component})):this.props.children}}function he(e){let{routeContext:n,match:i,children:a}=e,r=t.useContext(Z);return r&&r.static&&r.staticContext&&(i.route.errorElement||i.route.ErrorBoundary)&&(r.staticContext._deepestRenderedBoundaryId=i.route.id),t.createElement(ie.Provider,{value:n},a)}var ge=function(e){return e.UseBlocker="useBlocker",e.UseRevalidator="useRevalidator",e.UseNavigateStable="useNavigate",e}(ge||{}),fe=function(e){return e.UseBlocker="useBlocker",e.UseLoaderData="useLoaderData",e.UseActionData="useActionData",e.UseRouteError="useRouteError",e.UseNavigation="useNavigation",e.UseRouteLoaderData="useRouteLoaderData",e.UseMatches="useMatches",e.UseRevalidator="useRevalidator",e.UseNavigateStable="useNavigate",e.UseRouteId="useRouteId",e}(fe||{});function be(e){let n=function(e){let n=t.useContext(ie);return n||w(!1),n}(),i=n.matches[n.matches.length-1];return i.route.id||w(!1),i.route.id}function _e(e){w(!1)}function ye(n){let{basename:i="/",children:a=null,location:r,navigationType:o=e.Pop,navigator:l,static:s=!1}=n;re()&&w(!1);let u=i.replace(/^\/*/,"/"),c=t.useMemo((()=>({basename:u,navigator:l,static:s})),[u,l,s]);"string"==typeof r&&(r=S(r));let{pathname:m="/",search:p="",hash:d="",state:h=null,key:g="default"}=r,f=t.useMemo((()=>{let e=D(m,u);return null==e?null:{location:{pathname:e,search:p,hash:d,state:h,key:g},navigationType:o}}),[u,m,p,d,h,g,o]);return null==f?null:t.createElement(te.Provider,{value:c},t.createElement(ne.Provider,{children:a,value:f}))}function ve(e){let{children:t,location:n}=e;return ce(we(t),n)}function we(e,n){void 0===n&&(n=[]);let i=[];return t.Children.forEach(e,((e,a)=>{if(!t.isValidElement(e))return;let r=[...n,a];if(e.type===t.Fragment)return void i.push.apply(i,we(e.props.children,r));e.type!==_e&&w(!1),e.props.index&&e.props.children&&w(!1);let o={id:e.props.id||r.join("-"),caseSensitive:e.props.caseSensitive,element:e.props.element,Component:e.props.Component,index:e.props.index,path:e.props.path,loader:e.props.loader,action:e.props.action,errorElement:e.props.errorElement,ErrorBoundary:e.props.ErrorBoundary,hasErrorBoundary:null!=e.props.ErrorBoundary||null!=e.props.errorElement,shouldRevalidate:e.props.shouldRevalidate,handle:e.props.handle,lazy:e.props.lazy};e.props.children&&(o.children=we(e.props.children,r)),i.push(o)})),i}function ke(){return ke=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e},ke.apply(this,arguments)}n.startTransition,new Promise((()=>{})),t.Component,new Set(["application/x-www-form-urlencoded","multipart/form-data","text/plain"]);const Ce=["onClick","relative","reloadDocument","replace","state","target","to","preventScrollReset","unstable_viewTransition"],xe=n.startTransition;function Ae(n){let{basename:i,children:a,future:r,window:o}=n,l=t.useRef();null==l.current&&(l.current=function(t){return void 0===t&&(t={}),function(t,n,i,a){void 0===a&&(a={});let{window:r=document.defaultView,v5Compat:o=!1}=a,l=r.history,s=e.Pop,u=null,c=m();function m(){return(l.state||{idx:null}).idx}function p(){s=e.Pop;let t=m(),n=null==t?null:t-c;c=t,u&&u({action:s,location:h.location,delta:n})}function d(e){let t="null"!==r.location.origin?r.location.origin:r.location.href,n="string"==typeof e?e:A(e);return w(t,"No window.location.(origin|href) available to create URL for href: "+n),new URL(n,t)}null==c&&(c=0,l.replaceState(y({},l.state,{idx:c}),""));let h={get action(){return s},get location(){return t(r,l)},listen(e){if(u)throw new Error("A history only accepts one active listener");return r.addEventListener(v,p),u=e,()=>{r.removeEventListener(v,p),u=null}},createHref:e=>n(r,e),createURL:d,encodeLocation(e){let t=d(e);return{pathname:t.pathname,search:t.search,hash:t.hash}},push:function(t,n){s=e.Push;let a=x(h.location,t,n);i&&i(a,t),c=m()+1;let p=C(a,c),d=h.createHref(a);try{l.pushState(p,"",d)}catch(e){if(e instanceof DOMException&&"DataCloneError"===e.name)throw e;r.location.assign(d)}o&&u&&u({action:s,location:h.location,delta:1})},replace:function(t,n){s=e.Replace;let a=x(h.location,t,n);i&&i(a,t),c=m();let r=C(a,c),p=h.createHref(a);l.replaceState(r,"",p),o&&u&&u({action:s,location:h.location,delta:0})},go:e=>l.go(e)};return h}((function(e,t){let{pathname:n="/",search:i="",hash:a=""}=S(e.location.hash.substr(1));return n.startsWith("/")||n.startsWith(".")||(n="/"+n),x("",{pathname:n,search:i,hash:a},t.state&&t.state.usr||null,t.state&&t.state.key||"default")}),(function(e,t){let n=e.document.querySelector("base"),i="";if(n&&n.getAttribute("href")){let t=e.location.href,n=t.indexOf("#");i=-1===n?t:t.slice(0,n)}return i+"#"+("string"==typeof t?t:A(t))}),(function(e,t){k("/"===e.pathname.charAt(0),"relative pathnames are not supported in hash history.push("+JSON.stringify(t)+")")}),t)}({window:o,v5Compat:!0}));let s=l.current,[u,c]=t.useState({action:s.action,location:s.location}),{v7_startTransition:m}=r||{},p=t.useCallback((e=>{m&&xe?xe((()=>c(e))):c(e)}),[c,m]);return t.useLayoutEffect((()=>s.listen(p)),[s,p]),t.createElement(ye,{basename:i,children:a,location:u.location,navigationType:u.action,navigator:s})}const Se="undefined"!=typeof window&&void 0!==window.document&&void 0!==window.document.createElement,Be=/^(?:[a-z][a-z0-9+.-]*:|\/\/)/i,Ee=t.forwardRef((function(e,n){let i,{onClick:a,relative:r,reloadDocument:o,replace:l,state:s,target:u,to:c,preventScrollReset:m,unstable_viewTransition:p}=e,d=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,Ce),{basename:h}=t.useContext(te),g=!1;if("string"==typeof c&&Be.test(c)&&(i=c,Se))try{let e=new URL(window.location.href),t=c.startsWith("//")?new URL(e.protocol+c):new URL(c),n=D(t.pathname,h);t.origin===e.origin&&null!=n?c=n+t.search+t.hash:g=!0}catch(e){}let f=function(e,n){let{relative:i}=void 0===n?{}:n;re()||w(!1);let{basename:a,navigator:r}=t.useContext(te),{hash:o,pathname:l,search:s}=ue(e,{relative:i}),u=l;return"/"!==a&&(u="/"===l?a:V([a,l])),r.createHref({pathname:u,search:s,hash:o})}(c,{relative:r}),b=function(e,n){let{target:i,replace:a,state:r,preventScrollReset:o,relative:l,unstable_viewTransition:s}=void 0===n?{}:n,u=se(),c=oe(),m=ue(e,{relative:l});return t.useCallback((t=>{if(function(e,t){return!(0!==e.button||t&&"_self"!==t||function(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}(e))}(t,i)){t.preventDefault();let n=void 0!==a?a:A(c)===A(m);u(e,{replace:n,state:r,preventScrollReset:o,relative:l,unstable_viewTransition:s})}}),[c,u,m,a,r,i,e,o,l,s])}(c,{replace:l,state:s,target:u,preventScrollReset:m,relative:r,unstable_viewTransition:p});return t.createElement("a",ke({},d,{href:i||f,onClick:g||o?a:function(e){a&&a(e),e.defaultPrevented||b(e)},ref:n,target:u}))}));var ze,Ne;(function(e){e.UseScrollRestoration="useScrollRestoration",e.UseSubmit="useSubmit",e.UseSubmitFetcher="useSubmitFetcher",e.UseFetcher="useFetcher",e.useViewTransitionState="useViewTransitionState"})(ze||(ze={})),function(e){e.UseFetchers="useFetchers",e.UseScrollRestoration="useScrollRestoration"}(Ne||(Ne={}));const Pe=JSON.parse('{"R":[{"name":"Hydrogen","appearance":"colorless gas","atomic_mass":1.008,"boil":20.271,"category":"diatomic nonmetal","density":0.08988,"discovered_by":"Henry Cavendish","melt":13.99,"molar_heat":28.836,"named_by":"Antoine Lavoisier","number":1,"period":1,"group":1,"phase":"Gas","source":"https://en.wikipedia.org/wiki/Hydrogen","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_001_hydrogen/element_001_hydrogen_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_001_hydrogen/element_001_hydrogen.glb","spectral_img":"https://en.wikipedia.org/wiki/File:Hydrogen_Spectra.jpg","summary":"Hydrogen is a chemical element with chemical symbol H and atomic number 1. With an atomic weight of 1.00794 u, hydrogen is the lightest element on the periodic table. Its monatomic form (H) is the most abundant chemical substance in the Universe, constituting roughly 75% of all baryonic mass.","symbol":"H","xpos":1,"ypos":1,"wxpos":1,"wypos":1,"shells":[1],"electron_configuration":"1s1","electron_configuration_semantic":"1s1","electron_affinity":72.769,"electronegativity_pauling":2.2,"ionization_energies":[1312],"cpk-hex":"ffffff","image":{"title":"Vial of glowing ultrapure hydrogen, H2. Original size in cm: 1 x 5","url":"https://upload.wikimedia.org/wikipedia/commons/d/d9/Hydrogenglow.jpg","attribution":"User:Jurii, CC BY 3.0 <https://creativecommons.org/licenses/by/3.0>, via Wikimedia Commons, source: https://images-of-elements.com/hydrogen.php"},"block":"s"},{"name":"Helium","appearance":"colorless gas, exhibiting a red-orange glow when placed in a high-voltage electric field","atomic_mass":4.0026022,"boil":4.222,"category":"noble gas","density":0.1786,"discovered_by":"Pierre Janssen","melt":0.95,"molar_heat":null,"named_by":null,"number":2,"period":1,"group":18,"phase":"Gas","source":"https://en.wikipedia.org/wiki/Helium","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_002_helium/element_002_helium_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_002_helium/element_002_helium.glb","spectral_img":"https://en.wikipedia.org/wiki/File:Helium_spectrum.jpg","summary":"Helium is a chemical element with symbol He and atomic number 2. It is a colorless, odorless, tasteless, non-toxic, inert, monatomic gas that heads the noble gas group in the periodic table. Its boiling and melting points are the lowest among all the elements.","symbol":"He","xpos":18,"ypos":1,"wxpos":32,"wypos":1,"shells":[2],"electron_configuration":"1s2","electron_configuration_semantic":"1s2","electron_affinity":-48,"electronegativity_pauling":null,"ionization_energies":[2372.3,5250.5],"cpk-hex":"d9ffff","image":{"title":"Vial of glowing ultrapure helium. Original size in cm: 1 x 5","url":"https://upload.wikimedia.org/wikipedia/commons/0/00/Helium-glow.jpg","attribution":"Jurii, CC BY 3.0 <https://creativecommons.org/licenses/by/3.0>, via Wikimedia Commons, source: https://images-of-elements.com/helium.php"},"block":"s"},{"name":"Lithium","appearance":"silvery-white","atomic_mass":6.94,"boil":1603,"category":"alkali metal","density":0.534,"discovered_by":"Johan August Arfwedson","melt":453.65,"molar_heat":24.86,"named_by":null,"number":3,"period":2,"group":1,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Lithium","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_003_lithium/element_003_lithium_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_003_lithium/element_003_lithium.glb","spectral_img":null,"summary":"Lithium (from Greek:λίθος lithos, \\"stone\\") is a chemical element with the symbol Li and atomic number 3. It is a soft, silver-white metal belonging to the alkali metal group of chemical elements. Under standard conditions it is the lightest metal and the least dense solid element.","symbol":"Li","xpos":1,"ypos":2,"wxpos":1,"wypos":2,"shells":[2,1],"electron_configuration":"1s2 2s1","electron_configuration_semantic":"[He] 2s1","electron_affinity":59.6326,"electronegativity_pauling":0.98,"ionization_energies":[520.2,7298.1,11815],"cpk-hex":"cc80ff","image":{"title":"0.5 Grams Lithium under Argon. Original size of the largest piece in cm: 0.3 x 4","url":"https://upload.wikimedia.org/wikipedia/commons/e/e2/0.5_grams_lithium_under_argon.jpg","attribution":"Hi-Res Images ofChemical Elements, CC BY 3.0 <https://creativecommons.org/licenses/by/3.0>, via Wikimedia Commons, source: https://images-of-elements.com/lithium.php"},"block":"s"},{"name":"Beryllium","appearance":"white-gray metallic","atomic_mass":9.01218315,"boil":2742,"category":"alkaline earth metal","density":1.85,"discovered_by":"Louis Nicolas Vauquelin","melt":1560,"molar_heat":16.443,"named_by":null,"number":4,"period":2,"group":2,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Beryllium","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_004_beryllium/element_004_beryllium_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_004_beryllium/element_004_beryllium.glb","spectral_img":null,"summary":"Beryllium is a chemical element with symbol Be and atomic number 4. It is created through stellar nucleosynthesis and is a relatively rare element in the universe. It is a divalent element which occurs naturally only in combination with other elements in minerals.","symbol":"Be","xpos":2,"ypos":2,"wxpos":2,"wypos":2,"shells":[2,2],"electron_configuration":"1s2 2s2","electron_configuration_semantic":"[He] 2s2","electron_affinity":-48,"electronegativity_pauling":1.57,"ionization_energies":[899.5,1757.1,14848.7,21006.6],"cpk-hex":"c2ff00","image":{"title":"Pure Beryllium bead, 2.5 grams. Original size in cm: 1 x 1.5","url":"https://upload.wikimedia.org/wikipedia/commons/e/e2/Beryllium_%28Be%29.jpg","attribution":"Hi-Res Images ofChemical Elements, CC BY 3.0 <https://creativecommons.org/licenses/by/3.0>, via Wikimedia Commons, source: https://images-of-elements.com/beryllium.php"},"block":"s"},{"name":"Boron","appearance":"black-brown","atomic_mass":10.81,"boil":4200,"category":"metalloid","density":2.08,"discovered_by":"Joseph Louis Gay-Lussac","melt":2349,"molar_heat":11.087,"named_by":null,"number":5,"period":2,"group":13,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Boron","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_005_boron/element_005_boron_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_005_boron/element_005_boron.glb","spectral_img":null,"summary":"Boron is a metalloid chemical element with symbol B and atomic number 5. Produced entirely by cosmic ray spallation and supernovae and not by stellar nucleosynthesis, it is a low-abundance element in both the Solar system and the Earth\'s crust. Boron is concentrated on Earth by the water-solubility of its more common naturally occurring compounds, the borate minerals.","symbol":"B","xpos":13,"ypos":2,"wxpos":27,"wypos":2,"shells":[2,3],"electron_configuration":"1s2 2s2 2p1","electron_configuration_semantic":"[He] 2s2 2p1","electron_affinity":26.989,"electronegativity_pauling":2.04,"ionization_energies":[800.6,2427.1,3659.7,25025.8,32826.7],"cpk-hex":"ffb5b5","image":{"title":"Pure Crystalline Boron, front and back side. Original size in cm: 2 x 3","url":"https://upload.wikimedia.org/wikipedia/commons/a/a2/Boron.jpg","attribution":"Jurii, CC BY 3.0 <https://creativecommons.org/licenses/by/3.0>, via Wikimedia Commons, source: https://images-of-elements.com/boron.php"},"block":"p"},{"name":"Carbon","appearance":null,"atomic_mass":12.011,"boil":null,"category":"polyatomic nonmetal","density":1.821,"discovered_by":"Ancient Egypt","melt":null,"molar_heat":8.517,"named_by":null,"number":6,"period":2,"group":14,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Carbon","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_006_carbon/element_006_carbon_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_006_carbon/element_006_carbon.glb","spectral_img":"https://en.wikipedia.org/wiki/File:Carbon_Spectra.jpg","summary":"Carbon (from Latin:carbo \\"coal\\") is a chemical element with symbol C and atomic number 6. On the periodic table, it is the first (row 2) of six elements in column (group) 14, which have in common the composition of their outer electron shell. It is nonmetallic and tetravalent—making four electrons available to form covalent chemical bonds.","symbol":"C","xpos":14,"ypos":2,"wxpos":28,"wypos":2,"shells":[2,4],"electron_configuration":"1s2 2s2 2p2","electron_configuration_semantic":"[He] 2s2 2p2","electron_affinity":121.7763,"electronegativity_pauling":2.55,"ionization_energies":[1086.5,2352.6,4620.5,6222.7,37831,47277],"cpk-hex":"909090","image":{"title":"Element 6 - Carbon","url":"https://upload.wikimedia.org/wikipedia/commons/6/68/Pure_Carbon.png","attribution":"Texas Lane, CC BY-SA 4.0 <https://creativecommons.org/licenses/by-sa/4.0>, via Wikimedia Commons"},"block":"p"},{"name":"Nitrogen","appearance":"colorless gas, liquid or solid","atomic_mass":14.007,"boil":77.355,"category":"diatomic nonmetal","density":1.251,"discovered_by":"Daniel Rutherford","melt":63.15,"molar_heat":null,"named_by":"Jean-Antoine Chaptal","number":7,"period":2,"group":15,"phase":"Gas","source":"https://en.wikipedia.org/wiki/Nitrogen","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_007_nitrogen/element_007_nitrogen_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_007_nitrogen/element_007_nitrogen.glb","spectral_img":"https://en.wikipedia.org/wiki/File:Nitrogen_Spectra.jpg","summary":"Nitrogen is a chemical element with symbol N and atomic number 7. It is the lightest pnictogen and at room temperature, it is a transparent, odorless diatomic gas. Nitrogen is a common element in the universe, estimated at about seventh in total abundance in the Milky Way and the Solar System.","symbol":"N","xpos":15,"ypos":2,"wxpos":29,"wypos":2,"shells":[2,5],"electron_configuration":"1s2 2s2 2p3","electron_configuration_semantic":"[He] 2s2 2p3","electron_affinity":-6.8,"electronegativity_pauling":3.04,"ionization_energies":[1402.3,2856,4578.1,7475,9444.9,53266.6,64360],"cpk-hex":"3050f8","image":{"title":"Vial of Glowing Ultrapure Nitrogen, N2. Original size in cm: 1 x 5","url":"https://upload.wikimedia.org/wikipedia/commons/2/2d/Nitrogen-glow.jpg","attribution":"Jurii, CC BY 3.0 <https://creativecommons.org/licenses/by/3.0>, via Wikimedia Commons, source: https://images-of-elements.com/nitrogen.php"},"block":"p"},{"name":"Oxygen","appearance":null,"atomic_mass":15.999,"boil":90.188,"category":"diatomic nonmetal","density":1.429,"discovered_by":"Carl Wilhelm Scheele","melt":54.36,"molar_heat":null,"named_by":"Antoine Lavoisier","number":8,"period":2,"group":16,"phase":"Gas","source":"https://en.wikipedia.org/wiki/Oxygen","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_008_oxygen/element_008_oxygen_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_008_oxygen/element_008_oxygen.glb","spectral_img":"https://en.wikipedia.org/wiki/File:Oxygen_spectre.jpg","summary":"Oxygen is a chemical element with symbol O and atomic number 8. It is a member of the chalcogen group on the periodic table and is a highly reactive nonmetal and oxidizing agent that readily forms compounds (notably oxides) with most elements. By mass, oxygen is the third-most abundant element in the universe, after hydrogen and helium.","symbol":"O","xpos":16,"ypos":2,"wxpos":30,"wypos":2,"shells":[2,6],"electron_configuration":"1s2 2s2 2p4","electron_configuration_semantic":"[He] 2s2 2p4","electron_affinity":140.976,"electronegativity_pauling":3.44,"ionization_energies":[1313.9,3388.3,5300.5,7469.2,10989.5,13326.5,71330,84078],"cpk-hex":"ff0d0d","image":{"title":"Liquid Oxygen in a Beaker","url":"https://upload.wikimedia.org/wikipedia/commons/a/a0/Liquid_oxygen_in_a_beaker_%28cropped_and_retouched%29.jpg","attribution":"Staff Sgt. Nika Glover, U.S. Air Force, Public domain, via Wikimedia Commons"},"block":"p"},{"name":"Fluorine","appearance":null,"atomic_mass":18.9984031636,"boil":85.03,"category":"diatomic nonmetal","density":1.696,"discovered_by":"André-Marie Ampère","melt":53.48,"molar_heat":null,"named_by":"Humphry Davy","number":9,"period":2,"group":17,"phase":"Gas","source":"https://en.wikipedia.org/wiki/Fluorine","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_009_fluorine/element_009_fluorine_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_009_fluorine/element_009_fluorine.glb","spectral_img":null,"summary":"Fluorine is a chemical element with symbol F and atomic number 9. It is the lightest halogen and exists as a highly toxic pale yellow diatomic gas at standard conditions. As the most electronegative element, it is extremely reactive:almost all other elements, including some noble gases, form compounds with fluorine.","symbol":"F","xpos":17,"ypos":2,"wxpos":31,"wypos":2,"shells":[2,7],"electron_configuration":"1s2 2s2 2p5","electron_configuration_semantic":"[He] 2s2 2p5","electron_affinity":328.1649,"electronegativity_pauling":3.98,"ionization_energies":[1681,3374.2,6050.4,8407.7,11022.7,15164.1,17868,92038.1,106434.3],"cpk-hex":"90e050","image":{"title":"Liquid Fluorine at -196°C","url":"https://upload.wikimedia.org/wikipedia/commons/2/2c/Fluoro_liquido_a_-196%C2%B0C_1.jpg","attribution":"Fulvio314, CC BY-SA 3.0 <https://creativecommons.org/licenses/by-sa/3.0>, via Wikimedia Commons"},"block":"p"},{"name":"Neon","appearance":"colorless gas exhibiting an orange-red glow when placed in a high voltage electric field","atomic_mass":20.17976,"boil":27.104,"category":"noble gas","density":0.9002,"discovered_by":"Morris Travers","melt":24.56,"molar_heat":null,"named_by":null,"number":10,"period":2,"group":18,"phase":"Gas","source":"https://en.wikipedia.org/wiki/Neon","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_010_neon/element_010_neon_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_010_neon/element_010_neon.glb","spectral_img":"https://en.wikipedia.org/wiki/File:Neon_spectra.jpg","summary":"Neon is a chemical element with symbol Ne and atomic number 10. It is in group 18 (noble gases) of the periodic table. Neon is a colorless, odorless, inert monatomic gas under standard conditions, with about two-thirds the density of air.","symbol":"Ne","xpos":18,"ypos":2,"wxpos":32,"wypos":2,"shells":[2,8],"electron_configuration":"1s2 2s2 2p6","electron_configuration_semantic":"[He] 2s2 2p6","electron_affinity":-116,"electronegativity_pauling":null,"ionization_energies":[2080.7,3952.3,6122,9371,12177,15238,19999,23069.5,115379.5,131432],"cpk-hex":"b3e3f5","image":{"title":"Vial of Glowing Ultrapure neon. Original size in cm: 1 x 5","url":"https://upload.wikimedia.org/wikipedia/commons/f/f8/Neon-glow.jpg","attribution":"Jurii, CC BY 3.0 <https://creativecommons.org/licenses/by/3.0>, via Wikimedia Commons, source: https://images-of-elements.com/neon.php"},"block":"p"},{"name":"Sodium","appearance":"silvery white metallic","atomic_mass":22.989769282,"boil":1156.09,"category":"alkali metal","density":0.968,"discovered_by":"Humphry Davy","melt":370.944,"molar_heat":28.23,"named_by":null,"number":11,"period":3,"group":1,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Sodium","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_011_sodium/element_011_sodium_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_011_sodium/element_011_sodium.glb","spectral_img":"https://en.wikipedia.org/wiki/File:Sodium_Spectra.jpg","summary":"Sodium /ˈsoʊdiəm/ is a chemical element with symbol Na (from Ancient Greek Νάτριο) and atomic number 11. It is a soft, silver-white, highly reactive metal. In the Periodic table it is in column 1 (alkali metals), and shares with the other six elements in that column that it has a single electron in its outer shell, which it readily donates, creating a positively charged atom - a cation.","symbol":"Na","xpos":1,"ypos":3,"wxpos":1,"wypos":3,"shells":[2,8,1],"electron_configuration":"1s2 2s2 2p6 3s1","electron_configuration_semantic":"[Ne] 3s1","electron_affinity":52.867,"electronegativity_pauling":0.93,"ionization_energies":[495.8,4562,6910.3,9543,13354,16613,20117,25496,28932,141362,159076],"cpk-hex":"ab5cf2","image":{"title":"Na (Sodium) Metal","url":"https://upload.wikimedia.org/wikipedia/commons/2/27/Na_%28Sodium%29.jpg","attribution":"The original uploader was Dnn87 at English Wikipedia., CC BY-SA 3.0 <https://creativecommons.org/licenses/by-sa/3.0>, via Wikimedia Commons"},"block":"s"},{"name":"Magnesium","appearance":"shiny grey solid","atomic_mass":24.305,"boil":1363,"category":"alkaline earth metal","density":1.738,"discovered_by":"Joseph Black","melt":923,"molar_heat":24.869,"named_by":null,"number":12,"period":3,"group":2,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Magnesium","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_012_magnesium/element_012_magnesium_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_012_magnesium/element_012_magnesium.glb","spectral_img":"https://en.wikipedia.org/wiki/File:Magnesium_Spectra.jpg","summary":"Magnesium is a chemical element with symbol Mg and atomic number 12. It is a shiny gray solid which bears a close physical resemblance to the other five elements in the second column (Group 2, or alkaline earth metals) of the periodic table:they each have the same electron configuration in their outer electron shell producing a similar crystal structure. Magnesium is the ninth most abundant element in the universe.","symbol":"Mg","xpos":2,"ypos":3,"wxpos":2,"wypos":3,"shells":[2,8,2],"electron_configuration":"1s2 2s2 2p6 3s2","electron_configuration_semantic":"[Ne] 3s2","electron_affinity":-40,"electronegativity_pauling":1.31,"ionization_energies":[737.7,1450.7,7732.7,10542.5,13630,18020,21711,25661,31653,35458,169988,189368],"cpk-hex":"8aff00","image":{"title":"Magnesium crystals","url":"https://upload.wikimedia.org/wikipedia/commons/3/3f/Magnesium_crystals.jpg","attribution":"Warut Roonguthai, CC BY-SA 3.0 <https://creativecommons.org/licenses/by-sa/3.0>, via Wikimedia Commons"},"block":"s"},{"name":"Aluminium","appearance":"silvery gray metallic","atomic_mass":26.98153857,"boil":2743,"category":"post-transition metal","density":2.7,"discovered_by":null,"melt":933.47,"molar_heat":24.2,"named_by":"Humphry Davy","number":13,"period":3,"group":13,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Aluminium","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_013_aluminum/element_013_aluminum_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_013_aluminum/element_013_aluminum.glb","spectral_img":null,"summary":"Aluminium (or aluminum; see different endings) is a chemical element in the boron group with symbol Al and atomic number 13. It is a silvery-white, soft, nonmagnetic, ductile metal. Aluminium is the third most abundant element (after oxygen and silicon), and the most abundant metal, in the Earth\'s crust.","symbol":"Al","xpos":13,"ypos":3,"wxpos":27,"wypos":3,"shells":[2,8,3],"electron_configuration":"1s2 2s2 2p6 3s2 3p1","electron_configuration_semantic":"[Ne] 3s2 3p1","electron_affinity":41.762,"electronegativity_pauling":1.61,"ionization_energies":[577.5,1816.7,2744.8,11577,14842,18379,23326,27465,31853,38473,42647,201266,222316],"cpk-hex":"bfa6a6","image":{"title":"Pure aluminium foil. Original size in cm: 5 x 5","url":"https://upload.wikimedia.org/wikipedia/commons/3/3e/Aluminium.jpg","attribution":"Jurii, CC BY 3.0 <https://creativecommons.org/licenses/by/3.0>, via Wikimedia Commons, source: https://images-of-elements.com/aluminium.php "},"block":"p"},{"name":"Silicon","appearance":"crystalline, reflective with bluish-tinged faces","atomic_mass":28.085,"boil":3538,"category":"metalloid","density":2.329,"discovered_by":"Jöns Jacob Berzelius","melt":1687,"molar_heat":19.789,"named_by":"Thomas Thomson (chemist)","number":14,"period":3,"group":14,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Silicon","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_014_silicon/element_014_silicon_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_014_silicon/element_014_silicon.glb","spectral_img":"https://en.wikipedia.org/wiki/File:Silicon_Spectra.jpg","summary":"Silicon is a chemical element with symbol Si and atomic number 14. It is a tetravalent metalloid, more reactive than germanium, the metalloid directly below it in the table. Controversy about silicon\'s character dates to its discovery.","symbol":"Si","xpos":14,"ypos":3,"wxpos":28,"wypos":3,"shells":[2,8,4],"electron_configuration":"1s2 2s2 2p6 3s2 3p2","electron_configuration_semantic":"[Ne] 3s2 3p2","electron_affinity":134.0684,"electronegativity_pauling":1.9,"ionization_energies":[786.5,1577.1,3231.6,4355.5,16091,19805,23780,29287,33878,38726,45962,50502,235196,257923],"cpk-hex":"f0c8a0","image":{"title":"Chunk of Ultrapure Silicon, 2 x 2 cm","url":"https://upload.wikimedia.org/wikipedia/commons/2/2c/Silicon.jpg","attribution":"Jurii, CC BY 3.0 <https://creativecommons.org/licenses/by/3.0>, via Wikimedia Commons, source: https://images-of-elements.com/silicon.php"},"block":"p"},{"name":"Phosphorus","appearance":"colourless, waxy white, yellow, scarlet, red, violet, black","atomic_mass":30.9737619985,"boil":null,"category":"polyatomic nonmetal","density":1.823,"discovered_by":"Hennig Brand","melt":null,"molar_heat":23.824,"named_by":null,"number":15,"period":3,"group":15,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Phosphorus","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_015_phosphorus/element_015_phosphorus_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_015_phosphorus/element_015_phosphorus.glb","spectral_img":null,"summary":"Phosphorus is a chemical element with symbol P and atomic number 15. As an element, phosphorus exists in two major forms—white phosphorus and red phosphorus—but due to its high reactivity, phosphorus is never found as a free element on Earth. Instead phosphorus-containing minerals are almost always present in their maximally oxidised state, as inorganic phosphate rocks.","symbol":"P","xpos":15,"ypos":3,"wxpos":29,"wypos":3,"shells":[2,8,5],"electron_configuration":"1s2 2s2 2p6 3s2 3p3","electron_configuration_semantic":"[Ne] 3s2 3p3","electron_affinity":72.037,"electronegativity_pauling":2.19,"ionization_energies":[1011.8,1907,2914.1,4963.6,6273.9,21267,25431,29872,35905,40950,46261,54110,59024,271791,296195],"cpk-hex":"ff8000","image":{"title":"Purple Phosphorus","url":"https://upload.wikimedia.org/wikipedia/commons/6/6d/Phosphorus-purple.jpg","attribution":"Jurii, CC BY 3.0 <https://creativecommons.org/licenses/by/3.0>, via Wikimedia Commons, source: https://images-of-elements.com/phosphorus.php"},"block":"p"},{"name":"Sulfur","appearance":"lemon yellow sintered microcrystals","atomic_mass":32.06,"boil":717.8,"category":"polyatomic nonmetal","density":2.07,"discovered_by":"Ancient china","melt":388.36,"molar_heat":22.75,"named_by":null,"number":16,"period":3,"group":16,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Sulfur","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_016_sulfur/element_016_sulfur_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_016_sulfur/element_016_sulfur.glb","spectral_img":"https://en.wikipedia.org/wiki/File:Sulfur_Spectrum.jpg","summary":"Sulfur or sulphur (see spelling differences) is a chemical element with symbol S and atomic number 16. It is an abundant, multivalent non-metal. Under normal conditions, sulfur atoms form cyclic octatomic molecules with chemical formula S8.","symbol":"S","xpos":16,"ypos":3,"wxpos":30,"wypos":3,"shells":[2,8,6],"electron_configuration":"1s2 2s2 2p6 3s2 3p4","electron_configuration_semantic":"[Ne] 3s2 3p4","electron_affinity":200.4101,"electronegativity_pauling":2.58,"ionization_energies":[999.6,2252,3357,4556,7004.3,8495.8,27107,31719,36621,43177,48710,54460,62930,68216,311048,337138],"cpk-hex":"ffff30","image":{"title":"Native Sulfur From Russia","url":"https://upload.wikimedia.org/wikipedia/commons/2/23/Native_sulfur_%28Vodinskoe_Deposit%3B_quarry_near_Samara%2C_Russia%29_9.jpg","attribution":"James St. John, CC BY 2.0 <https://creativecommons.org/licenses/by/2.0>, via Wikimedia Commons"},"block":"p"},{"name":"Chlorine","appearance":"pale yellow-green gas","atomic_mass":35.45,"boil":239.11,"category":"diatomic nonmetal","density":3.2,"discovered_by":"Carl Wilhelm Scheele","melt":171.6,"molar_heat":null,"named_by":null,"number":17,"period":3,"group":17,"phase":"Gas","source":"https://en.wikipedia.org/wiki/Chlorine","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_017_chlorine/element_017_chlorine_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_017_chlorine/element_017_chlorine.glb","spectral_img":"https://en.wikipedia.org/wiki/File:Chlorine_spectrum_visible.png","summary":"Chlorine is a chemical element with symbol Cl and atomic number 17. It also has a relative atomic mass of 35.5. Chlorine is in the halogen group (17) and is the second lightest halogen following fluorine.","symbol":"Cl","xpos":17,"ypos":3,"wxpos":31,"wypos":3,"shells":[2,8,7],"electron_configuration":"1s2 2s2 2p6 3s2 3p5","electron_configuration_semantic":"[Ne] 3s2 3p5","electron_affinity":348.575,"electronegativity_pauling":3.16,"ionization_energies":[1251.2,2298,3822,5158.6,6542,9362,11018,33604,38600,43961,51068,57119,63363,72341,78095,352994,380760],"cpk-hex":"1ff01f","image":{"title":"A Sample of Chlorine","url":"https://upload.wikimedia.org/wikipedia/commons/9/9a/Chlorine-sample-flip.jpg","attribution":"Benjah-bmm27, Public domain, via Wikimedia Commons"},"block":"p"},{"name":"Argon","appearance":"colorless gas exhibiting a lilac/violet glow when placed in a high voltage electric field","atomic_mass":39.9481,"boil":87.302,"category":"noble gas","density":1.784,"discovered_by":"Lord Rayleigh","melt":83.81,"molar_heat":null,"named_by":null,"number":18,"period":3,"group":18,"phase":"Gas","source":"https://en.wikipedia.org/wiki/Argon","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_018_argon/element_018_argon_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_018_argon/element_018_argon.glb","spectral_img":"https://en.wikipedia.org/wiki/File:Argon_Spectrum.png","summary":"Argon is a chemical element with symbol Ar and atomic number 18. It is in group 18 of the periodic table and is a noble gas. Argon is the third most common gas in the Earth\'s atmosphere, at 0.934% (9,340 ppmv), making it over twice as abundant as the next most common atmospheric gas, water vapor (which averages about 4000 ppmv, but varies greatly), and 23 times as abundant as the next most common non-condensing atmospheric gas, carbon dioxide (400 ppmv), and more than 500 times as abundant as the next most common noble gas, neon (18 ppmv).","symbol":"Ar","xpos":18,"ypos":3,"wxpos":32,"wypos":3,"shells":[2,8,8],"electron_configuration":"1s2 2s2 2p6 3s2 3p6","electron_configuration_semantic":"[Ne] 3s2 3p6","electron_affinity":-96,"electronegativity_pauling":null,"ionization_energies":[1520.6,2665.8,3931,5771,7238,8781,11995,13842,40760,46186,52002,59653,66199,72918,82473,88576,397605,427066],"cpk-hex":"80d1e3","image":{"title":"Vial of glowing ultrapure argon. Original size in cm: 1 x 5","url":"https://upload.wikimedia.org/wikipedia/commons/5/53/Argon-glow.jpg","attribution":"Jurii, CC BY 3.0 <https://creativecommons.org/licenses/by/3.0>, via Wikimedia Commons, source: https://images-of-elements.com/argon.php"},"block":"p"},{"name":"Potassium","appearance":"silvery gray","atomic_mass":39.09831,"boil":1032,"category":"alkali metal","density":0.862,"discovered_by":"Humphry Davy","melt":336.7,"molar_heat":29.6,"named_by":null,"number":19,"period":4,"group":1,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Potassium","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_019_potassium/element_019_potassium_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_019_potassium/element_019_potassium.glb","spectral_img":"https://en.wikipedia.org/wiki/File:Potassium_Spectrum.jpg","summary":"Potassium is a chemical element with symbol K (derived from Neo-Latin, kalium) and atomic number 19. It was first isolated from potash, the ashes of plants, from which its name is derived. In the Periodic table, potassium is one of seven elements in column (group) 1 (alkali metals):they all have a single valence electron in their outer electron shell, which they readily give up to create an atom with a positive charge - a cation, and combine with anions to form salts.","symbol":"K","xpos":1,"ypos":4,"wxpos":1,"wypos":4,"shells":[2,8,8,1],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s1","electron_configuration_semantic":"[Ar] 4s1","electron_affinity":48.383,"electronegativity_pauling":0.82,"ionization_energies":[418.8,3052,4420,5877,7975,9590,11343,14944,16963.7,48610,54490,60730,68950,75900,83080,93400,99710,444880,476063],"cpk-hex":"8f40d4","image":{"title":"Potassium Pieces","url":"https://upload.wikimedia.org/wikipedia/commons/b/b3/Potassium.JPG","attribution":"Dnn87, CC BY 3.0 <https://creativecommons.org/licenses/by/3.0>, via Wikimedia Commons"},"block":"s"},{"name":"Calcium","appearance":null,"atomic_mass":40.0784,"boil":1757,"category":"alkaline earth metal","density":1.55,"discovered_by":"Humphry Davy","melt":1115,"molar_heat":25.929,"named_by":null,"number":20,"period":4,"group":2,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Calcium","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_020_calcium/element_020_calcium_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_020_calcium/element_020_calcium.glb","spectral_img":"https://en.wikipedia.org/wiki/File:Calcium_Spectrum.png","summary":"Calcium is a chemical element with symbol Ca and atomic number 20. Calcium is a soft gray alkaline earth metal, fifth-most-abundant element by mass in the Earth\'s crust. The ion Ca2+ is also the fifth-most-abundant dissolved ion in seawater by both molarity and mass, after sodium, chloride, magnesium, and sulfate.","symbol":"Ca","xpos":2,"ypos":4,"wxpos":2,"wypos":4,"shells":[2,8,8,2],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2","electron_configuration_semantic":"[Ar] 4s2","electron_affinity":2.37,"electronegativity_pauling":1,"ionization_energies":[589.8,1145.4,4912.4,6491,8153,10496,12270,14206,18191,20385,57110,63410,70110,78890,86310,94000,104900,111711,494850,527762],"cpk-hex":"3dff00","image":{"title":"Calcium Grains, grain size about 1 mm","url":"https://upload.wikimedia.org/wikipedia/commons/7/72/Calcium.jpg","attribution":"Jurii, CC BY 3.0 <https://creativecommons.org/licenses/by/3.0>, via Wikimedia Commons, source: https://images-of-elements.com/calcium.php"},"block":"s"},{"name":"Scandium","appearance":"silvery white","atomic_mass":44.9559085,"boil":3109,"category":"transition metal","density":2.985,"discovered_by":"Lars Fredrik Nilson","melt":1814,"molar_heat":25.52,"named_by":null,"number":21,"period":4,"group":3,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Scandium","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_021_scandium/element_021_scandium_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_021_scandium/element_021_scandium.glb","spectral_img":null,"summary":"Scandium is a chemical element with symbol Sc and atomic number 21. A silvery-white metallic d-block element, it has historically been sometimes classified as a rare earth element, together with yttrium and the lanthanoids. It was discovered in 1879 by spectral analysis of the minerals euxenite and gadolinite from Scandinavia.","symbol":"Sc","xpos":3,"ypos":4,"wxpos":17,"wypos":4,"shells":[2,8,9,2],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d1","electron_configuration_semantic":"[Ar] 3d1 4s2","electron_affinity":18,"electronegativity_pauling":1.36,"ionization_energies":[633.1,1235,2388.6,7090.6,8843,10679,13310,15250,17370,21726,24102,66320,73010,80160,89490,97400,105600,117000,124270,547530,582163],"cpk-hex":"e6e6e6","image":{"title":"Crystal of Scandium. About 1g","url":"https://upload.wikimedia.org/wikipedia/commons/f/f5/Scandium%2C_Sc.jpg","attribution":"JanDerChemiker, CC BY-SA 3.0 <https://creativecommons.org/licenses/by-sa/3.0>, via Wikimedia Commons"},"block":"d"},{"name":"Titanium","appearance":"silvery grey-white metallic","atomic_mass":47.8671,"boil":3560,"category":"transition metal","density":4.506,"discovered_by":"William Gregor","melt":1941,"molar_heat":25.06,"named_by":"Martin Heinrich Klaproth","number":22,"period":4,"group":4,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Titanium","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_022_titanium/element_022_titanium_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_022_titanium/element_022_titanium.glb","spectral_img":null,"summary":"Titanium is a chemical element with symbol Ti and atomic number 22. It is a lustrous transition metal with a silver color, low density and high strength. It is highly resistant to corrosion in sea water, aqua regia and chlorine.","symbol":"Ti","xpos":4,"ypos":4,"wxpos":18,"wypos":4,"shells":[2,8,10,2],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d2","electron_configuration_semantic":"[Ar] 3d2 4s2","electron_affinity":7.289,"electronegativity_pauling":1.54,"ionization_energies":[658.8,1309.8,2652.5,4174.6,9581,11533,13590,16440,18530,20833,25575,28125,76015,83280,90880,100700,109100,117800,129900,137530,602930,639294],"cpk-hex":"bfc2c7","image":{"title":"Titanium Crystal made with the van Arkel-de Booer Process. 87 grams, Orginial size in cm: 2.5 x 4","url":"https://upload.wikimedia.org/wikipedia/commons/e/ec/Titanium.jpg","attribution":"Hi-Res Images ofChemical Elements, CC BY 3.0 <https://creativecommons.org/licenses/by/3.0>, via Wikimedia Commons, source: https://images-of-elements.com/titanium.php"},"block":"d"},{"name":"Vanadium","appearance":"blue-silver-grey metal","atomic_mass":50.94151,"boil":3680,"category":"transition metal","density":6,"discovered_by":"Andrés Manuel del Río","melt":2183,"molar_heat":24.89,"named_by":"Isotopes of vanadium","number":23,"period":4,"group":5,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Vanadium","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_023_vanadium/element_023_vanadium_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_023_vanadium/element_023_vanadium.glb","spectral_img":null,"summary":"Vanadium is a chemical element with symbol V and atomic number 23. It is a hard, silvery grey, ductile and malleable transition metal. The element is found only in chemically combined form in nature, but once isolated artificially, the formation of an oxide layer stabilizes the free metal somewhat against further oxidation.","symbol":"V","xpos":5,"ypos":4,"wxpos":19,"wypos":4,"shells":[2,8,11,2],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d3","electron_configuration_semantic":"[Ar] 3d3 4s2","electron_affinity":50.911,"electronegativity_pauling":1.63,"ionization_energies":[650.9,1414,2830,4507,6298.7,12363,14530,16730,19860,22240,24670,29730,32446,86450,94170,102300,112700,121600,130700,143400,151440,661050,699144],"cpk-hex":"a6a6ab","image":{"title":"Pieces of Pure Vanadium with Oxide Layer","url":"https://upload.wikimedia.org/wikipedia/commons/0/0a/Vanadium-pieces.jpg","attribution":"Jurii, CC BY 3.0 <https://creativecommons.org/licenses/by/3.0>, via Wikimedia Commons, source: https://images-of-elements.com/vanadium.php"},"block":"d"},{"name":"Chromium","appearance":"silvery metallic","atomic_mass":51.99616,"boil":2944,"category":"transition metal","density":7.19,"discovered_by":"Louis Nicolas Vauquelin","melt":2180,"molar_heat":23.35,"named_by":null,"number":24,"period":4,"group":6,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Chromium","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_024_chromium/element_024_chromium_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_024_chromium/element_024_chromium.glb","spectral_img":null,"summary":"Chromium is a chemical element with symbol Cr and atomic number 24. It is the first element in Group 6. It is a steely-gray, lustrous, hard and brittle metal which takes a high polish, resists tarnishing, and has a high melting point.","symbol":"Cr","xpos":6,"ypos":4,"wxpos":20,"wypos":4,"shells":[2,8,13,1],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s1 3d5","electron_configuration_semantic":"[Ar] 3d5 4s1","electron_affinity":65.21,"electronegativity_pauling":1.66,"ionization_energies":[652.9,1590.6,2987,4743,6702,8744.9,15455,17820,20190,23580,26130,28750,34230,37066,97510,105800,114300,125300,134700,144300,157700,166090,721870,761733],"cpk-hex":"8a99c7","image":{"title":"Piece of Chromium Metal","url":"https://upload.wikimedia.org/wikipedia/commons/a/a1/Chromium.jpg","attribution":"Jurii, CC BY 3.0 <https://creativecommons.org/licenses/by/3.0>, via Wikimedia Commons, source: https://images-of-elements.com/chromium.php"},"block":"d"},{"name":"Manganese","appearance":"silvery metallic","atomic_mass":54.9380443,"boil":2334,"category":"transition metal","density":7.21,"discovered_by":"Torbern Olof Bergman","melt":1519,"molar_heat":26.32,"named_by":null,"number":25,"period":4,"group":7,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Manganese","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_025_manganese/element_025_manganese_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_025_manganese/element_025_manganese.glb","spectral_img":null,"summary":"Manganese is a chemical element with symbol Mn and atomic number 25. It is not found as a free element in nature; it is often found in combination with iron, and in many minerals. Manganese is a metal with important industrial metal alloy uses, particularly in stainless steels.","symbol":"Mn","xpos":7,"ypos":4,"wxpos":21,"wypos":4,"shells":[2,8,13,2],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d5","electron_configuration_semantic":"[Ar] 3d5 4s2","electron_affinity":-50,"electronegativity_pauling":1.55,"ionization_energies":[717.3,1509,3248,4940,6990,9220,11500,18770,21400,23960,27590,30330,33150,38880,41987,109480,118100,127100,138600,148500,158600,172500,181380,785450,827067],"cpk-hex":"9c7ac7","image":{"title":"Two Oieces of Manganese Metal","url":"https://upload.wikimedia.org/wikipedia/commons/6/64/Manganese_element.jpg","attribution":"W. Oelen, CC BY-SA 3.0 <https://creativecommons.org/licenses/by-sa/3.0>, via Wikimedia Commons"},"block":"d"},{"name":"Iron","appearance":"lustrous metallic with a grayish tinge","atomic_mass":55.8452,"boil":3134,"category":"transition metal","density":7.874,"discovered_by":"5000 BC","melt":1811,"molar_heat":25.1,"named_by":null,"number":26,"period":4,"group":8,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Iron","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_026_iron/element_026_iron_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_026_iron/element_026_iron.glb","spectral_img":"https://en.wikipedia.org/wiki/File:Iron_Spectrum.jpg","summary":"Iron is a chemical element with symbol Fe (from Latin:ferrum) and atomic number 26. It is a metal in the first transition series. It is by mass the most common element on Earth, forming much of Earth\'s outer and inner core.","symbol":"Fe","xpos":8,"ypos":4,"wxpos":22,"wypos":4,"shells":[2,8,14,2],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d6","electron_configuration_semantic":"[Ar] 3d6 4s2","electron_affinity":14.785,"electronegativity_pauling":1.83,"ionization_energies":[762.5,1561.9,2957,5290,7240,9560,12060,14580,22540,25290,28000,31920,34830,37840,44100,47206,122200,131000,140500,152600,163000,173600,188100,195200,851800,895161],"cpk-hex":"e06633","image":{"title":"Fragments of an iron meteorite, about 92% iron. Original size of the single pieces in cm: 0.4 - 0.8","url":"https://images-of-elements.com/iron-2.jpg","attribution":"Chemical ELements A Virtual Museum, CC BY 3.0 <https://creativecommons.org/licenses/by/3.0> source: https://images-of-elements.com/iron.php"},"block":"d"},{"name":"Cobalt","appearance":"hard lustrous gray metal","atomic_mass":58.9331944,"boil":3200,"category":"transition metal","density":8.9,"discovered_by":"Georg Brandt","melt":1768,"molar_heat":24.81,"named_by":null,"number":27,"period":4,"group":9,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Cobalt","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_027_cobalt/element_027_cobalt_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_027_cobalt/element_027_cobalt.glb","spectral_img":null,"summary":"Cobalt is a chemical element with symbol Co and atomic number 27. Like nickel, cobalt in the Earth\'s crust is found only in chemically combined form, save for small deposits found in alloys of natural meteoric iron. The free element, produced by reductive smelting, is a hard, lustrous, silver-gray metal.","symbol":"Co","xpos":9,"ypos":4,"wxpos":23,"wypos":4,"shells":[2,8,15,2],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d7","electron_configuration_semantic":"[Ar] 3d7 4s2","electron_affinity":63.898,"electronegativity_pauling":1.88,"ionization_energies":[760.4,1648,3232,4950,7670,9840,12440,15230,17959,26570,29400,32400,36600,39700,42800,49396,52737,134810,145170,154700,167400,178100,189300,204500,214100,920870,966023],"cpk-hex":"f090a0","image":{"title":"Fractions from a cobalt, 7 and 4 grams. Original size in cm: 2 x 2","url":"https://upload.wikimedia.org/wikipedia/commons/6/62/Cobalt_ore_2.jpg","attribution":"Hi-Res Images ofChemical Elements, CC BY 3.0 <https://creativecommons.org/licenses/by/3.0>, via Wikimedia Commons, source: https://images-of-elements.com/cobalt.php"},"block":"d"},{"name":"Nickel","appearance":"lustrous, metallic, and silver with a gold tinge","atomic_mass":58.69344,"boil":3003,"category":"transition metal","density":8.908,"discovered_by":"Axel Fredrik Cronstedt","melt":1728,"molar_heat":26.07,"named_by":null,"number":28,"period":4,"group":10,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Nickel","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_028_nickel/element_028_nickel_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_028_nickel/element_028_nickel.glb","spectral_img":null,"summary":"Nickel is a chemical element with symbol Ni and atomic number 28. It is a silvery-white lustrous metal with a slight golden tinge. Nickel belongs to the transition metals and is hard and ductile.","symbol":"Ni","xpos":10,"ypos":4,"wxpos":24,"wypos":4,"shells":[2,8,16,2],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d8","electron_configuration_semantic":"[Ar] 3d8 4s2","electron_affinity":111.65,"electronegativity_pauling":1.91,"ionization_energies":[737.1,1753,3395,5300,7339,10400,12800,15600,18600,21670,30970,34000,37100,41500,44800,48100,55101,58570,148700,159000,169400,182700,194000,205600,221400,231490,992718,1039668],"cpk-hex":"50d050","image":{"title":"Nickel Chunk","url":"https://upload.wikimedia.org/wikipedia/commons/5/57/Nickel_chunk.jpg","attribution":"Materialscientist at English Wikipedia, CC BY-SA 3.0 <https://creativecommons.org/licenses/by-sa/3.0>, via Wikimedia Commons"},"block":"d"},{"name":"Copper","appearance":"red-orange metallic luster","atomic_mass":63.5463,"boil":2835,"category":"transition metal","density":8.96,"discovered_by":"Middle East","melt":1357.77,"molar_heat":24.44,"named_by":null,"number":29,"period":4,"group":11,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Copper","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_029_copper/element_029_copper_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_029_copper/element_029_copper.glb","spectral_img":null,"summary":"Copper is a chemical element with symbol Cu (from Latin:cuprum) and atomic number 29. It is a soft, malleable and ductile metal with very high thermal and electrical conductivity. A freshly exposed surface of pure copper has a reddish-orange color.","symbol":"Cu","xpos":11,"ypos":4,"wxpos":25,"wypos":4,"shells":[2,8,18,1],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s1 3d10","electron_configuration_semantic":"[Ar] 3d10 4s1","electron_affinity":119.235,"electronegativity_pauling":1.9,"ionization_energies":[745.5,1957.9,3555,5536,7700,9900,13400,16000,19200,22400,25600,35600,38700,42000,46700,50200,53700,61100,64702,163700,174100,184900,198800,210500,222700,239100,249660,1067358,1116105],"cpk-hex":"c88033","image":{"title":"Macro of Native Copper about 1 ½ inches (4 cm) in size","url":"https://upload.wikimedia.org/wikipedia/commons/f/f0/NatCopper.jpg","attribution":"Native_Copper_Macro_Digon3.jpg: \'Jonathan Zander (Digon3)\' derivative work: Materialscientist, CC BY-SA 2.5 <https://creativecommons.org/licenses/by-sa/2.5>, via Wikimedia Commons"},"block":"d"},{"name":"Zinc","appearance":"silver-gray","atomic_mass":65.382,"boil":1180,"category":"transition metal","density":7.14,"discovered_by":"India","melt":692.68,"molar_heat":25.47,"named_by":null,"number":30,"period":4,"group":12,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Zinc","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_030_zinc/element_030_zinc_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_030_zinc/element_030_zinc.glb","spectral_img":null,"summary":"Zinc, in commerce also spelter, is a chemical element with symbol Zn and atomic number 30. It is the first element of group 12 of the periodic table. In some respects zinc is chemically similar to magnesium:its ion is of similar size and its only common oxidation state is +2.","symbol":"Zn","xpos":12,"ypos":4,"wxpos":26,"wypos":4,"shells":[2,8,18,2],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10","electron_configuration_semantic":"[Ar] 3d10 4s2","electron_affinity":-58,"electronegativity_pauling":1.65,"ionization_energies":[906.4,1733.3,3833,5731,7970,10400,12900,16800,19600,23000,26400,29990,40490,43800,47300,52300,55900,59700,67300,71200,179100],"cpk-hex":"7d80b0","image":{"title":"30 grams Zinc, front and back side. Original size in cm: 3","url":"https://upload.wikimedia.org/wikipedia/commons/b/ba/Zinc_%2830_Zn%29.jpg","attribution":"Hi-Res Images ofChemical Elements, CC BY 3.0 <https://creativecommons.org/licenses/by/3.0>, via Wikimedia Commons, source: https://images-of-elements.com/zinc.php"},"block":"d"},{"name":"Gallium","appearance":"silver-white","atomic_mass":69.7231,"boil":2673,"category":"post-transition metal","density":5.91,"discovered_by":"Lecoq de Boisbaudran","melt":302.9146,"molar_heat":25.86,"named_by":null,"number":31,"period":4,"group":13,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Gallium","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_031_gallium/element_031_gallium_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_031_gallium/element_031_gallium.glb","spectral_img":null,"summary":"Gallium is a chemical element with symbol Ga and atomic number 31. Elemental gallium does not occur in free form in nature, but as the gallium(III) compounds that are in trace amounts in zinc ores and in bauxite. Gallium is a soft, silvery metal, and elemental gallium is a brittle solid at low temperatures, and melts at 29.76 °C (85.57 °F) (slightly above room temperature).","symbol":"Ga","xpos":13,"ypos":4,"wxpos":27,"wypos":4,"shells":[2,8,18,3],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p1","electron_configuration_semantic":"[Ar] 3d10 4s2 4p1","electron_affinity":41,"electronegativity_pauling":1.81,"ionization_energies":[578.8,1979.3,2963,6180],"cpk-hex":"c28f8f","image":{"title":"Solid gallium, fresh and after some time (2 months) at room temperature","url":"https://upload.wikimedia.org/wikipedia/commons/b/b1/Solid_gallium_%28Ga%29.jpg","attribution":"Hi-Res Images ofChemical Elements, CC BY 3.0 <https://creativecommons.org/licenses/by/3.0>, via Wikimedia Commons, source: https://images-of-elements.com/gallium.php"},"block":"p"},{"name":"Germanium","appearance":"grayish-white","atomic_mass":72.6308,"boil":3106,"category":"metalloid","density":5.323,"discovered_by":"Clemens Winkler","melt":1211.4,"molar_heat":23.222,"named_by":null,"number":32,"period":4,"group":14,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Germanium","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_032_germanium/element_032_germanium_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_032_germanium/element_032_germanium.glb","spectral_img":null,"summary":"Germanium is a chemical element with symbol Ge and atomic number 32. It is a lustrous, hard, grayish-white metalloid in the carbon group, chemically similar to its group neighbors tin and silicon. Purified germanium is a semiconductor, with an appearance most similar to elemental silicon.","symbol":"Ge","xpos":14,"ypos":4,"wxpos":28,"wypos":4,"shells":[2,8,18,4],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p2","electron_configuration_semantic":"[Ar] 3d10 4s2 4p2","electron_affinity":118.9352,"electronegativity_pauling":2.01,"ionization_energies":[762,1537.5,3302.1,4411,9020],"cpk-hex":"668f8f","image":{"title":"12 Grams Polycrystalline Germanium, 2*3 cm","url":"https://upload.wikimedia.org/wikipedia/commons/0/08/Polycrystalline-germanium.jpg","attribution":"Jurii, CC BY 3.0 <https://creativecommons.org/licenses/by/3.0>, via Wikimedia Commons, source: https://images-of-elements.com/germanium.php"},"block":"p"},{"name":"Arsenic","appearance":"metallic grey","atomic_mass":74.9215956,"boil":null,"category":"metalloid","density":5.727,"discovered_by":"Bronze Age","melt":null,"molar_heat":24.64,"named_by":null,"number":33,"period":4,"group":15,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Arsenic","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_033_arsenic/element_033_arsenic_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_033_arsenic/element_033_arsenic.glb","spectral_img":null,"summary":"Arsenic is a chemical element with symbol As and atomic number 33. Arsenic occurs in many minerals, usually in conjunction with sulfur and metals, and also as a pure elemental crystal. Arsenic is a metalloid.","symbol":"As","xpos":15,"ypos":4,"wxpos":29,"wypos":4,"shells":[2,8,18,5],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p3","electron_configuration_semantic":"[Ar] 3d10 4s2 4p3","electron_affinity":77.65,"electronegativity_pauling":2.18,"ionization_energies":[947,1798,2735,4837,6043,12310],"cpk-hex":"bd80e3","image":{"title":"Ultrapure Metallic Arsenic under Argon, 1 - 2 grams. Original size of each piece in cm: 0.5 x 1","url":"https://upload.wikimedia.org/wikipedia/commons/3/3b/Arsenic_%2833_As%29.jpg","attribution":"Hi-Res Images ofChemical Elements, CC BY 3.0 <https://creativecommons.org/licenses/by/3.0>, via Wikimedia Commons, source: https://images-of-elements.com/arsenic.php"},"block":"p"},{"name":"Selenium","appearance":"black, red, and gray (not pictured) allotropes","atomic_mass":78.9718,"boil":958,"category":"polyatomic nonmetal","density":4.81,"discovered_by":"Jöns Jakob Berzelius","melt":494,"molar_heat":25.363,"named_by":null,"number":34,"period":4,"group":16,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Selenium","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_034_selenium/element_034_selenium_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_034_selenium/element_034_selenium.glb","spectral_img":null,"summary":"Selenium is a chemical element with symbol Se and atomic number 34. It is a nonmetal with properties that are intermediate between those of its periodic table column-adjacent chalcogen elements sulfur and tellurium. It rarely occurs in its elemental state in nature, or as pure ore compounds.","symbol":"Se","xpos":16,"ypos":4,"wxpos":30,"wypos":4,"shells":[2,8,18,6],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p4","electron_configuration_semantic":"[Ar] 3d10 4s2 4p4","electron_affinity":194.9587,"electronegativity_pauling":2.55,"ionization_energies":[941,2045,2973.7,4144,6590,7880,14990],"cpk-hex":"ffa100","image":{"title":"Ultrapure Black, Amorphous Selenium, 3 - 4 grams. Original size in cm: 2","url":"https://upload.wikimedia.org/wikipedia/commons/7/7f/Selenium.jpg","attribution":"Hi-Res Images ofChemical Elements, CC BY 3.0 <https://creativecommons.org/licenses/by/3.0>, via Wikimedia Commons, source: https://images-of-elements.com/selenium.php"},"block":"p"},{"name":"Bromine","appearance":null,"atomic_mass":79.904,"boil":332,"category":"diatomic nonmetal","density":3.1028,"discovered_by":"Antoine Jérôme Balard","melt":265.8,"molar_heat":null,"named_by":null,"number":35,"period":4,"group":17,"phase":"Liquid","source":"https://en.wikipedia.org/wiki/Bromine","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_035_bromine/element_035_bromine_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_035_bromine/element_035_bromine.glb","spectral_img":null,"summary":"Bromine (from Ancient Greek:βρῶμος, brómos, meaning \\"stench\\") is a chemical element with symbol Br, and atomic number 35. It is a halogen. The element was isolated independently by two chemists, Carl Jacob Löwig and Antoine Jerome Balard, in 1825–1826.","symbol":"Br","xpos":17,"ypos":4,"wxpos":31,"wypos":4,"shells":[2,8,18,7],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p5","electron_configuration_semantic":"[Ar] 3d10 4s2 4p5","electron_affinity":324.537,"electronegativity_pauling":2.96,"ionization_energies":[1139.9,2103,3470,4560,5760,8550,9940,18600],"cpk-hex":"a62929","image":{"title":"99.5 % pure liquid Bromine in a 4 x 1 cm big glass ampoule, cast in acrylic","url":"https://upload.wikimedia.org/wikipedia/commons/8/87/Bromine-ampoule.jpg","attribution":"Jurii, CC BY 3.0 <https://creativecommons.org/licenses/by/3.0>, via Wikimedia Commons, source: https://images-of-elements.com/bromine.php"},"block":"p"},{"name":"Krypton","appearance":"colorless gas, exhibiting a whitish glow in a high electric field","atomic_mass":83.7982,"boil":119.93,"category":"noble gas","density":3.749,"discovered_by":"William Ramsay","melt":115.78,"molar_heat":null,"named_by":null,"number":36,"period":4,"group":18,"phase":"Gas","source":"https://en.wikipedia.org/wiki/Krypton","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_036_krypton/element_036_krypton_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_036_krypton/element_036_krypton.glb","spectral_img":"https://en.wikipedia.org/wiki/File:Krypton_Spectrum.jpg","summary":"Krypton (from Greek:κρυπτός kryptos \\"the hidden one\\") is a chemical element with symbol Kr and atomic number 36. It is a member of group 18 (noble gases) elements. A colorless, odorless, tasteless noble gas, krypton occurs in trace amounts in the atmosphere, is isolated by fractionally distilling liquefied air, and is often used with other rare gases in fluorescent lamps.","symbol":"Kr","xpos":18,"ypos":4,"wxpos":32,"wypos":4,"shells":[2,8,18,8],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p6","electron_configuration_semantic":"[Ar] 3d10 4s2 4p6","electron_affinity":-96,"electronegativity_pauling":3,"ionization_energies":[1350.8,2350.4,3565,5070,6240,7570,10710,12138,22274,25880,29700,33800,37700,43100,47500,52200,57100,61800,75800,80400,85300,90400,96300,101400,111100,116290,282500,296200,311400,326200],"cpk-hex":"5cb8d1","image":{"title":"Vial of Glowing Ultrapure Krypton. Original size in cm: 1 x 5.","url":"https://upload.wikimedia.org/wikipedia/commons/9/9c/Krypton-glow.jpg","attribution":"Jurii, CC BY 3.0 <https://creativecommons.org/licenses/by/3.0>, via Wikimedia Commons, source: https://images-of-elements.com/krypton.php"},"block":"p"},{"name":"Rubidium","appearance":"grey white","atomic_mass":85.46783,"boil":961,"category":"alkali metal","density":1.532,"discovered_by":"Robert Bunsen","melt":312.45,"molar_heat":31.06,"named_by":null,"number":37,"period":5,"group":1,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Rubidium","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_037_rubidium/element_037_rubidium_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_037_rubidium/element_037_rubidium.glb","spectral_img":null,"summary":"Rubidium is a chemical element with symbol Rb and atomic number 37. Rubidium is a soft, silvery-white metallic element of the alkali metal group, with an atomic mass of 85.4678. Elemental rubidium is highly reactive, with properties similar to those of other alkali metals, such as very rapid oxidation in air.","symbol":"Rb","xpos":1,"ypos":5,"wxpos":1,"wypos":5,"shells":[2,8,18,8,1],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p6 5s1","electron_configuration_semantic":"[Kr] 5s1","electron_affinity":46.884,"electronegativity_pauling":0.82,"ionization_energies":[403,2633,3860,5080,6850,8140,9570,13120,14500,26740],"cpk-hex":"702eb0","image":{"title":"Rubidium Metal Sample","url":"https://upload.wikimedia.org/wikipedia/commons/c/c9/Rb5.JPG","attribution":"Dnn87, CC BY 3.0 <https://creativecommons.org/licenses/by/3.0>, via Wikimedia Commons"},"block":"s"},{"name":"Strontium","appearance":null,"atomic_mass":87.621,"boil":1650,"category":"alkaline earth metal","density":2.64,"discovered_by":"William Cruickshank (chemist)","melt":1050,"molar_heat":26.4,"named_by":null,"number":38,"period":5,"group":2,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Strontium","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_038_strontium/element_038_strontium_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_038_strontium/element_038_strontium.glb","spectral_img":null,"summary":"Strontium is a chemical element with symbol Sr and atomic number 38. An alkaline earth metal, strontium is a soft silver-white or yellowish metallic element that is highly reactive chemically. The metal turns yellow when it is exposed to air.","symbol":"Sr","xpos":2,"ypos":5,"wxpos":2,"wypos":5,"shells":[2,8,18,8,2],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p6 5s2","electron_configuration_semantic":"[Kr] 5s2","electron_affinity":5.023,"electronegativity_pauling":0.95,"ionization_energies":[549.5,1064.2,4138,5500,6910,8760,10230,11800,15600,17100,31270],"cpk-hex":"00ff00","image":{"title":"Strontium Pieces under Paraffin Oil.","url":"https://upload.wikimedia.org/wikipedia/commons/8/84/Strontium-1.jpg","attribution":"Jurii, CC BY 3.0 <https://creativecommons.org/licenses/by/3.0>, via Wikimedia Commons, source: https://images-of-elements.com/strontium.php"},"block":"s"},{"name":"Yttrium","appearance":"silvery white","atomic_mass":88.905842,"boil":3203,"category":"transition metal","density":4.472,"discovered_by":"Johan Gadolin","melt":1799,"molar_heat":26.53,"named_by":null,"number":39,"period":5,"group":3,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Yttrium","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_039_yttrium/element_039_yttrium_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_039_yttrium/element_039_yttrium.glb","spectral_img":null,"summary":"Yttrium is a chemical element with symbol Y and atomic number 39. It is a silvery-metallic transition metal chemically similar to the lanthanides and it has often been classified as a \\"rare earth element\\". Yttrium is almost always found combined with the lanthanides in rare earth minerals and is never found in nature as a free element.","symbol":"Y","xpos":3,"ypos":5,"wxpos":17,"wypos":5,"shells":[2,8,18,9,2],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p6 5s2 4d1","electron_configuration_semantic":"[Kr] 4d1 5s2","electron_affinity":29.6,"electronegativity_pauling":1.22,"ionization_energies":[600,1180,1980,5847,7430,8970,11190,12450,14110,18400,19900,36090],"cpk-hex":"94ffff","image":{"title":"6,21g Yttrium, Reinheit mindestens 99%.","url":"https://upload.wikimedia.org/wikipedia/commons/9/90/Piece_of_Yttrium.jpg","attribution":"Jan Anskeit, CC BY-SA 4.0 <https://creativecommons.org/licenses/by-sa/4.0>, via Wikimedia Commons"},"block":"d"},{"name":"Zirconium","appearance":"silvery white","atomic_mass":91.2242,"boil":4650,"category":"transition metal","density":6.52,"discovered_by":"Martin Heinrich Klaproth","melt":2128,"molar_heat":25.36,"named_by":null,"number":40,"period":5,"group":4,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Zirconium","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_040_zirconium/element_040_zirconium_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_040_zirconium/element_040_zirconium.glb","spectral_img":null,"summary":"Zirconium is a chemical element with symbol Zr and atomic number 40. The name of zirconium is taken from the name of the mineral zircon, the most important source of zirconium. The word zircon comes from the Persian word zargun زرگون, meaning \\"gold-colored\\".","symbol":"Zr","xpos":4,"ypos":5,"wxpos":18,"wypos":5,"shells":[2,8,18,10,2],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p6 5s2 4d2","electron_configuration_semantic":"[Kr] 4d2 5s2","electron_affinity":41.806,"electronegativity_pauling":1.33,"ionization_energies":[640.1,1270,2218,3313,7752,9500],"cpk-hex":"94e0e0","image":{"title":"Two pieces of Zirconium, 1 cm each.","url":"https://upload.wikimedia.org/wikipedia/commons/1/1d/Zirconium-pieces.jpg","attribution":"Jurii, CC BY 3.0 <https://creativecommons.org/licenses/by/3.0>, via Wikimedia Commons, source: https://images-of-elements.com/zirconium.php"},"block":"d"},{"name":"Niobium","appearance":"gray metallic, bluish when oxidized","atomic_mass":92.906372,"boil":5017,"category":"transition metal","density":8.57,"discovered_by":"Charles Hatchett","melt":2750,"molar_heat":24.6,"named_by":null,"number":41,"period":5,"group":5,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Niobium","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_041_niobium/element_041_niobium_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_041_niobium/element_041_niobium.glb","spectral_img":null,"summary":"Niobium, formerly columbium, is a chemical element with symbol Nb (formerly Cb) and atomic number 41. It is a soft, grey, ductile transition metal, which is often found in the pyrochlore mineral, the main commercial source for niobium, and columbite. The name comes from Greek mythology:Niobe, daughter of Tantalus since it is so similar to tantalum.","symbol":"Nb","xpos":5,"ypos":5,"wxpos":19,"wypos":5,"shells":[2,8,18,12,1],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p6 5s1 4d4","electron_configuration_semantic":"[Kr] 4d4 5s1","electron_affinity":88.516,"electronegativity_pauling":1.6,"ionization_energies":[652.1,1380,2416,3700,4877,9847,12100],"cpk-hex":"73c2c9","image":{"title":"Niobium strips","url":"https://upload.wikimedia.org/wikipedia/commons/c/c2/Niobium_strips.JPG","attribution":"Mauro Cateb, CC BY-SA 3.0 <https://creativecommons.org/licenses/by-sa/3.0>, via Wikimedia Commons"},"block":"d"},{"name":"Molybdenum","appearance":"gray metallic","atomic_mass":95.951,"boil":4912,"category":"transition metal","density":10.28,"discovered_by":"Carl Wilhelm Scheele","melt":2896,"molar_heat":24.06,"named_by":null,"number":42,"period":5,"group":6,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Molybdenum","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_042_molybdenum/element_042_molybdenum_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_042_molybdenum/element_042_molybdenum.glb","spectral_img":null,"summary":"Molybdenum is a chemical element with symbol Mo and atomic number 42. The name is from Neo-Latin molybdaenum, from Ancient Greek Μόλυβδος molybdos, meaning lead, since its ores were confused with lead ores. Molybdenum minerals have been known throughout history, but the element was discovered (in the sense of differentiating it as a new entity from the mineral salts of other metals) in 1778 by Carl Wilhelm Scheele.","symbol":"Mo","xpos":6,"ypos":5,"wxpos":20,"wypos":5,"shells":[2,8,18,13,1],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p6 5s1 4d5","electron_configuration_semantic":"[Kr] 4d5 5s1","electron_affinity":72.1,"electronegativity_pauling":2.16,"ionization_energies":[684.3,1560,2618,4480,5257,6640.8,12125,13860,15835,17980,20190,22219,26930,29196,52490,55000,61400,67700,74000,80400,87000,93400,98420,104400,121900,127700,133800,139800,148100,154500],"cpk-hex":"54b5b5","image":{"title":"99.9 Pure Molybdenum Crystal, about 2 x 3 cm, with anodisation color","url":"https://upload.wikimedia.org/wikipedia/commons/f/f0/Molybdenum.jpg","attribution":"Jurii, CC BY 3.0 <https://creativecommons.org/licenses/by/3.0>, via Wikimedia Commons, source: https://images-of-elements.com/molybdenum.php"},"block":"d"},{"name":"Technetium","appearance":"shiny gray metal","atomic_mass":98,"boil":4538,"category":"transition metal","density":11,"discovered_by":"Emilio Segrè","melt":2430,"molar_heat":24.27,"named_by":null,"number":43,"period":5,"group":7,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Technetium","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_043_technetium/element_043_technetium_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_043_technetium/element_043_technetium.glb","spectral_img":null,"summary":"Technetium (/tɛkˈniːʃiəm/) is a chemical element with symbol Tc and atomic number 43. It is the element with the lowest atomic number in the periodic table that has no stable isotopes:every form of it is radioactive. Nearly all technetium is produced synthetically, and only minute amounts are found in nature.","symbol":"Tc","xpos":7,"ypos":5,"wxpos":21,"wypos":5,"shells":[2,8,18,13,2],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p6 5s2 4d5","electron_configuration_semantic":"[Kr] 4d5 5s2","electron_affinity":53,"electronegativity_pauling":1.9,"ionization_energies":[702,1470,2850],"cpk-hex":"3b9e9e","image":{"title":"Technetium Sample inside a sealed glass ampoule, filled with argon gas. 6x1 mm goldfoil covered with 99Tc powder (electroplated).","url":"https://upload.wikimedia.org/wikipedia/commons/a/ab/Technetium-sample-cropped.jpg","attribution":"GFDL, CC BY-SA 4.0 <https://creativecommons.org/licenses/by-sa/4.0>, via Wikimedia Commons"},"block":"d"},{"name":"Ruthenium","appearance":"silvery white metallic","atomic_mass":101.072,"boil":4423,"category":"transition metal","density":12.45,"discovered_by":"Karl Ernst Claus","melt":2607,"molar_heat":24.06,"named_by":null,"number":44,"period":5,"group":8,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Ruthenium","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_044_ruthenium/element_044_ruthenium_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_044_ruthenium/element_044_ruthenium.glb","spectral_img":null,"summary":"Ruthenium is a chemical element with symbol Ru and atomic number 44. It is a rare transition metal belonging to the platinum group of the periodic table. Like the other metals of the platinum group, ruthenium is inert to most other chemicals.","symbol":"Ru","xpos":8,"ypos":5,"wxpos":22,"wypos":5,"shells":[2,8,18,15,1],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p6 5s1 4d7","electron_configuration_semantic":"[Kr] 4d7 5s1","electron_affinity":100.96,"electronegativity_pauling":2.2,"ionization_energies":[710.2,1620,2747],"cpk-hex":"248f8f","image":{"title":"Ruthenium Crystal, 0.6 grams, 0.6 x 1.3 cm size","url":"https://upload.wikimedia.org/wikipedia/commons/a/a8/Ruthenium_crystal.jpg","attribution":"Hi-Res Images ofChemical Elements, CC BY 3.0 <https://creativecommons.org/licenses/by/3.0>, via Wikimedia Commons, source: https://images-of-elements.com/ruthenium.php"},"block":"d"},{"name":"Rhodium","appearance":"silvery white metallic","atomic_mass":102.905502,"boil":3968,"category":"transition metal","density":12.41,"discovered_by":"William Hyde Wollaston","melt":2237,"molar_heat":24.98,"named_by":null,"number":45,"period":5,"group":9,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Rhodium","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_045_rhodium/element_045_rhodium_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_045_rhodium/element_045_rhodium.glb","spectral_img":null,"summary":"Rhodium is a chemical element with symbol Rh and atomic number 45. It is a rare, silvery-white, hard, and chemically inert transition metal. It is a member of the platinum group.","symbol":"Rh","xpos":9,"ypos":5,"wxpos":23,"wypos":5,"shells":[2,8,18,16,1],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p6 5s1 4d8","electron_configuration_semantic":"[Kr] 4d8 5s1","electron_affinity":110.27,"electronegativity_pauling":2.28,"ionization_energies":[719.7,1740,2997],"cpk-hex":"0a7d8c","image":{"title":"Pure Rhodium Bead, 1 gram. Original size in cm: 0.5","url":"https://upload.wikimedia.org/wikipedia/commons/5/54/Rhodium_%28Rh%29.jpg","attribution":"Hi-Res Images ofChemical Elements, CC BY 3.0 <https://creativecommons.org/licenses/by/3.0>, via Wikimedia Commons, source: https://images-of-elements.com/rhodium.php"},"block":"d"},{"name":"Palladium","appearance":"silvery white","atomic_mass":106.421,"boil":3236,"category":"transition metal","density":12.023,"discovered_by":"William Hyde Wollaston","melt":1828.05,"molar_heat":25.98,"named_by":null,"number":46,"period":5,"group":10,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Palladium","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_046_palladium/element_046_palladium_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_046_palladium/element_046_palladium.glb","spectral_img":null,"summary":"Palladium is a chemical element with symbol Pd and atomic number 46. It is a rare and lustrous silvery-white metal discovered in 1803 by William Hyde Wollaston. He named it after the asteroid Pallas, which was itself named after the epithet of the Greek goddess Athena, acquired by her when she slew Pallas.","symbol":"Pd","xpos":10,"ypos":5,"wxpos":24,"wypos":5,"shells":[2,8,18,18],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p6 4d10","electron_configuration_semantic":"[Kr] 4d10","electron_affinity":54.24,"electronegativity_pauling":2.2,"ionization_energies":[804.4,1870,3177],"cpk-hex":"006985","image":{"title":"Palladium Crystal, about 1 gram. Original size in cm: 0.5 x 1","url":"https://upload.wikimedia.org/wikipedia/commons/d/d7/Palladium_%2846_Pd%29.jpg","attribution":"Hi-Res Images ofChemical Elements, CC BY 3.0 <https://creativecommons.org/licenses/by/3.0>, via Wikimedia Commons, source: https://images-of-elements.com/palladium.php"},"block":"d"},{"name":"Silver","appearance":"lustrous white metal","atomic_mass":107.86822,"boil":2435,"category":"transition metal","density":10.49,"discovered_by":"unknown, before 5000 BC","melt":1234.93,"molar_heat":25.35,"named_by":null,"number":47,"period":5,"group":11,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Silver","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_047_silver/element_047_silver_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_047_silver/element_047_silver.glb","spectral_img":null,"summary":"Silver is a chemical element with symbol Ag (Greek:άργυρος árguros, Latin:argentum, both from the Indo-European root *h₂erǵ- for \\"grey\\" or \\"shining\\") and atomic number 47. A soft, white, lustrous transition metal, it possesses the highest electrical conductivity, thermal conductivity and reflectivity of any metal. The metal occurs naturally in its pure, free form (native silver), as an alloy with gold and other metals, and in minerals such as argentite and chlorargyrite.","symbol":"Ag","xpos":11,"ypos":5,"wxpos":25,"wypos":5,"shells":[2,8,18,18,1],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p6 5s1 4d10","electron_configuration_semantic":"[Kr] 4d10 5s1","electron_affinity":125.862,"electronegativity_pauling":1.93,"ionization_energies":[731,2070,3361],"cpk-hex":"c0c0c0","image":{"title":"Natural silver nugget, 1 cm long.","url":"https://upload.wikimedia.org/wikipedia/commons/e/e4/Silver-nugget.jpg","attribution":"Jurii, CC BY 3.0 <https://creativecommons.org/licenses/by/3.0>, via Wikimedia Commons, source: http://images-of-elements.com/silver.php"},"block":"d"},{"name":"Cadmium","appearance":"silvery bluish-gray metallic","atomic_mass":112.4144,"boil":1040,"category":"transition metal","density":8.65,"discovered_by":"Karl Samuel Leberecht Hermann","melt":594.22,"molar_heat":26.02,"named_by":"Isotopes of cadmium","number":48,"period":5,"group":12,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Cadmium","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_048_cadmium/element_048_cadmium_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_048_cadmium/element_048_cadmium.glb","spectral_img":null,"summary":"Cadmium is a chemical element with symbol Cd and atomic number 48. This soft, bluish-white metal is chemically similar to the two other stable metals in group 12, zinc and mercury. Like zinc, it prefers oxidation state +2 in most of its compounds and like mercury it shows a low melting point compared to transition metals.","symbol":"Cd","xpos":12,"ypos":5,"wxpos":26,"wypos":5,"shells":[2,8,18,18,2],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p6 5s2 4d10","electron_configuration_semantic":"[Kr] 4d10 5s2","electron_affinity":-68,"electronegativity_pauling":1.69,"ionization_energies":[867.8,1631.4,3616],"cpk-hex":"ffd98f","image":{"title":"48 Cd Cadmium","url":"https://images-of-elements.com/cadmium-4.jpg","attribution":"Chemical Elments A Virtual Museum under a Creative Commons Attribution 3.0 Unported License, source: https://images-of-elements.com/cadmium.php"},"block":"d"},{"name":"Indium","appearance":"silvery lustrous gray","atomic_mass":114.8181,"boil":2345,"category":"post-transition metal","density":7.31,"discovered_by":"Ferdinand Reich","melt":429.7485,"molar_heat":26.74,"named_by":null,"number":49,"period":5,"group":13,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Indium","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_049_indium/element_049_indium_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_049_indium/element_049_indium.glb","spectral_img":null,"summary":"Indium is a chemical element with symbol In and atomic number 49. It is a post-transition metallic element that is rare in Earth\'s crust. The metal is very soft, malleable and easily fusible, with a melting point higher than sodium, but lower than lithium or tin.","symbol":"In","xpos":13,"ypos":5,"wxpos":27,"wypos":5,"shells":[2,8,18,18,3],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p6 5s2 4d10 5p1","electron_configuration_semantic":"[Kr] 4d10 5s2 5p1","electron_affinity":37.043,"electronegativity_pauling":1.78,"ionization_energies":[558.3,1820.7,2704,5210],"cpk-hex":"a67573","image":{"title":"1.5 x 1.5 cm liquid indium","url":"https://images-of-elements.com/indium-2.jpg","attribution":"Jurii, CC BY 3.0 <https://creativecommons.org/licenses/by/3.0>, via Wikimedia Commons, source: http://images-of-elements.com/indium.php"},"block":"p"},{"name":"Tin","appearance":"silvery-white (beta, β) or gray (alpha, α)","atomic_mass":118.7107,"boil":2875,"category":"post-transition metal","density":7.365,"discovered_by":"unknown, before 3500 BC","melt":505.08,"molar_heat":27.112,"named_by":null,"number":50,"period":5,"group":14,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Tin","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_050_tin/element_050_tin_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_050_tin/element_050_tin.glb","spectral_img":null,"summary":"Tin is a chemical element with the symbol Sn (for Latin:stannum) and atomic number 50. It is a main group metal in group 14 of the periodic table. Tin shows a chemical similarity to both neighboring group-14 elements, germanium and lead, and has two possible oxidation states, +2 and the slightly more stable +4.","symbol":"Sn","xpos":14,"ypos":5,"wxpos":28,"wypos":5,"shells":[2,8,18,18,4],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p6 5s2 4d10 5p2","electron_configuration_semantic":"[Kr] 4d10 5s2 5p2","electron_affinity":107.2984,"electronegativity_pauling":1.96,"ionization_energies":[708.6,1411.8,2943,3930.3,7456],"cpk-hex":"668080","image":{"title":"Tin blob","url":"https://upload.wikimedia.org/wikipedia/commons/6/6a/Tin-2.jpg","attribution":"Jurii, CC BY 3.0 <https://creativecommons.org/licenses/by/3.0>, via Wikimedia Commons, source: http://images-of-elements.com/tin.php"},"block":"p"},{"name":"Antimony","appearance":"silvery lustrous gray","atomic_mass":121.7601,"boil":1908,"category":"metalloid","density":6.697,"discovered_by":"unknown, before 3000 BC","melt":903.78,"molar_heat":25.23,"named_by":null,"number":51,"period":5,"group":15,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Antimony","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_051_antimony/element_051_antimony_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_051_antimony/element_051_antimony.glb","spectral_img":null,"summary":"Antimony is a chemical element with symbol Sb (from Latin:stibium) and atomic number 51. A lustrous gray metalloid, it is found in nature mainly as the sulfide mineral stibnite (Sb2S3). Antimony compounds have been known since ancient times and were used for cosmetics; metallic antimony was also known, but it was erroneously identified as lead upon its discovery.","symbol":"Sb","xpos":15,"ypos":5,"wxpos":29,"wypos":5,"shells":[2,8,18,18,5],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p6 5s2 4d10 5p3","electron_configuration_semantic":"[Kr] 4d10 5s2 5p3","electron_affinity":101.059,"electronegativity_pauling":2.05,"ionization_energies":[834,1594.9,2440,4260,5400,10400],"cpk-hex":"9e63b5","image":{"title":"Antimony crystal, 2 grams, 1 cm","url":"https://upload.wikimedia.org/wikipedia/commons/5/5c/Antimony-4.jpg","attribution":"Unknown authorUnknown author, CC BY 3.0 <https://creativecommons.org/licenses/by/3.0>, via Wikimedia Commons, source: https://images-of-elements.com/antimony.php"},"block":"p"},{"name":"Tellurium","appearance":null,"atomic_mass":127.603,"boil":1261,"category":"metalloid","density":6.24,"discovered_by":"Franz-Joseph Müller von Reichenstein","melt":722.66,"molar_heat":25.73,"named_by":null,"number":52,"period":5,"group":16,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Tellurium","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_052_tellurium/element_052_tellurium_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_052_tellurium/element_052_tellurium.glb","spectral_img":null,"summary":"Tellurium is a chemical element with symbol Te and atomic number 52. It is a brittle, mildly toxic, rare, silver-white metalloid. Tellurium is chemically related to selenium and sulfur.","symbol":"Te","xpos":16,"ypos":5,"wxpos":30,"wypos":5,"shells":[2,8,18,18,6],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p6 5s2 4d10 5p4","electron_configuration_semantic":"[Kr] 4d10 5s2 5p4","electron_affinity":190.161,"electronegativity_pauling":2.1,"ionization_energies":[869.3,1790,2698,3610,5668,6820,13200],"cpk-hex":"d47a00","image":{"title":"Metallic tellurium, diameter 3.5 cm","url":"https://upload.wikimedia.org/wikipedia/commons/c/c1/Tellurium2.jpg","attribution":"Unknown authorUnknown author, CC BY 3.0 <https://creativecommons.org/licenses/by/3.0>, via Wikimedia Commons, source: https://images-of-elements.com/tellurium.php"},"block":"p"},{"name":"Iodine","appearance":"lustrous metallic gray, violet as a gas","atomic_mass":126.904473,"boil":457.4,"category":"diatomic nonmetal","density":4.933,"discovered_by":"Bernard Courtois","melt":386.85,"molar_heat":null,"named_by":null,"number":53,"period":5,"group":17,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Iodine","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_053_iodine/element_053_iodine_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_053_iodine/element_053_iodine.glb","spectral_img":null,"summary":"Iodine is a chemical element with symbol I and atomic number 53. The name is from Greek ἰοειδής ioeidēs, meaning violet or purple, due to the color of iodine vapor. Iodine and its compounds are primarily used in nutrition, and industrially in the production of acetic acid and certain polymers.","symbol":"I","xpos":17,"ypos":5,"wxpos":31,"wypos":5,"shells":[2,8,18,18,7],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p6 5s2 4d10 5p5","electron_configuration_semantic":"[Kr] 4d10 5s2 5p5","electron_affinity":295.1531,"electronegativity_pauling":2.66,"ionization_energies":[1008.4,1845.9,3180],"cpk-hex":"940094","image":{"title":"Iodine Sample","url":"https://upload.wikimedia.org/wikipedia/commons/c/c2/Iodine-sample.jpg","attribution":"Benjah-bmm27, Public domain, via Wikimedia Commons"},"block":"p"},{"name":"Xenon","appearance":"colorless gas, exhibiting a blue glow when placed in a high voltage electric field","atomic_mass":131.2936,"boil":165.051,"category":"noble gas","density":5.894,"discovered_by":"William Ramsay","melt":161.4,"molar_heat":null,"named_by":null,"number":54,"period":5,"group":18,"phase":"Gas","source":"https://en.wikipedia.org/wiki/Xenon","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_054_xenon/element_054_xenon_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_054_xenon/element_054_xenon.glb","spectral_img":"https://en.wikipedia.org/wiki/File:Xenon_Spectrum.jpg","summary":"Xenon is a chemical element with symbol Xe and atomic number 54. It is a colorless, dense, odorless noble gas, that occurs in the Earth\'s atmosphere in trace amounts. Although generally unreactive, xenon can undergo a few chemical reactions such as the formation of xenon hexafluoroplatinate, the first noble gas compound to be synthesized.","symbol":"Xe","xpos":18,"ypos":5,"wxpos":32,"wypos":5,"shells":[2,8,18,18,8],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p6 5s2 4d10 5p6","electron_configuration_semantic":"[Kr] 4d10 5s2 5p6","electron_affinity":-77,"electronegativity_pauling":2.6,"ionization_energies":[1170.4,2046.4,3099.4],"cpk-hex":"429eb0","image":{"title":"Vial of glowing ultrapure xenon. Original size in cm: 1 x 5","url":"https://upload.wikimedia.org/wikipedia/commons/5/5d/Xenon-glow.jpg","attribution":"Jurii, CC BY 3.0 <https://creativecommons.org/licenses/by/3.0>, via Wikimedia Commons, source: https://images-of-elements.com/xenon.php"},"block":"p"},{"name":"Cesium","appearance":"silvery gold","atomic_mass":132.905451966,"boil":944,"category":"alkali metal","density":1.93,"discovered_by":"Robert Bunsen","melt":301.7,"molar_heat":32.21,"named_by":null,"number":55,"period":6,"group":1,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Cesium","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_055_cesium/element_055_cesium_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_055_cesium/element_055_cesium.glb","spectral_img":null,"summary":"Caesium or cesium is a chemical element with symbol Cs and atomic number 55. It is a soft, silvery-gold alkali metal with a melting point of 28 °C (82 °F), which makes it one of only five elemental metals that are liquid at or near room temperature. Caesium is an alkali metal and has physical and chemical properties similar to those of rubidium and potassium.","symbol":"Cs","xpos":1,"ypos":6,"wxpos":1,"wypos":6,"shells":[2,8,18,18,8,1],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p6 5s2 4d10 5p6 6s1","electron_configuration_semantic":"[Xe] 6s1","electron_affinity":45.505,"electronegativity_pauling":0.79,"ionization_energies":[375.7,2234.3,3400],"cpk-hex":"57178f","image":{"title":"Cesium/Caesium metal","url":"https://upload.wikimedia.org/wikipedia/commons/3/3d/Cesium.jpg","attribution":"Dnn87 Contact email: Dnn87yahoo.dk, CC BY-SA 3.0 <https://creativecommons.org/licenses/by-sa/3.0>, via Wikimedia Commons"},"block":"s"},{"name":"Barium","appearance":null,"atomic_mass":137.3277,"boil":2118,"category":"alkaline earth metal","density":3.51,"discovered_by":"Carl Wilhelm Scheele","melt":1000,"molar_heat":28.07,"named_by":null,"number":56,"period":6,"group":2,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Barium","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_056_barium/element_056_barium_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_056_barium/element_056_barium.glb","spectral_img":null,"summary":"Barium is a chemical element with symbol Ba and atomic number 56. It is the fifth element in Group 2, a soft silvery metallic alkaline earth metal. Because of its high chemical reactivity barium is never found in nature as a free element.","symbol":"Ba","xpos":2,"ypos":6,"wxpos":2,"wypos":6,"shells":[2,8,18,18,8,2],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p6 5s2 4d10 5p6 6s2","electron_configuration_semantic":"[Xe] 6s2","electron_affinity":13.954,"electronegativity_pauling":0.89,"ionization_energies":[502.9,965.2,3600],"cpk-hex":"00c900","image":{"title":"1.5 Grams Barium with a Grey Oxide Layer under Argon. Original size in cm: 0.7 x 1","url":"https://upload.wikimedia.org/wikipedia/commons/f/f5/Barium_%2856_Ba%29.jpg","attribution":"Hi-Res Images ofChemical Elements, CC BY 3.0 <https://creativecommons.org/licenses/by/3.0>, via Wikimedia Commons, source: https://images-of-elements.com/barium.php"},"block":"s"},{"name":"Lanthanum","appearance":"silvery white","atomic_mass":138.905477,"boil":3737,"category":"lanthanide","density":6.162,"discovered_by":"Carl Gustaf Mosander","melt":1193,"molar_heat":27.11,"named_by":null,"number":57,"period":6,"group":3,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Lanthanum","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_057_lanthanum/element_057_lanthanum_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_057_lanthanum/element_057_lanthanum.glb","spectral_img":null,"summary":"Lanthanum is a soft, ductile, silvery-white metallic chemical element with symbol La and atomic number 57. It tarnishes rapidly when exposed to air and is soft enough to be cut with a knife. It gave its name to the lanthanide series, a group of 15 similar elements between lanthanum and lutetium in the periodic table:it is also sometimes considered the first element of the 6th-period transition metals.","symbol":"La","xpos":3,"ypos":9,"wxpos":3,"wypos":6,"shells":[2,8,18,18,9,2],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p6 5s2 4d10 5p6 6s2 5d1","electron_configuration_semantic":"[Xe] 5d16s2","electron_affinity":53,"electronegativity_pauling":1.1,"ionization_energies":[538.1,1067,1850.3,4819,5940],"cpk-hex":"70d4ff","image":{"title":"1 cm Big Piece of Pure Lanthanum","url":"https://upload.wikimedia.org/wikipedia/commons/f/f7/Lanthanum.jpg","attribution":"Jurii, CC BY 3.0 <https://creativecommons.org/licenses/by/3.0>, via Wikimedia Commons, source: https://images-of-elements.com/lanthanum.php"},"block":"f"},{"name":"Cerium","appearance":"silvery white","atomic_mass":140.1161,"boil":3716,"category":"lanthanide","density":6.77,"discovered_by":"Martin Heinrich Klaproth","melt":1068,"molar_heat":26.94,"named_by":null,"number":58,"period":6,"group":3,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Cerium","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_058_cerium/element_058_cerium_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_058_cerium/element_058_cerium.glb","spectral_img":null,"summary":"Cerium is a chemical element with symbol Ce and atomic number 58. It is a soft, silvery, ductile metal which easily oxidizes in air. Cerium was named after the dwarf planet Ceres (itself named after the Roman goddess of agriculture).","symbol":"Ce","xpos":4,"ypos":9,"wxpos":4,"wypos":6,"shells":[2,8,18,19,9,2],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p6 5s2 4d10 5p6 6s2 5d1 4f1","electron_configuration_semantic":"[Xe] 4f1 5d1 6s2","electron_affinity":55,"electronegativity_pauling":1.12,"ionization_energies":[534.4,1050,1949,3547,6325,7490],"cpk-hex":"ffffc7","image":{"title":"Ultrapure Cerium under Argon, 1.5 grams. Original size in cm: 1 x 1","url":"https://upload.wikimedia.org/wikipedia/commons/0/0d/Cerium2.jpg","attribution":"Jurii, CC BY 1.0 <https://creativecommons.org/licenses/by/1.0>, via Wikimedia Commons, source: https://images-of-elements.com/cerium.php"},"block":"f"},{"name":"Praseodymium","appearance":"grayish white","atomic_mass":140.907662,"boil":3403,"category":"lanthanide","density":6.77,"discovered_by":"Carl Auer von Welsbach","melt":1208,"molar_heat":27.2,"named_by":null,"number":59,"period":6,"group":3,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Praseodymium","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_059_praseodymium/element_059_praseodymium_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_059_praseodymium/element_059_praseodymium.glb","spectral_img":null,"summary":"Praseodymium is a chemical element with symbol Pr and atomic number 59. Praseodymium is a soft, silvery, malleable and ductile metal in the lanthanide group. It is valued for its magnetic, electrical, chemical, and optical properties.","symbol":"Pr","xpos":5,"ypos":9,"wxpos":5,"wypos":6,"shells":[2,8,18,21,8,2],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p6 5s2 4d10 5p6 6s2 4f3","electron_configuration_semantic":"[Xe] 4f3 6s2","electron_affinity":93,"electronegativity_pauling":1.13,"ionization_energies":[527,1020,2086,3761,5551],"cpk-hex":"d9ffc7","image":{"title":"1.5 Grams Praseodymium under Argon, 0.5 cm big pieces","url":"https://upload.wikimedia.org/wikipedia/commons/c/c7/Praseodymium.jpg","attribution":"Jurii, CC BY 3.0 <https://creativecommons.org/licenses/by/3.0>, via Wikimedia Commons, source: https://images-of-elements.com/praseodymium.php"},"block":"f"},{"name":"Neodymium","appearance":"silvery white","atomic_mass":144.2423,"boil":3347,"category":"lanthanide","density":7.01,"discovered_by":"Carl Auer von Welsbach","melt":1297,"molar_heat":27.45,"named_by":null,"number":60,"period":6,"group":3,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Neodymium","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_060_neodymium/element_060_neodymium_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_060_neodymium/element_060_neodymium.glb","spectral_img":null,"summary":"Neodymium is a chemical element with symbol Nd and atomic number 60. It is a soft silvery metal that tarnishes in air. Neodymium was discovered in 1885 by the Austrian chemist Carl Auer von Welsbach.","symbol":"Nd","xpos":6,"ypos":9,"wxpos":6,"wypos":6,"shells":[2,8,18,22,8,2],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p6 5s2 4d10 5p6 6s2 4f4","electron_configuration_semantic":"[Xe] 4f4 6s2","electron_affinity":184.87,"electronegativity_pauling":1.14,"ionization_energies":[533.1,1040,2130,3900],"cpk-hex":"c7ffc7","image":{"title":"Ultrapure Neodymium under Argon, 5 grams. Original length of the large piece in cm: 1","url":"https://upload.wikimedia.org/wikipedia/commons/c/c9/Neodymium_%2860_Nd%29.jpg","attribution":"Hi-Res Images ofChemical Elements, CC BY 3.0 <https://creativecommons.org/licenses/by/3.0>, via Wikimedia Commons, source: https://images-of-elements.com/neodymium.php"},"block":"f"},{"name":"Promethium","appearance":"metallic","atomic_mass":145,"boil":3273,"category":"lanthanide","density":7.26,"discovered_by":"Chien Shiung Wu","melt":1315,"molar_heat":null,"named_by":"Isotopes of promethium","number":61,"period":6,"group":3,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Promethium","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_061_promethium/element_061_promethium_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_061_promethium/element_061_promethium.glb","spectral_img":null,"summary":"Promethium, originally prometheum, is a chemical element with the symbol Pm and atomic number 61. All of its isotopes are radioactive; it is one of only two such elements that are followed in the periodic table by elements with stable forms, a distinction shared with technetium. Chemically, promethium is a lanthanide, which forms salts when combined with other elements.","symbol":"Pm","xpos":7,"ypos":9,"wxpos":7,"wypos":6,"shells":[2,8,18,23,8,2],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p6 5s2 4d10 5p6 6s2 4f5","electron_configuration_semantic":"[Xe] 4f5 6s2","electron_affinity":12.45,"electronegativity_pauling":1.13,"ionization_energies":[540,1050,2150,3970],"cpk-hex":"a3ffc7","image":{"title":"Photomontage of what promethium metal might look like (it is too radioactive and real images are not available)","url":"https://upload.wikimedia.org/wikipedia/commons/5/5b/Promethium.jpg","attribution":"Unknown authorUnknown author, CC BY 3.0 <https://creativecommons.org/licenses/by/3.0>, via Wikimedia Commons, source: https://images-of-elements.com/promethium.php"},"block":"f"},{"name":"Samarium","appearance":"silvery white","atomic_mass":150.362,"boil":2173,"category":"lanthanide","density":7.52,"discovered_by":"Lecoq de Boisbaudran","melt":1345,"molar_heat":29.54,"named_by":null,"number":62,"period":6,"group":3,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Samarium","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_062_samarium/element_062_samarium_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_062_samarium/element_062_samarium.glb","spectral_img":null,"summary":"Samarium is a chemical element with symbol Sm and atomic number 62. It is a moderately hard silvery metal that readily oxidizes in air. Being a typical member of the lanthanide series, samarium usually assumes the oxidation state +3.","symbol":"Sm","xpos":8,"ypos":9,"wxpos":8,"wypos":6,"shells":[2,8,18,24,8,2],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p6 5s2 4d10 5p6 6s2 4f6","electron_configuration_semantic":"[Xe] 4f6 6s2","electron_affinity":15.63,"electronegativity_pauling":1.17,"ionization_energies":[544.5,1070,2260,3990],"cpk-hex":"8fffc7","image":{"title":"Ultrapure Sublimated Samarium, 2 grams. Original size in cm: 0.8 x 1.5","url":"https://upload.wikimedia.org/wikipedia/commons/8/88/Samarium-2.jpg","attribution":"Unknown authorUnknown author, CC BY 1.0 <https://creativecommons.org/licenses/by/1.0>, via Wikimedia Commons, source: https://images-of-elements.com/samarium.php"},"block":"f"},{"name":"Europium","appearance":null,"atomic_mass":151.9641,"boil":1802,"category":"lanthanide","density":5.264,"discovered_by":"Eugène-Anatole Demarçay","melt":1099,"molar_heat":27.66,"named_by":null,"number":63,"period":6,"group":3,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Europium","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_063_europium/element_063_europium_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_063_europium/element_063_europium.glb","spectral_img":null,"summary":"Europium is a chemical element with symbol Eu and atomic number 63. It was isolated in 1901 and is named after the continent of Europe. It is a moderately hard, silvery metal which readily oxidizes in air and water.","symbol":"Eu","xpos":9,"ypos":9,"wxpos":9,"wypos":6,"shells":[2,8,18,25,8,2],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p6 5s2 4d10 5p6 6s2 4f7","electron_configuration_semantic":"[Xe] 4f7 6s2","electron_affinity":11.2,"electronegativity_pauling":1.2,"ionization_energies":[547.1,1085,2404,4120],"cpk-hex":"61ffc7","image":{"title":"Weakly Oxidized Europium, hence slightly yellowish. 1.5 grams, large piece 0.6 x 1.6 cm.","url":"https://upload.wikimedia.org/wikipedia/commons/6/6a/Europium.jpg","attribution":"Jurii, CC BY 3.0 <https://creativecommons.org/licenses/by/3.0>, via Wikimedia Commons, source: https://images-of-elements.com/europium.php"},"block":"f"},{"name":"Gadolinium","appearance":"silvery white","atomic_mass":157.253,"boil":3273,"category":"lanthanide","density":7.9,"discovered_by":"Jean Charles Galissard de Marignac","melt":1585,"molar_heat":37.03,"named_by":null,"number":64,"period":6,"group":3,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Gadolinium","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_064_gadolinium/element_064_gadolinium_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_064_gadolinium/element_064_gadolinium.glb","spectral_img":null,"summary":"Gadolinium is a chemical element with symbol Gd and atomic number 64. It is a silvery-white, malleable and ductile rare-earth metal. It is found in nature only in combined (salt) form.","symbol":"Gd","xpos":10,"ypos":9,"wxpos":10,"wypos":6,"shells":[2,8,18,25,9,2],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p6 5s2 4d10 5p6 6s2 4f7 5d1","electron_configuration_semantic":"[Xe] 4f7 5d1 6s2","electron_affinity":13.22,"electronegativity_pauling":1.2,"ionization_energies":[593.4,1170,1990,4250],"cpk-hex":"45ffc7","image":{"title":"Pure (99.95%) Amorphous Gadolinium, about 12 grams, 2 × 1.5 × 0.5 cm, cast in acrylic glass","url":"https://upload.wikimedia.org/wikipedia/commons/c/c2/Gadolinium-2.jpg","attribution":"Jurii, CC BY 3.0 <https://creativecommons.org/licenses/by/3.0>, via Wikimedia Commons, source: https://images-of-elements.com/gadolinium.php"},"block":"f"},{"name":"Terbium","appearance":"silvery white","atomic_mass":158.925352,"boil":3396,"category":"lanthanide","density":8.23,"discovered_by":"Carl Gustaf Mosander","melt":1629,"molar_heat":28.91,"named_by":null,"number":65,"period":6,"group":3,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Terbium","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_065_terbium/element_065_terbium_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_065_terbium/element_065_terbium.glb","spectral_img":null,"summary":"Terbium is a chemical element with symbol Tb and atomic number 65. It is a silvery-white rare earth metal that is malleable, ductile and soft enough to be cut with a knife. Terbium is never found in nature as a free element, but it is contained in many minerals, including cerite, gadolinite, monazite, xenotime and euxenite.","symbol":"Tb","xpos":11,"ypos":9,"wxpos":11,"wypos":6,"shells":[2,8,18,27,8,2],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p6 5s2 4d10 5p6 6s2 4f9","electron_configuration_semantic":"[Xe] 4f9 6s2","electron_affinity":112.4,"electronegativity_pauling":1.1,"ionization_energies":[565.8,1110,2114,3839],"cpk-hex":"30ffc7","image":{"title":"Pure Terbium, 3 grams. Original size: 1 cm","url":"https://upload.wikimedia.org/wikipedia/commons/9/9a/Terbium-2.jpg","attribution":"Unknown authorUnknown author, CC BY 1.0 <https://creativecommons.org/licenses/by/1.0>, via Wikimedia Commons, source: https://images-of-elements.com/terbium.php"},"block":"f"},{"name":"Dysprosium","appearance":"silvery white","atomic_mass":162.5001,"boil":2840,"category":"lanthanide","density":8.54,"discovered_by":"Lecoq de Boisbaudran","melt":1680,"molar_heat":27.7,"named_by":null,"number":66,"period":6,"group":3,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Dysprosium","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_066_dysprosium/element_066_dysprosium_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_066_dysprosium/element_066_dysprosium.glb","spectral_img":null,"summary":"Dysprosium is a chemical element with the symbol Dy and atomic number 66. It is a rare earth element with a metallic silver luster. Dysprosium is never found in nature as a free element, though it is found in various minerals, such as xenotime.","symbol":"Dy","xpos":12,"ypos":9,"wxpos":12,"wypos":6,"shells":[2,8,18,28,8,2],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p6 5s2 4d10 5p6 6s2 4f10","electron_configuration_semantic":"[Xe] 4f10 6s2","electron_affinity":33.96,"electronegativity_pauling":1.22,"ionization_energies":[573,1130,2200,3990],"cpk-hex":"1fffc7","image":{"title":"Pure Dysprosium Dendrites","url":"https://upload.wikimedia.org/wikipedia/commons/5/55/Dysprosium-2.jpg","attribution":"Jurii, CC BY 3.0 <https://creativecommons.org/licenses/by/3.0>, via Wikimedia Commons, source: https://images-of-elements.com/dysprosium.php"},"block":"f"},{"name":"Holmium","appearance":"silvery white","atomic_mass":164.930332,"boil":2873,"category":"lanthanide","density":8.79,"discovered_by":"Marc Delafontaine","melt":1734,"molar_heat":27.15,"named_by":null,"number":67,"period":6,"group":3,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Holmium","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_067_holmium/element_067_holmium_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_067_holmium/element_067_holmium.glb","spectral_img":null,"summary":"Holmium is a chemical element with symbol Ho and atomic number 67. Part of the lanthanide series, holmium is a rare earth element. Holmium was discovered by Swedish chemist Per Theodor Cleve.","symbol":"Ho","xpos":13,"ypos":9,"wxpos":13,"wypos":6,"shells":[2,8,18,29,8,2],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p6 5s2 4d10 5p6 6s2 4f11","electron_configuration_semantic":"[Xe] 4f11 6s2","electron_affinity":32.61,"electronegativity_pauling":1.23,"ionization_energies":[581,1140,2204,4100],"cpk-hex":"00ff9c","image":{"title":"Ultrapure Holmium, 17 grams. Original size in cm: 1.5 x 2.5","url":"https://upload.wikimedia.org/wikipedia/commons/0/0a/Holmium2.jpg","attribution":"Unknown authorUnknown author, CC BY 1.0 <https://creativecommons.org/licenses/by/1.0>, via Wikimedia Commons, source: https://images-of-elements.com/holmium.php"},"block":"f"},{"name":"Erbium","appearance":"silvery white","atomic_mass":167.2593,"boil":3141,"category":"lanthanide","density":9.066,"discovered_by":"Carl Gustaf Mosander","melt":1802,"molar_heat":28.12,"named_by":null,"number":68,"period":6,"group":3,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Erbium","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_068_erbium/element_068_erbium_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_068_erbium/element_068_erbium.glb","spectral_img":null,"summary":"Erbium is a chemical element in the lanthanide series, with symbol Er and atomic number 68. A silvery-white solid metal when artificially isolated, natural erbium is always found in chemical combination with other elements on Earth. As such, it is a rare earth element which is associated with several other rare elements in the mineral gadolinite from Ytterby in Sweden, where yttrium, ytterbium, and terbium were discovered.","symbol":"Er","xpos":14,"ypos":9,"wxpos":14,"wypos":6,"shells":[2,8,18,30,8,2],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p6 5s2 4d10 5p6 6s2 4f12","electron_configuration_semantic":"[Xe] 4f12 6s2","electron_affinity":30.1,"electronegativity_pauling":1.24,"ionization_energies":[589.3,1150,2194,4120],"cpk-hex":"00e675","image":{"title":"9.5 Gramms Pure Erbium, 2 x 2 cm","url":"https://upload.wikimedia.org/wikipedia/commons/2/2a/Erbium-2.jpg","attribution":"Jurii, CC BY 3.0 <https://creativecommons.org/licenses/by/3.0>, via Wikimedia Commons, source: https://images-of-elements.com/erbium.php"},"block":"f"},{"name":"Thulium","appearance":"silvery gray","atomic_mass":168.934222,"boil":2223,"category":"lanthanide","density":9.32,"discovered_by":"Per Teodor Cleve","melt":1818,"molar_heat":27.03,"named_by":null,"number":69,"period":6,"group":3,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Thulium","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_069_thulium/element_069_thulium_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_069_thulium/element_069_thulium.glb","spectral_img":null,"summary":"Thulium is a chemical element with symbol Tm and atomic number 69. It is the thirteenth and antepenultimate (third-last) element in the lanthanide series. Like the other lanthanides, the most common oxidation state is +3, seen in its oxide, halides and other compounds.","symbol":"Tm","xpos":15,"ypos":9,"wxpos":15,"wypos":6,"shells":[2,8,18,31,8,2],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p6 5s2 4d10 5p6 6s2 4f13","electron_configuration_semantic":"[Xe] 4f13 6s2","electron_affinity":99,"electronegativity_pauling":1.25,"ionization_energies":[596.7,1160,2285,4120],"cpk-hex":"00d452","image":{"title":"Ultrapure (99.997%) Crystalline Thulium, 22.3 grams, 3 × 3 × 2 cm in size","url":"https://upload.wikimedia.org/wikipedia/commons/6/6b/Thulium-2.jpg","attribution":"Jurii, CC BY 3.0 <https://creativecommons.org/licenses/by/3.0>, via Wikimedia Commons, source: https://images-of-elements.com/thulium.php"},"block":"f"},{"name":"Ytterbium","appearance":null,"atomic_mass":173.0451,"boil":1469,"category":"lanthanide","density":6.9,"discovered_by":"Jean Charles Galissard de Marignac","melt":1097,"molar_heat":26.74,"named_by":null,"number":70,"period":6,"group":3,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Ytterbium","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_070_ytterbium/element_070_ytterbium_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_070_ytterbium/element_070_ytterbium.glb","spectral_img":null,"summary":"Ytterbium is a chemical element with symbol Yb and atomic number 70. It is the fourteenth and penultimate element in the lanthanide series, which is the basis of the relative stability of its +2 oxidation state. However, like the other lanthanides, its most common oxidation state is +3, seen in its oxide, halides and other compounds.","symbol":"Yb","xpos":16,"ypos":9,"wxpos":16,"wypos":6,"shells":[2,8,18,32,8,2],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p6 5s2 4d10 5p6 6s2 4f14","electron_configuration_semantic":"[Xe] 4f14 6s2","electron_affinity":-1.93,"electronegativity_pauling":1.1,"ionization_energies":[603.4,1174.8,2417,4203],"cpk-hex":"00bf38","image":{"title":"Ytterbium, 0.5 x 1 cm","url":"https://upload.wikimedia.org/wikipedia/commons/c/ce/Ytterbium-3.jpg","attribution":"Jurii, CC BY 1.0 <https://creativecommons.org/licenses/by/1.0>, via Wikimedia Commons, source: https://images-of-elements.com/ytterbium.php"},"block":"f"},{"name":"Lutetium","appearance":"silvery white","atomic_mass":174.96681,"boil":3675,"category":"lanthanide","density":9.841,"discovered_by":"Georges Urbain","melt":1925,"molar_heat":26.86,"named_by":null,"number":71,"period":6,"group":3,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Lutetium","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_071_lutetium/element_071_lutetium_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_071_lutetium/element_071_lutetium.glb","spectral_img":null,"summary":"Lutetium is a chemical element with symbol Lu and atomic number 71. It is a silvery white metal, which resists corrosion in dry, but not in moist air. It is considered the first element of the 6th-period transition metals and the last element in the lanthanide series, and is traditionally counted among the rare earths.","symbol":"Lu","xpos":17,"ypos":9,"wxpos":17,"wypos":6,"shells":[2,8,18,32,9,2],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p6 5s2 4d10 5p6 6s2 4f14 5d1","electron_configuration_semantic":"[Xe] 4f14 5d1 6s2","electron_affinity":33.4,"electronegativity_pauling":1.27,"ionization_energies":[523.5,1340,2022.3,4370,6445],"cpk-hex":"00ab24","image":{"title":"1 cm Big Piece of Pure Lutetium","url":"https://upload.wikimedia.org/wikipedia/commons/e/e8/Lutetium.jpg","attribution":"Jurii, CC BY 3.0 <https://creativecommons.org/licenses/by/3.0>, via Wikimedia Commons, source: https://images-of-elements.com/lutetium.php"},"block":"d"},{"name":"Hafnium","appearance":"steel gray","atomic_mass":178.492,"boil":4876,"category":"transition metal","density":13.31,"discovered_by":"Dirk Coster","melt":2506,"molar_heat":25.73,"named_by":null,"number":72,"period":6,"group":4,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Hafnium","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_072_hafnium/element_072_hafnium_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_072_hafnium/element_072_hafnium.glb","spectral_img":"https://en.wikipedia.org/wiki/File:Hafnium_spectrum_visible.png","summary":"Hafnium is a chemical element with symbol Hf and atomic number 72. A lustrous, silvery gray, tetravalent transition metal, hafnium chemically resembles zirconium and is found in zirconium minerals. Its existence was predicted by Dmitri Mendeleev in 1869, though it was not identified until 1923, making it the penultimate stable element to be discovered (rhenium was identified two years later).","symbol":"Hf","xpos":4,"ypos":6,"wxpos":18,"wypos":6,"shells":[2,8,18,32,10,2],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p6 5s2 4d10 5p6 6s2 4f14 5d2","electron_configuration_semantic":"[Xe] 4f14 5d2 6s2","electron_affinity":17.18,"electronegativity_pauling":1.3,"ionization_energies":[658.5,1440,2250,3216],"cpk-hex":"4dc2ff","image":{"title":"Electrolytic Hafnium, 22 grams. Original size in cm: 1 x 2 x 3","url":"https://upload.wikimedia.org/wikipedia/commons/1/17/Hafnium_%2872_Hf%29.jpg","attribution":"Hi-Res Images ofChemical Elements, CC BY 3.0 <https://creativecommons.org/licenses/by/3.0>, via Wikimedia Commons, source: https://images-of-elements.com/hafnium.php"},"block":"d"},{"name":"Tantalum","appearance":"gray blue","atomic_mass":180.947882,"boil":5731,"category":"transition metal","density":16.69,"discovered_by":"Anders Gustaf Ekeberg","melt":3290,"molar_heat":25.36,"named_by":null,"number":73,"period":6,"group":5,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Tantalum","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_073_tantalum/element_073_tantalum_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_073_tantalum/element_073_tantalum.glb","spectral_img":"https://en.wikipedia.org/wiki/File:Tantalum_spectrum_visible.png","summary":"Tantalum is a chemical element with symbol Ta and atomic number 73. Previously known as tantalium, its name comes from Tantalus, an antihero from Greek mythology. Tantalum is a rare, hard, blue-gray, lustrous transition metal that is highly corrosion-resistant.","symbol":"Ta","xpos":5,"ypos":6,"wxpos":19,"wypos":6,"shells":[2,8,18,32,11,2],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p6 5s2 4d10 5p6 6s2 4f14 5d3","electron_configuration_semantic":"[Xe] 4f14 5d3 6s2","electron_affinity":31,"electronegativity_pauling":1.5,"ionization_energies":[761,1500],"cpk-hex":"4da6ff","image":{"title":"Piece of tantalum, 1 cm in size","url":"https://upload.wikimedia.org/wikipedia/commons/6/61/Tantalum.jpg","attribution":"Jurii, CC BY 3.0 <https://creativecommons.org/licenses/by/3.0>, via Wikimedia Commons, source: https://images-of-elements.com/tantalum.php"},"block":"d"},{"name":"Tungsten","appearance":"grayish white, lustrous","atomic_mass":183.841,"boil":6203,"category":"transition metal","density":19.25,"discovered_by":"Carl Wilhelm Scheele","melt":3695,"molar_heat":24.27,"named_by":null,"number":74,"period":6,"group":6,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Tungsten","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_074_tungsten/element_074_tungsten_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_074_tungsten/element_074_tungsten.glb","spectral_img":null,"summary":"Tungsten, also known as wolfram, is a chemical element with symbol W and atomic number 74. The word tungsten comes from the Swedish language tung sten, which directly translates to heavy stone. Its name in Swedish is volfram, however, in order to distinguish it from scheelite, which in Swedish is alternatively named tungsten.","symbol":"W","xpos":6,"ypos":6,"wxpos":20,"wypos":6,"shells":[2,8,18,32,12,2],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p6 5s2 4d10 5p6 6s2 4f14 5d4","electron_configuration_semantic":"[Xe] 4f14 5d4 6s2","electron_affinity":78.76,"electronegativity_pauling":2.36,"ionization_energies":[770,1700],"cpk-hex":"2194d6","image":{"title":"Tungsten rod with oxidised surface, 80 grams. Original size in cm: 1.3 x 3","url":"https://upload.wikimedia.org/wikipedia/commons/c/c8/Tungsten_rod_with_oxidised_surface.jpg","attribution":"Jurii, CC BY 1.0 <https://creativecommons.org/licenses/by/1.0>, via Wikimedia Commons, source: https://images-of-elements.com/tungsten.php"},"block":"d"},{"name":"Rhenium","appearance":"silvery-grayish","atomic_mass":186.2071,"boil":5869,"category":"transition metal","density":21.02,"discovered_by":"Masataka Ogawa","melt":3459,"molar_heat":25.48,"named_by":"Walter Noddack","number":75,"period":6,"group":7,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Rhenium","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_075_rhenium/element_075_rhenium_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_075_rhenium/element_075_rhenium.glb","spectral_img":null,"summary":"Rhenium is a chemical element with symbol Re and atomic number 75. It is a silvery-white, heavy, third-row transition metal in group 7 of the periodic table. With an estimated average concentration of 1 part per billion (ppb), rhenium is one of the rarest elements in the Earth\'s crust.","symbol":"Re","xpos":7,"ypos":6,"wxpos":21,"wypos":6,"shells":[2,8,18,32,13,2],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p6 5s2 4d10 5p6 6s2 4f14 5d5","electron_configuration_semantic":"[Xe] 4f14 5d5 6s2","electron_affinity":5.8273,"electronegativity_pauling":1.9,"ionization_energies":[760,1260,2510,3640],"cpk-hex":"267dab","image":{"title":"Pure Rhenium Bead, arc melted, 21 grams. Original size in cm: 1.5 x 1.7. Measured radiation dose <0.05 μS/h.","url":"https://upload.wikimedia.org/wikipedia/commons/d/d9/Pure_rhenium_bead%2C_arc_melted%2C_21_grams._Original_size_in_cm_-_1.5_x_1.7.jpg","attribution":"Hi-Res Images ofChemical Elements, CC BY 3.0 <https://creativecommons.org/licenses/by/3.0>, via Wikimedia Commons, source: https://images-of-elements.com/rhenium.php"},"block":"d"},{"name":"Osmium","appearance":"silvery, blue cast","atomic_mass":190.233,"boil":5285,"category":"transition metal","density":22.59,"discovered_by":"Smithson Tennant","melt":3306,"molar_heat":24.7,"named_by":null,"number":76,"period":6,"group":8,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Osmium","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_076_osmium/element_076_osmium_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_076_osmium/element_076_osmium.glb","spectral_img":null,"summary":"Osmium (from Greek osme (ὀσμή) meaning \\"smell\\") is a chemical element with symbol Os and atomic number 76. It is a hard, brittle, bluish-white transition metal in the platinum group that is found as a trace element in alloys, mostly in platinum ores. Osmium is the densest naturally occurring element, with a density of 22.59 g/cm3.","symbol":"Os","xpos":8,"ypos":6,"wxpos":22,"wypos":6,"shells":[2,8,18,32,14,2],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p6 5s2 4d10 5p6 6s2 4f14 5d6","electron_configuration_semantic":"[Xe] 4f14 5d6 6s2","electron_affinity":103.99,"electronegativity_pauling":2.2,"ionization_energies":[840,1600],"cpk-hex":"266696","image":{"title":"Pure Osmium Bead","url":"https://upload.wikimedia.org/wikipedia/commons/3/3c/Osmium-bead.jpg","attribution":"Jurii, CC BY 3.0 <https://creativecommons.org/licenses/by/3.0>, via Wikimedia Commons, source: https://images-of-elements.com/osmium.php"},"block":"d"},{"name":"Iridium","appearance":"silvery white","atomic_mass":192.2173,"boil":4403,"category":"transition metal","density":22.56,"discovered_by":"Smithson Tennant","melt":2719,"molar_heat":25.1,"named_by":null,"number":77,"period":6,"group":9,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Iridium","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_077_iridium/element_077_iridium_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_077_iridium/element_077_iridium.glb","spectral_img":null,"summary":"Iridium is a chemical element with symbol Ir and atomic number 77. A very hard, brittle, silvery-white transition metal of the platinum group, iridium is generally credited with being the second densest element (after osmium) based on measured density, although calculations involving the space lattices of the elements show that iridium is denser. It is also the most corrosion-resistant metal, even at temperatures as high as 2000 °C. Although only certain molten salts and halogens are corrosive to solid iridium, finely divided iridium dust is much more reactive and can be flammable.","symbol":"Ir","xpos":9,"ypos":6,"wxpos":23,"wypos":6,"shells":[2,8,18,32,15,2],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p6 5s2 4d10 5p6 6s2 4f14 5d7","electron_configuration_semantic":"[Xe] 4f14 5d7 6s2","electron_affinity":150.94,"electronegativity_pauling":2.2,"ionization_energies":[880,1600],"cpk-hex":"175487","image":{"title":"Pieces of Pure Iridium, 1 gram. Original size: 0.1 - 0.3 cm each","url":"https://upload.wikimedia.org/wikipedia/commons/a/a8/Iridium-2.jpg","attribution":"Unknown authorUnknown author, CC BY 1.0 <https://creativecommons.org/licenses/by/1.0>, via Wikimedia Commons, source: https://images-of-elements.com/iridium.php"},"block":"d"},{"name":"Platinum","appearance":"silvery white","atomic_mass":195.0849,"boil":4098,"category":"transition metal","density":21.45,"discovered_by":"Antonio de Ulloa","melt":2041.4,"molar_heat":25.86,"named_by":null,"number":78,"period":6,"group":10,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Platinum","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_078_platinum/element_078_platinum_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_078_platinum/element_078_platinum.glb","spectral_img":null,"summary":"Platinum is a chemical element with symbol Pt and atomic number 78. It is a dense, malleable, ductile, highly unreactive, precious, gray-white transition metal. Its name is derived from the Spanish term platina, which is literally translated into \\"little silver\\".","symbol":"Pt","xpos":10,"ypos":6,"wxpos":24,"wypos":6,"shells":[2,8,18,32,17,1],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p6 5s2 4d10 5p6 6s1 4f14 5d9","electron_configuration_semantic":"[Xe] 4f14 5d9 6s1","electron_affinity":205.041,"electronegativity_pauling":2.28,"ionization_energies":[870,1791],"cpk-hex":"d0d0e0","image":{"title":"Crystals of Pure Platinum grown by gas phase transport","url":"https://upload.wikimedia.org/wikipedia/commons/6/68/Platinum_crystals.jpg","attribution":"Periodictableru, CC BY 3.0 <https://creativecommons.org/licenses/by/3.0>, via Wikimedia Commons"},"block":"d"},{"name":"Gold","appearance":"metallic yellow","atomic_mass":196.9665695,"boil":3243,"category":"transition metal","density":19.3,"discovered_by":"Middle East","melt":1337.33,"molar_heat":25.418,"named_by":null,"number":79,"period":6,"group":11,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Gold","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_079_gold/element_079_gold_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_079_gold/element_079_gold.glb","spectral_img":null,"summary":"Gold is a chemical element with symbol Au (from Latin:aurum) and atomic number 79. In its purest form, it is a bright, slightly reddish yellow, dense, soft, malleable and ductile metal. Chemically, gold is a transition metal and a group 11 element.","symbol":"Au","xpos":11,"ypos":6,"wxpos":25,"wypos":6,"shells":[2,8,18,32,18,1],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p6 5s2 4d10 5p6 6s1 4f14 5d10","electron_configuration_semantic":"[Xe] 4f14 5d10 6s1","electron_affinity":222.747,"electronegativity_pauling":2.54,"ionization_energies":[890.1,1980],"cpk-hex":"ffd123","image":{"title":"Ultrapure Gold Leaf","url":"https://upload.wikimedia.org/wikipedia/commons/8/8a/Gold_%2879_Au%29.jpg","attribution":"Hi-Res Images ofChemical Elements, CC BY 3.0 <https://creativecommons.org/licenses/by/3.0>, via Wikimedia Commons, source: https://images-of-elements.com/gold.php"},"block":"d"},{"name":"Mercury","appearance":"silvery","atomic_mass":200.5923,"boil":629.88,"category":"transition metal","density":13.534,"discovered_by":"unknown, before 2000 BCE","melt":234.321,"molar_heat":27.983,"named_by":null,"number":80,"period":6,"group":12,"phase":"Liquid","source":"https://en.wikipedia.org/wiki/Mercury (Element)","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_080_mercury/element_080_mercury_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_080_mercury/element_080_mercury.glb","spectral_img":null,"summary":"Mercury is a chemical element with symbol Hg and atomic number 80. It is commonly known as quicksilver and was formerly named hydrargyrum (/haɪˈdrɑːrdʒərəm/). A heavy, silvery d-block element, mercury is the only metallic element that is liquid at standard conditions for temperature and pressure; the only other element that is liquid under these conditions is bromine, though metals such as caesium, gallium, and rubidium melt just above room temperature.","symbol":"Hg","xpos":12,"ypos":6,"wxpos":26,"wypos":6,"shells":[2,8,18,32,18,2],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p6 5s2 4d10 5p6 6s2 4f14 5d10","electron_configuration_semantic":"[Xe] 4f14 5d10 6s2","electron_affinity":-48,"electronegativity_pauling":2,"ionization_energies":[1007.1,1810,3300],"cpk-hex":"b8b8d0","image":{"title":"6 grams pure mercury. Diameter of the inner disc: 2 cm","url":"https://upload.wikimedia.org/wikipedia/commons/b/be/Hydrargyrum_%2880_Hg%29.jpg","attribution":"Hi-Res Images of Chemical Elements, CC BY 3.0 <https://creativecommons.org/licenses/by/3.0>, via Wikimedia Commons, source: https://images-of-elements.com/mercury.php"},"block":"d"},{"name":"Thallium","appearance":"silvery white","atomic_mass":204.38,"boil":1746,"category":"post-transition metal","density":11.85,"discovered_by":"William Crookes","melt":577,"molar_heat":26.32,"named_by":null,"number":81,"period":6,"group":13,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Thallium","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_081_thallium/element_081_thallium_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_081_thallium/element_081_thallium.glb","spectral_img":null,"summary":"Thallium is a chemical element with symbol Tl and atomic number 81. This soft gray post-transition metal is not found free in nature. When isolated, it resembles tin, but discolors when exposed to air.","symbol":"Tl","xpos":13,"ypos":6,"wxpos":27,"wypos":6,"shells":[2,8,18,32,18,3],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p6 5s2 4d10 5p6 6s2 4f14 5d10 6p1","electron_configuration_semantic":"[Xe] 4f14 5d10 6s2 6p1","electron_affinity":36.4,"electronegativity_pauling":1.62,"ionization_energies":[589.4,1971,2878],"cpk-hex":"a6544d","image":{"title":"8 grams pure thallium under argon. Original size in cm: 0.7 x 1.5","url":"https://upload.wikimedia.org/wikipedia/commons/5/55/Thallium_%2881_Tl%29.jpg","attribution":"Hi-Res Images ofChemical Elements, CC BY 3.0 <https://creativecommons.org/licenses/by/3.0>, via Wikimedia Commons, source: https://images-of-elements.com/thallium.php"},"block":"p"},{"name":"Lead","appearance":"metallic gray","atomic_mass":207.21,"boil":2022,"category":"post-transition metal","density":11.34,"discovered_by":"Middle East","melt":600.61,"molar_heat":26.65,"named_by":null,"number":82,"period":6,"group":14,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Lead_(element)","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_082_lead/element_082_lead_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_082_lead/element_082_lead.glb","spectral_img":null,"summary":"Lead (/lɛd/) is a chemical element in the carbon group with symbol Pb (from Latin:plumbum) and atomic number 82. Lead is a soft, malleable and heavy post-transition metal. Metallic lead has a bluish-white color after being freshly cut, but it soon tarnishes to a dull grayish color when exposed to air.","symbol":"Pb","xpos":14,"ypos":6,"wxpos":28,"wypos":6,"shells":[2,8,18,32,18,4],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p6 5s2 4d10 5p6 6s2 4f14 5d10 6p2","electron_configuration_semantic":"[Xe] 4f14 5d10 6s2 6p2","electron_affinity":34.4204,"electronegativity_pauling":1.87,"ionization_energies":[715.6,1450.5,3081.5,4083,6640],"cpk-hex":"575961","image":{"title":"Ultrapure Lead Bead from two sides. Original size in cm: 1.5 x 2","url":"https://upload.wikimedia.org/wikipedia/commons/6/63/Lead-2.jpg","attribution":"Chemical Elements, CC BY 3.0 <https://creativecommons.org/licenses/by/3.0>, via Wikimedia Commons, source: https://images-of-elements.com/lead.php"},"block":"p"},{"name":"Bismuth","appearance":"lustrous silver","atomic_mass":208.980401,"boil":1837,"category":"post-transition metal","density":9.78,"discovered_by":"Claude François Geoffroy","melt":544.7,"molar_heat":25.52,"named_by":null,"number":83,"period":6,"group":15,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Bismuth","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_083_bismuth/element_083_bismuth_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_083_bismuth/element_083_bismuth.glb","spectral_img":null,"summary":"Bismuth is a chemical element with symbol Bi and atomic number 83. Bismuth, a pentavalent post-transition metal, chemically resembles arsenic and antimony. Elemental bismuth may occur naturally, although its sulfide and oxide form important commercial ores.","symbol":"Bi","xpos":15,"ypos":6,"wxpos":29,"wypos":6,"shells":[2,8,18,32,18,5],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p6 5s2 4d10 5p6 6s2 4f14 5d10 6p3","electron_configuration_semantic":"[Xe] 4f14 5d10 6s2 6p3","electron_affinity":90.924,"electronegativity_pauling":2.02,"ionization_energies":[703,1610,2466,4370,5400,8520],"cpk-hex":"9e4fb5","image":{"title":"Bismuth Crystal","url":"https://upload.wikimedia.org/wikipedia/commons/a/a5/Bismuth-2.jpg","attribution":"Jurii, CC BY 3.0 <https://creativecommons.org/licenses/by/3.0>, via Wikimedia Commons, source: https://images-of-elements.com/bismuth.php"},"block":"p"},{"name":"Polonium","appearance":"silvery","atomic_mass":209,"boil":1235,"category":"post-transition metal","density":9.196,"discovered_by":"Pierre Curie","melt":527,"molar_heat":26.4,"named_by":null,"number":84,"period":6,"group":16,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Polonium","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_084_polonium/element_084_polonium_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_084_polonium/element_084_polonium.glb","spectral_img":null,"summary":"Polonium is a chemical element with symbol Po and atomic number 84, discovered in 1898 by Marie Curie and Pierre Curie. A rare and highly radioactive element with no stable isotopes, polonium is chemically similar to bismuth and tellurium, and it occurs in uranium ores. Applications of polonium are few.","symbol":"Po","xpos":16,"ypos":6,"wxpos":30,"wypos":6,"shells":[2,8,18,32,18,6],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p6 5s2 4d10 5p6 6s2 4f14 5d10 6p4","electron_configuration_semantic":"[Xe] 4f14 5d10 6s2 6p4","electron_affinity":136,"electronegativity_pauling":2,"ionization_energies":[812.1],"cpk-hex":"ab5c00","image":{"title":"This is only an illustration, not polonium itself. A silvery, radioactive metal, producing so much heat that it gets liquid and ionizes the surrounding air","url":"https://images-of-elements.com/polonium.jpg","attribution":"Chemical ELements A Virtual Museum, CC BY 3.0 <https://creativecommons.org/licenses/by/3.0> source: https://images-of-elements.com/polonium.php"},"block":"p"},{"name":"Astatine","appearance":"unknown, probably metallic","atomic_mass":210,"boil":610,"category":"metalloid","density":6.35,"discovered_by":"Dale R. Corson","melt":575,"molar_heat":null,"named_by":null,"number":85,"period":6,"group":17,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Astatine","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_085_astatine/element_085_astatine_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_085_astatine/element_085_astatine.glb","spectral_img":null,"summary":"Astatine is a very rare radioactive chemical element with the chemical symbol At and atomic number 85. It occurs on Earth as the decay product of various heavier elements. All its isotopes are short-lived; the most stable is astatine-210, with a half-life of 8.1 hours.","symbol":"At","xpos":17,"ypos":6,"wxpos":31,"wypos":6,"shells":[2,8,18,32,18,7],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p6 5s2 4d10 5p6 6s2 4f14 5d10 6p5","electron_configuration_semantic":"[Xe] 4f14 5d10 6s2 6p5","electron_affinity":233,"electronegativity_pauling":2.2,"ionization_energies":[899.003],"cpk-hex":"754f45","image":{"title":"This is only an illustration, not astatine itself. Crystals similar to iodine, but darker in color than these, which due to the extreme radioactivity glow blue and evaporate to dark purple gas","url":"https://images-of-elements.com/astatine.jpg","attribution":"Chemical ELements A Virtual Museum, CC BY 3.0 <https://creativecommons.org/licenses/by/3.0> source: https://images-of-elements.com/astatine.php"},"block":"p"},{"name":"Radon","appearance":"colorless gas, occasionally glows green or red in discharge tubes","atomic_mass":222,"boil":211.5,"category":"noble gas","density":9.73,"discovered_by":"Friedrich Ernst Dorn","melt":202,"molar_heat":null,"named_by":null,"number":86,"period":6,"group":18,"phase":"Gas","source":"https://en.wikipedia.org/wiki/Radon","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_086_radon/element_086_radon_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_086_radon/element_086_radon.glb","spectral_img":"https://en.wikipedia.org/wiki/File:Radon_spectrum.png","summary":"Radon is a chemical element with symbol Rn and atomic number 86. It is a radioactive, colorless, odorless, tasteless noble gas, occurring naturally as a decay product of radium. Its most stable isotope, 222Rn, has a half-life of 3.8 days.","symbol":"Rn","xpos":18,"ypos":6,"wxpos":32,"wypos":6,"shells":[2,8,18,32,18,8],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p6 5s2 4d10 5p6 6s2 4f14 5d10 6p6","electron_configuration_semantic":"[Xe] 4f14 5d10 6s2 6p6","electron_affinity":-68,"electronegativity_pauling":2.2,"ionization_energies":[1037],"cpk-hex":"428296","image":{"title":"This is only an illustration, not radon itself. Radon is said to glow red in discharge tubes, although it practically is never used for this, due to its strong radioactivity.","url":"https://images-of-elements.com/radon.jpg","attribution":"Chemical ELements A Virtual Museum, CC BY 3.0 <https://creativecommons.org/licenses/by/3.0> source: https://images-of-elements.com/radon.php"},"block":"p"},{"name":"Francium","appearance":null,"atomic_mass":223,"boil":950,"category":"alkali metal","density":1.87,"discovered_by":"Marguerite Perey","melt":300,"molar_heat":null,"named_by":null,"number":87,"period":7,"group":1,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Francium","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_087_francium/element_087_francium_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_087_francium/element_087_francium.glb","spectral_img":null,"summary":"Francium is a chemical element with symbol Fr and atomic number 87. It used to be known as eka-caesium and actinium K. It is the second-least electronegative element, behind only caesium. Francium is a highly radioactive metal that decays into astatine, radium, and radon.","symbol":"Fr","xpos":1,"ypos":7,"wxpos":1,"wypos":7,"shells":[2,8,18,32,18,8,1],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p6 5s2 4d10 5p6 6s2 4f14 5d10 6p6 7s1","electron_configuration_semantic":"[Rn] 7s1","electron_affinity":46.89,"electronegativity_pauling":0.79,"ionization_energies":[380],"cpk-hex":"420066","image":{"title":"This is only an illustration, not francium itself.","url":"https://images-of-elements.com/francium.jpg","attribution":"Chemical ELements A Virtual Museum, CC BY 3.0 <https://creativecommons.org/licenses/by/3.0> source: https://images-of-elements.com/francium.jpg"},"block":"s"},{"name":"Radium","appearance":"silvery white metallic","atomic_mass":226,"boil":2010,"category":"alkaline earth metal","density":5.5,"discovered_by":"Pierre Curie","melt":1233,"molar_heat":null,"named_by":null,"number":88,"period":7,"group":2,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Radium","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_088_radium/element_088_radium_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_088_radium/element_088_radium.glb","spectral_img":null,"summary":"Radium is a chemical element with symbol Ra and atomic number 88. It is the sixth element in group 2 of the periodic table, also known as the alkaline earth metals. Pure radium is almost colorless, but it readily combines with nitrogen (rather than oxygen) on exposure to air, forming a black surface layer of radium nitride (Ra3N2).","symbol":"Ra","xpos":2,"ypos":7,"wxpos":2,"wypos":7,"shells":[2,8,18,32,18,8,2],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p6 5s2 4d10 5p6 6s2 4f14 5d10 6p6 7s2","electron_configuration_semantic":"[Rn] 7s2","electron_affinity":9.6485,"electronegativity_pauling":0.9,"ionization_energies":[509.3,979],"cpk-hex":"007d00","image":{"title":"Radium electroplated on a very small sample of copper foil and covered with polyurethane to prevent reaction with the air","url":"https://upload.wikimedia.org/wikipedia/commons/b/bb/Radium226.jpg","attribution":"grenadier, CC BY 3.0 <https://creativecommons.org/licenses/by/3.0>, via Wikimedia Commons"},"block":"s"},{"name":"Actinium","appearance":null,"atomic_mass":227,"boil":3500,"category":"actinide","density":10,"discovered_by":"Friedrich Oskar Giesel","melt":1500,"molar_heat":27.2,"named_by":null,"number":89,"period":7,"group":3,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Actinium","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_089_actinium/element_089_actinium_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_089_actinium/element_089_actinium.glb","spectral_img":null,"summary":"Actinium is a radioactive chemical element with symbol Ac (not to be confused with the abbreviation for an acetyl group) and atomic number 89, which was discovered in 1899. It was the first non-primordial radioactive element to be isolated. Polonium, radium and radon were observed before actinium, but they were not isolated until 1902.","symbol":"Ac","xpos":3,"ypos":10,"wxpos":3,"wypos":7,"shells":[2,8,18,32,18,9,2],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p6 5s2 4d10 5p6 6s2 4f14 5d10 6p6 7s2 6d1","electron_configuration_semantic":"[Rn] 6d1 7s2","electron_affinity":33.77,"electronegativity_pauling":1.1,"ionization_energies":[499,1170],"cpk-hex":"70abfa","image":{"title":"Actinium-225 medical radioisotope held in a v-vial at ORNL. The blue glow comes from the ionization of surrounding air by alpha particles","url":"https://upload.wikimedia.org/wikipedia/commons/2/27/Actinium_sample_%2831481701837%29.png","attribution":"Oak Ridge National Laboratory, CC BY 2.0 <https://creativecommons.org/licenses/by/2.0>, via Wikimedia Commons, source: https://www.flickr.com/photos/oakridgelab/31481701837/"},"block":"f"},{"name":"Thorium","appearance":"silvery, often with black tarnish","atomic_mass":232.03774,"boil":5061,"category":"actinide","density":11.724,"discovered_by":"Jöns Jakob Berzelius","melt":2023,"molar_heat":26.23,"named_by":null,"number":90,"period":7,"group":3,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Thorium","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_090_thorium/element_090_thorium_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_090_thorium/element_090_thorium.glb","spectral_img":null,"summary":"Thorium is a chemical element with symbol Th and atomic number 90. A radioactive actinide metal, thorium is one of only two significantly radioactive elements that still occur naturally in large quantities as a primordial element (the other being uranium). It was discovered in 1828 by the Norwegian Reverend and amateur mineralogist Morten Thrane Esmark and identified by the Swedish chemist Jöns Jakob Berzelius, who named it after Thor, the Norse god of thunder.","symbol":"Th","xpos":4,"ypos":10,"wxpos":4,"wypos":7,"shells":[2,8,18,32,18,10,2],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p6 5s2 4d10 5p6 6s2 4f14 5d10 6p6 7s2 6d2","electron_configuration_semantic":"[Rn] 6d2 7s2","electron_affinity":112.72,"electronegativity_pauling":1.3,"ionization_energies":[587,1110,1930,2780],"cpk-hex":"00baff","image":{"title":"Thorium Metal in Ampoule, corroded","url":"https://upload.wikimedia.org/wikipedia/commons/f/f7/Thorium-1.jpg","attribution":"W. Oelen, CC BY-SA 3.0 <https://creativecommons.org/licenses/by-sa/3.0>, via Wikimedia Commons"},"block":"f"},{"name":"Protactinium","appearance":"bright, silvery metallic luster","atomic_mass":231.035882,"boil":4300,"category":"actinide","density":15.37,"discovered_by":"William Crookes","melt":1841,"molar_heat":null,"named_by":"Otto Hahn","number":91,"period":7,"group":3,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Protactinium","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_091_protactinium/element_091_protactinium_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_091_protactinium/element_091_protactinium.glb","spectral_img":null,"summary":"Protactinium is a chemical element with symbol Pa and atomic number 91. It is a dense, silvery-gray metal which readily reacts with oxygen, water vapor and inorganic acids. It forms various chemical compounds where protactinium is usually present in the oxidation state +5, but can also assume +4 and even +2 or +3 states.","symbol":"Pa","xpos":5,"ypos":10,"wxpos":5,"wypos":7,"shells":[2,8,18,32,20,9,2],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p6 5s2 4d10 5p6 6s2 4f14 5d10 6p6 7s2 5f2 6d1","electron_configuration_semantic":"[Rn] 5f2 6d1 7s2","electron_affinity":53.03,"electronegativity_pauling":1.5,"ionization_energies":[568],"cpk-hex":"00a1ff","image":{"title":"This sample of Protactinium-233 (dark circular area in the photo) was photographed in the light from its own radioactive emission (the lighter area) at the National Reactor Testing Station in Idaho.","url":"https://upload.wikimedia.org/wikipedia/commons/a/af/Protactinium-233.jpg","attribution":"ENERGY.GOV, Public domain, via Wikimedia Commons"},"block":"f"},{"name":"Uranium","appearance":null,"atomic_mass":238.028913,"boil":4404,"category":"actinide","density":19.1,"discovered_by":"Martin Heinrich Klaproth","melt":1405.3,"molar_heat":27.665,"named_by":null,"number":92,"period":7,"group":3,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Uranium","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_092_uranium/element_092_uranium_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_092_uranium/element_092_uranium.glb","spectral_img":null,"summary":"Uranium is a chemical element with symbol U and atomic number 92. It is a silvery-white metal in the actinide series of the periodic table. A uranium atom has 92 protons and 92 electrons, of which 6 are valence electrons.","symbol":"U","xpos":6,"ypos":10,"wxpos":6,"wypos":7,"shells":[2,8,18,32,21,9,2],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p6 5s2 4d10 5p6 6s2 4f14 5d10 6p6 7s2 5f3 6d1","electron_configuration_semantic":"[Rn] 5f3 6d1 7s2","electron_affinity":50.94,"electronegativity_pauling":1.38,"ionization_energies":[597.6,1420],"cpk-hex":"008fff","image":{"title":"A biscuit of uranium metal after reduction via the Ames Process. c.1943.","url":"https://upload.wikimedia.org/wikipedia/commons/b/b2/Ames_Process_uranium_biscuit.jpg","attribution":"Unknown authorUnknown author, Public domain, via Wikimedia Commons"},"block":"f"},{"name":"Neptunium","appearance":"silvery metallic","atomic_mass":237,"boil":4447,"category":"actinide","density":20.45,"discovered_by":"Edwin McMillan","melt":912,"molar_heat":29.46,"named_by":null,"number":93,"period":7,"group":3,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Neptunium","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_093_neptunium/element_093_neptunium_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_093_neptunium/element_093_neptunium.glb","spectral_img":null,"summary":"Neptunium is a chemical element with symbol Np and atomic number 93. A radioactive actinide metal, neptunium is the first transuranic element. Its position in the periodic table just after uranium, named after the planet Uranus, led to it being named after Neptune, the next planet beyond Uranus.","symbol":"Np","xpos":7,"ypos":10,"wxpos":7,"wypos":7,"shells":[2,8,18,32,22,9,2],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p6 5s2 4d10 5p6 6s2 4f14 5d10 6p6 7s2 5f4 6d1","electron_configuration_semantic":"[Rn] 5f4 6d1 7s2","electron_affinity":45.85,"electronegativity_pauling":1.36,"ionization_energies":[604.5],"cpk-hex":"0080ff","image":{"title":"Neptunium 237 sphere (6 kg)","url":"https://upload.wikimedia.org/wikipedia/commons/e/e5/Neptunium2.jpg","attribution":"Los Alamos National Laboratory,, Public domain, via Wikimedia Commons"},"block":"f"},{"name":"Plutonium","appearance":"silvery white, tarnishing to dark gray in air","atomic_mass":244,"boil":3505,"category":"actinide","density":19.816,"discovered_by":"Glenn T. Seaborg","melt":912.5,"molar_heat":35.5,"named_by":null,"number":94,"period":7,"group":3,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Plutonium","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_094_plutonium/element_094_plutonium_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_094_plutonium/element_094_plutonium.glb","spectral_img":null,"summary":"Plutonium is a transuranic radioactive chemical element with symbol Pu and atomic number 94. It is an actinide metal of silvery-gray appearance that tarnishes when exposed to air, and forms a dull coating when oxidized. The element normally exhibits six allotropes and four oxidation states.","symbol":"Pu","xpos":8,"ypos":10,"wxpos":8,"wypos":7,"shells":[2,8,18,32,24,8,2],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p6 5s2 4d10 5p6 6s2 4f14 5d10 6p6 7s2 5f6","electron_configuration_semantic":"[Rn] 5f6 7s2","electron_affinity":-48.33,"electronegativity_pauling":1.28,"ionization_energies":[584.7],"cpk-hex":"006bff","image":{"title":"Plutonium Ring","url":"https://upload.wikimedia.org/wikipedia/commons/0/0f/Plutonium_ring.jpg","attribution":"Los Alamos National Laboratory, Attribution, via Wikimedia Commons"},"block":"f"},{"name":"Americium","appearance":"silvery white","atomic_mass":243,"boil":2880,"category":"actinide","density":12,"discovered_by":"Glenn T. Seaborg","melt":1449,"molar_heat":62.7,"named_by":null,"number":95,"period":7,"group":3,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Americium","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_095_americium/element_095_americium_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_095_americium/element_095_americium.glb","spectral_img":"https://en.wikipedia.org/wiki/File:Americium_spectrum_visible.png","summary":"Americium is a radioactive transuranic chemical element with symbol Am and atomic number 95. This member of the actinide series is located in the periodic table under the lanthanide element europium, and thus by analogy was named after the Americas. Americium was first produced in 1944 by the group of Glenn T.Seaborg from Berkeley, California, at the metallurgical laboratory of University of Chicago.","symbol":"Am","xpos":9,"ypos":10,"wxpos":9,"wypos":7,"shells":[2,8,18,32,25,8,2],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p6 5s2 4d10 5p6 6s2 4f14 5d10 6p6 7s2 5f7","electron_configuration_semantic":"[Rn] 5f7 7s2","electron_affinity":9.93,"electronegativity_pauling":1.13,"ionization_energies":[578],"cpk-hex":"545cf2","image":{"title":"A small disc of Am-241 under the microscope.","url":"https://upload.wikimedia.org/wikipedia/commons/e/ee/Americium_microscope.jpg","attribution":"Bionerd, CC BY 3.0 <https://creativecommons.org/licenses/by/3.0>, via Wikimedia Commons"},"block":"f"},{"name":"Curium","appearance":"silvery metallic, glows purple in the dark","atomic_mass":247,"boil":3383,"category":"actinide","density":13.51,"discovered_by":"Glenn T. Seaborg","melt":1613,"molar_heat":null,"named_by":null,"number":96,"period":7,"group":3,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Curium","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_096_curium/element_096_curium_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_096_curium/element_096_curium.glb","spectral_img":null,"summary":"Curium is a transuranic radioactive chemical element with symbol Cm and atomic number 96. This element of the actinide series was named after Marie and Pierre Curie – both were known for their research on radioactivity. Curium was first intentionally produced and identified in July 1944 by the group of Glenn T. Seaborg at the University of California, Berkeley.","symbol":"Cm","xpos":10,"ypos":10,"wxpos":10,"wypos":7,"shells":[2,8,18,32,25,9,2],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p6 5s2 4d10 5p6 6s2 4f14 5d10 6p6 7s2 5f7 6d1","electron_configuration_semantic":"[Rn] 5f7 6d1 7s2","electron_affinity":27.17,"electronegativity_pauling":1.28,"ionization_energies":[581],"cpk-hex":"785ce3","image":{"title":"A piece of curium, which emitts strong radiation that makes it glow","url":"https://images-of-elements.com/s/curium-glow.jpg","attribution":"European Union, The Actinide Group, Institute for Transuranium Elements (JRC-ITU), source: https://images-of-elements.com/curium.php"},"block":"f"},{"name":"Berkelium","appearance":"silvery","atomic_mass":247,"boil":2900,"category":"actinide","density":14.78,"discovered_by":"Lawrence Berkeley National Laboratory","melt":1259,"molar_heat":null,"named_by":null,"number":97,"period":7,"group":3,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Berkelium","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_097_berkelium/element_097_berkelium_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_097_berkelium/element_097_berkelium.glb","spectral_img":null,"summary":"Berkelium is a transuranic radioactive chemical element with symbol Bk and atomic number 97. It is a member of the actinide and transuranium element series. It is named after the city of Berkeley, California, the location of the University of California Radiation Laboratory where it was discovered in December 1949.","symbol":"Bk","xpos":11,"ypos":10,"wxpos":11,"wypos":7,"shells":[2,8,18,32,27,8,2],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p6 5s2 4d10 5p6 6s2 4f14 5d10 6p6 7s2 5f9","electron_configuration_semantic":"[Rn] 5f9 7s2","electron_affinity":-165.24,"electronegativity_pauling":1.3,"ionization_energies":[601],"cpk-hex":"8a4fe3","image":{"title":"It took 250 days to make enough berkelium, shown here (in dissolved state), to synthesize element 117","url":"https://upload.wikimedia.org/wikipedia/commons/f/fc/Berkelium.jpg","attribution":"ORNL, Department of Energy, Public domain, via Wikimedia Commons"},"block":"f"},{"name":"Californium","appearance":"silvery","atomic_mass":251,"boil":1743,"category":"actinide","density":15.1,"discovered_by":"Lawrence Berkeley National Laboratory","melt":1173,"molar_heat":null,"named_by":null,"number":98,"period":7,"group":3,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Californium","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_098_californium/element_098_californium_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_098_californium/element_098_californium.glb","spectral_img":null,"summary":"Californium is a radioactive metallic chemical element with symbol Cf and atomic number 98. The element was first made in 1950 at the University of California Radiation Laboratory in Berkeley, by bombarding curium with alpha particles (helium-4 ions). It is an actinide element, the sixth transuranium element to be synthesized, and has the second-highest atomic mass of all the elements that have been produced in amounts large enough to see with the unaided eye (after einsteinium).","symbol":"Cf","xpos":12,"ypos":10,"wxpos":12,"wypos":7,"shells":[2,8,18,32,28,8,2],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p6 5s2 4d10 5p6 6s2 4f14 5d10 6p6 7s2 5f10","electron_configuration_semantic":"[Rn] 5f10 7s2","electron_affinity":-97.31,"electronegativity_pauling":1.3,"ionization_energies":[608],"cpk-hex":"a136d4","image":{"title":"A disc of californium metal (249Cf, 10 mg). The source implies that the disc has a diameter about twice the thickness of a typical pin, or on the order of 1 mm","url":"https://upload.wikimedia.org/wikipedia/commons/9/93/Californium.jpg","attribution":"United States Department of Energy (see File:Einsteinium.jpg), Public domain, via Wikimedia Commons"},"block":"f"},{"name":"Einsteinium","appearance":"silver-colored","atomic_mass":252,"boil":1269,"category":"actinide","density":8.84,"discovered_by":"Lawrence Berkeley National Laboratory","melt":1133,"molar_heat":null,"named_by":null,"number":99,"period":7,"group":3,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Einsteinium","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_099_einsteinium/element_099_einsteinium_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_099_einsteinium/element_099_einsteinium.glb","spectral_img":null,"summary":"Einsteinium is a synthetic element with symbol Es and atomic number 99. It is the seventh transuranic element, and an actinide. Einsteinium was discovered as a component of the debris of the first hydrogen bomb explosion in 1952, and named after Albert Einstein.","symbol":"Es","xpos":13,"ypos":10,"wxpos":13,"wypos":7,"shells":[2,8,18,32,29,8,2],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p6 5s2 4d10 5p6 6s2 4f14 5d10 6p6 7s2 5f11","electron_configuration_semantic":"[Rn] 5f11 7s2","electron_affinity":-28.6,"electronegativity_pauling":1.3,"ionization_energies":[619],"cpk-hex":"b31fd4","image":{"title":"300 micrograms of Einsteinium 253, which has a half-life of 20 days.","url":"https://upload.wikimedia.org/wikipedia/commons/5/55/Einsteinium.jpg","attribution":"Haire, R. G., US Department of Energy.Touched up by Materialscientist at en.wikipedia., Public domain, via Wikimedia Commons"},"block":"f"},{"name":"Fermium","appearance":null,"atomic_mass":257,"boil":null,"category":"actinide","density":null,"discovered_by":"Lawrence Berkeley National Laboratory","melt":1800,"molar_heat":null,"named_by":null,"number":100,"period":7,"group":3,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Fermium","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_100_fermium/element_100_fermium_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_100_fermium/element_100_fermium.glb","spectral_img":null,"summary":"Fermium is a synthetic element with symbol Fm and atomic number 100. It is a member of the actinide series. It is the heaviest element that can be formed by neutron bombardment of lighter elements, and hence the last element that can be prepared in macroscopic quantities, although pure fermium metal has not yet been prepared.","symbol":"Fm","xpos":14,"ypos":10,"wxpos":14,"wypos":7,"shells":[2,8,18,32,30,8,2],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p6 5s2 4d10 5p6 6s2 4f14 5d10 6p6 7s2 5f12","electron_configuration_semantic":"[Rn] 5f12 7s2","electron_affinity":33.96,"electronegativity_pauling":1.3,"ionization_energies":[627],"cpk-hex":"b31fba","image":{"title":"Fermium was first observed in the fallout from the Ivy Mike nuclear test.","url":"https://upload.wikimedia.org/wikipedia/commons/5/58/Ivy_Mike_-_mushroom_cloud.jpg","attribution":"U.S. Department of Energy, Public domain, via Wikimedia Commons"},"block":"f"},{"name":"Mendelevium","appearance":null,"atomic_mass":258,"boil":null,"category":"actinide","density":null,"discovered_by":"Lawrence Berkeley National Laboratory","melt":1100,"molar_heat":null,"named_by":null,"number":101,"period":7,"group":3,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Mendelevium","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_101_mendelevium/element_101_mendelevium_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_101_mendelevium/element_101_mendelevium.glb","spectral_img":null,"summary":"Mendelevium is a synthetic element with chemical symbol Md (formerly Mv) and atomic number 101. A metallic radioactive transuranic element in the actinide series, it is the first element that currently cannot be produced in macroscopic quantities through neutron bombardment of lighter elements. It is the antepenultimate actinide and the ninth transuranic element.","symbol":"Md","xpos":15,"ypos":10,"wxpos":15,"wypos":7,"shells":[2,8,18,32,31,8,2],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p6 5s2 4d10 5p6 6s2 4f14 5d10 6p6 7s2 5f13","electron_configuration_semantic":"[Rn] 5f13 7s2","electron_affinity":93.91,"electronegativity_pauling":1.3,"ionization_energies":[635],"cpk-hex":"b30da6","image":{"title":"This is only an illustration, not mendelevium itself. Chemically similar to Thulium, the highly radioactive heavy metal emits very energetic α-radiation.","url":"https://images-of-elements.com/s/mendelevium.jpg","attribution":"Chemical Elments A Virtual Museum under a Creative Commons Attribution 3.0 Unported License, source: https://images-of-elements.com/mendelevium.php"},"block":"f"},{"name":"Nobelium","appearance":null,"atomic_mass":259,"boil":null,"category":"actinide","density":null,"discovered_by":"Joint Institute for Nuclear Research","melt":1100,"molar_heat":null,"named_by":null,"number":102,"period":7,"group":3,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Nobelium","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_102_nobelium/element_102_nobelium_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_102_nobelium/element_102_nobelium.glb","spectral_img":null,"summary":"Nobelium is a synthetic chemical element with symbol No and atomic number 102. It is named in honor of Alfred Nobel, the inventor of dynamite and benefactor of science. A radioactive metal, it is the tenth transuranic element and is the penultimate member of the actinide series.","symbol":"No","xpos":16,"ypos":10,"wxpos":16,"wypos":7,"shells":[2,8,18,32,32,8,2],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p6 5s2 4d10 5p6 6s2 4f14 5d10 6p6 7s2 5f14","electron_configuration_semantic":"[Rn] 5f14 7s2","electron_affinity":-223.22,"electronegativity_pauling":1.3,"ionization_energies":[642],"cpk-hex":"bd0d87","image":{"title":"This is only an illustration, not nobelium itself. Nobelium can only be made in very small amounts and emits strong radiation of various kinds.","url":"https://images-of-elements.com/nobelium.jpg","attribution":"Chemical Elments A Virtual Museum under a Creative Commons Attribution 3.0 Unported License, source: https://images-of-elements.com/nobelium.php"},"block":"f"},{"name":"Lawrencium","appearance":null,"atomic_mass":266,"boil":null,"category":"actinide","density":null,"discovered_by":"Lawrence Berkeley National Laboratory","melt":1900,"molar_heat":null,"named_by":null,"number":103,"period":7,"group":3,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Lawrencium","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_103_lawrencium/element_103_lawrencium_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_103_lawrencium/element_103_lawrencium.glb","spectral_img":null,"summary":"Lawrencium is a synthetic chemical element with chemical symbol Lr (formerly Lw) and atomic number 103. It is named in honor of Ernest Lawrence, inventor of the cyclotron, a device that was used to discover many artificial radioactive elements. A radioactive metal, lawrencium is the eleventh transuranic element and is also the final member of the actinide series.","symbol":"Lr","xpos":17,"ypos":10,"wxpos":17,"wypos":7,"shells":[2,8,18,32,32,8,3],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p6 5s2 4d10 5p6 6s2 4f14 5d10 6p6 7s2 5f14 7p1","electron_configuration_semantic":"[Rn] 5f14 7s2 7p1","electron_affinity":-30.04,"electronegativity_pauling":1.3,"ionization_energies":[470],"cpk-hex":"c70066","image":{"title":"This is only an illustration, not lawrencium itself. Lawrencium can only be made in very small amounts and emits strong radiation","url":"https://images-of-elements.com/lawrencium.jpg","attribution":"Chemical Elments A Virtual Museum under a Creative Commons Attribution 3.0 Unported License, source: https://images-of-elements.com/lawrencium.php"},"block":"d"},{"name":"Rutherfordium","appearance":null,"atomic_mass":267,"boil":5800,"category":"transition metal","density":23.2,"discovered_by":"Joint Institute for Nuclear Research","melt":2400,"molar_heat":null,"named_by":null,"number":104,"period":7,"group":4,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Rutherfordium","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_104_rutherfordium/element_104_rutherfordium_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_104_rutherfordium/element_104_rutherfordium.glb","spectral_img":null,"summary":"Rutherfordium is a chemical element with symbol Rf and atomic number 104, named in honor of physicist Ernest Rutherford. It is a synthetic element (an element that can be created in a laboratory but is not found in nature) and radioactive; the most stable known isotope, 267Rf, has a half-life of approximately 1.3 hours. In the periodic table of the elements, it is a d - block element and the second of the fourth - row transition elements.","symbol":"Rf","xpos":4,"ypos":7,"wxpos":18,"wypos":7,"shells":[2,8,18,32,32,10,2],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p6 5s2 4d10 5p6 6s2 4f14 5d10 6p6 7s2 5f14 6d2","electron_configuration_semantic":"[Rn] 5f14 6d2 7s2","electron_affinity":null,"electronegativity_pauling":null,"ionization_energies":[580],"cpk-hex":"cc0059","image":{"title":"Decay traces in a spark chamber, not of rutherfordium, but of a pion. This is a completely different, unrelated particle, but the decay of rutherfordium would make streaks there, too.","url":"https://images-of-elements.com/s/rutherfordium.jpg","attribution":"Image © CERN, Chemical Elments A Virtual Museum under a Creative Commons Attribution 3.0 Unported License, source: https://images-of-elements.com/rutherfordium.php"},"block":"d"},{"name":"Dubnium","appearance":null,"atomic_mass":268,"boil":null,"category":"transition metal","density":29.3,"discovered_by":"Joint Institute for Nuclear Research","melt":null,"molar_heat":null,"named_by":null,"number":105,"period":7,"group":5,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Dubnium","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_105_dubnium/element_105_dubnium_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_105_dubnium/element_105_dubnium.glb","spectral_img":null,"summary":"Dubnium is a chemical element with symbol Db and atomic number 105. It is named after the town of Dubna in Russia (north of Moscow), where it was first produced. It is a synthetic element (an element that can be created in a laboratory but is not found in nature) and radioactive; the most stable known isotope, dubnium-268, has a half-life of approximately 28 hours.","symbol":"Db","xpos":5,"ypos":7,"wxpos":19,"wypos":7,"shells":[2,8,18,32,32,11,2],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p6 5s2 4d10 5p6 6s2 4f14 5d10 6p6 7s2 5f14 6d3","electron_configuration_semantic":"*[Rn] 5f14 6d3 7s2","electron_affinity":null,"electronegativity_pauling":null,"ionization_energies":[],"cpk-hex":"d1004f","image":{"title":"No Image Found","url":"https://images-of-elements.com/s/transactinoid.png","attribution":"Chemical Elments A Virtual Museum under a Creative Commons Attribution 3.0 Unported License, source: https://images-of-elements.com/dubnium.php"},"block":"d"},{"name":"Seaborgium","appearance":null,"atomic_mass":269,"boil":null,"category":"transition metal","density":35,"discovered_by":"Lawrence Berkeley National Laboratory","melt":null,"molar_heat":null,"named_by":null,"number":106,"period":7,"group":6,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Seaborgium","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_106_seaborgium/element_106_seaborgium_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_106_seaborgium/element_106_seaborgium.glb","spectral_img":null,"summary":"Seaborgium is a synthetic element with symbol Sg and atomic number 106. Its most stable isotope 271Sg has a half-life of 1.9 minutes. A more recently discovered isotope 269Sg has a potentially slightly longer half-life (ca.","symbol":"Sg","xpos":6,"ypos":7,"wxpos":20,"wypos":7,"shells":[2,8,18,32,32,12,2],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p6 5s2 4d10 5p6 6s2 4f14 5d10 6p6 7s2 5f14 6d4","electron_configuration_semantic":"*[Rn] 5f14 6d4 7s2","electron_affinity":null,"electronegativity_pauling":null,"ionization_energies":[],"cpk-hex":"d90045","image":{"title":"No Image Found","url":"https://images-of-elements.com/s/transactinoid.png","attribution":"Chemical Elments A Virtual Museum under a Creative Commons Attribution 3.0 Unported License, source: https://images-of-elements.com/seaborgium.php"},"block":"d"},{"name":"Bohrium","appearance":null,"atomic_mass":270,"boil":null,"category":"transition metal","density":37.1,"discovered_by":"Gesellschaft für Schwerionenforschung","melt":null,"molar_heat":null,"named_by":null,"number":107,"period":7,"group":7,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Bohrium","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_107_bohrium/element_107_bohrium_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_107_bohrium/element_107_bohrium.glb","spectral_img":null,"summary":"Bohrium is a chemical element with symbol Bh and atomic number 107. It is named after Danish physicist Niels Bohr. It is a synthetic element (an element that can be created in a laboratory but is not found in nature) and radioactive; the most stable known isotope, 270Bh, has a half-life of approximately 61 seconds.","symbol":"Bh","xpos":7,"ypos":7,"wxpos":21,"wypos":7,"shells":[2,8,18,32,32,13,2],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p6 5s2 4d10 5p6 6s2 4f14 5d10 6p6 7s2 5f14 6d5","electron_configuration_semantic":"*[Rn] 5f14 6d5 7s2","electron_affinity":null,"electronegativity_pauling":null,"ionization_energies":[],"cpk-hex":"e00038","image":{"title":"No Image Found","url":"https://images-of-elements.com/s/transactinoid.png","attribution":"Chemical Elments A Virtual Museum under a Creative Commons Attribution 3.0 Unported License, source: https://images-of-elements.com/bohrium.php"},"block":"d"},{"name":"Hassium","appearance":null,"atomic_mass":269,"boil":null,"category":"transition metal","density":40.7,"discovered_by":"Gesellschaft für Schwerionenforschung","melt":126,"molar_heat":null,"named_by":null,"number":108,"period":7,"group":8,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Hassium","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_108_hassium/element_108_hassium_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_108_hassium/element_108_hassium.glb","spectral_img":null,"summary":"Hassium is a chemical element with symbol Hs and atomic number 108, named after the German state of Hesse. It is a synthetic element (an element that can be created in a laboratory but is not found in nature) and radioactive; the most stable known isotope, 269Hs, has a half-life of approximately 9.7 seconds, although an unconfirmed metastable state, 277mHs, may have a longer half-life of about 130 seconds. More than 100 atoms of hassium have been synthesized to date.","symbol":"Hs","xpos":8,"ypos":7,"wxpos":22,"wypos":7,"shells":[2,8,18,32,32,14,2],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p6 5s2 4d10 5p6 6s2 4f14 5d10 6p6 7s2 5f14 6d6","electron_configuration_semantic":"*[Rn] 5f14 6d6 7s2","electron_affinity":null,"electronegativity_pauling":null,"ionization_energies":[],"cpk-hex":"e6002e","image":{"title":"No Image Found","url":"https://images-of-elements.com/s/transactinoid.png","attribution":"Chemical Elments A Virtual Museum under a Creative Commons Attribution 3.0 Unported License, source: https://images-of-elements.com/hassium.php"},"block":"d"},{"name":"Meitnerium","appearance":null,"atomic_mass":278,"boil":null,"category":"unknown, probably transition metal","density":37.4,"discovered_by":"Gesellschaft für Schwerionenforschung","melt":null,"molar_heat":null,"named_by":null,"number":109,"period":7,"group":9,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Meitnerium","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_109_meitnerium/element_109_meitnerium_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_109_meitnerium/element_109_meitnerium.glb","spectral_img":null,"summary":"Meitnerium is a chemical element with symbol Mt and atomic number 109. It is an extremely radioactive synthetic element (an element not found in nature that can be created in a laboratory). The most stable known isotope, meitnerium-278, has a half-life of 7.6 seconds.","symbol":"Mt","xpos":9,"ypos":7,"wxpos":23,"wypos":7,"shells":[2,8,18,32,32,15,2],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p6 5s2 4d10 5p6 6s2 4f14 5d10 6p6 7s2 5f14 6d7","electron_configuration_semantic":"*[Rn] 5f14 6d7 7s2","electron_affinity":null,"electronegativity_pauling":null,"ionization_energies":[],"cpk-hex":"eb0026","image":{"title":"No Image Found","url":"https://images-of-elements.com/s/transactinoid.png","attribution":"Chemical Elments A Virtual Museum under a Creative Commons Attribution 3.0 Unported License, source: https://images-of-elements.com/meitnerium.php"},"block":"d"},{"name":"Darmstadtium","appearance":null,"atomic_mass":281,"boil":null,"category":"unknown, probably transition metal","density":34.8,"discovered_by":"Gesellschaft für Schwerionenforschung","melt":null,"molar_heat":null,"named_by":null,"number":110,"period":7,"group":10,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Darmstadtium","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_110_darmstadtium/element_110_darmstadtium_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_110_darmstadtium/element_110_darmstadtium.glb","spectral_img":null,"summary":"Darmstadtium is a chemical element with symbol Ds and atomic number 110. It is an extremely radioactive synthetic element. The most stable known isotope, darmstadtium-281, has a half-life of approximately 10 seconds.","symbol":"Ds","xpos":10,"ypos":7,"wxpos":24,"wypos":7,"shells":[2,8,18,32,32,16,2],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p6 5s2 4d10 5p6 6s2 4f14 5d10 6p6 7s2 5f14 6d8","electron_configuration_semantic":"*[Rn] 5f14 6d9 7s1","electron_affinity":null,"electronegativity_pauling":null,"ionization_energies":[],"cpk-hex":null,"image":{"title":"No Image Found","url":"https://images-of-elements.com/s/transactinoid.png","attribution":"Chemical Elments A Virtual Museum under a Creative Commons Attribution 3.0 Unported License, source: https://images-of-elements.com/darmstadtium.php"},"block":"d"},{"name":"Roentgenium","appearance":null,"atomic_mass":282,"boil":null,"category":"unknown, probably transition metal","density":28.7,"discovered_by":"Gesellschaft für Schwerionenforschung","melt":null,"molar_heat":null,"named_by":null,"number":111,"period":7,"group":11,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Roentgenium","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_111_roentgenium/element_111_roentgenium_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_111_roentgenium/element_111_roentgenium.glb","spectral_img":null,"summary":"Roentgenium is a chemical element with symbol Rg and atomic number 111. It is an extremely radioactive synthetic element (an element that can be created in a laboratory but is not found in nature); the most stable known isotope, roentgenium-282, has a half-life of 2.1 minutes. Roentgenium was first created in 1994 by the GSI Helmholtz Centre for Heavy Ion Research near Darmstadt, Germany.","symbol":"Rg","xpos":11,"ypos":7,"wxpos":25,"wypos":7,"shells":[2,8,18,32,32,17,2],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p6 5s2 4d10 5p6 6s2 4f14 5d10 6p6 7s2 5f14 6d9","electron_configuration_semantic":"*[Rn] 5f14 6d10 7s1","electron_affinity":151,"electronegativity_pauling":null,"ionization_energies":[],"cpk-hex":null,"image":{"title":"No Image Found","url":"https://images-of-elements.com/s/transactinoid.png","attribution":"Chemical Elments A Virtual Museum under a Creative Commons Attribution 3.0 Unported License, source: https://images-of-elements.com/roentgenium.php"},"block":"d"},{"name":"Copernicium","appearance":null,"atomic_mass":285,"boil":3570,"category":"transition metal","density":14,"discovered_by":"Gesellschaft für Schwerionenforschung","melt":null,"molar_heat":null,"named_by":null,"number":112,"period":7,"group":12,"phase":"Liquid","source":"https://en.wikipedia.org/wiki/Copernicium","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_112_copernicium/element_112_copernicium_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_112_copernicium/element_112_copernicium.glb","spectral_img":null,"summary":"Copernicium is a chemical element with symbol Cn and atomic number 112. It is an extremely radioactive synthetic element that can only be created in a laboratory. The most stable known isotope, copernicium-285, has a half-life of approximately 29 seconds, but it is possible that this copernicium isotope may have a nuclear isomer with a longer half-life, 8.9 min.","symbol":"Cn","xpos":12,"ypos":7,"wxpos":26,"wypos":7,"shells":[2,8,18,32,32,18,2],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p6 5s2 4d10 5p6 6s2 4f14 5d10 6p6 7s2 5f14 6d10","electron_configuration_semantic":"*[Rn] 5f14 6d10 7s2","electron_affinity":null,"electronegativity_pauling":null,"ionization_energies":[],"cpk-hex":null,"image":{"title":"No Image Found","url":"https://images-of-elements.com/s/transactinoid.png","attribution":"Chemical Elments A Virtual Museum under a Creative Commons Attribution 3.0 Unported License, source: https://images-of-elements.com/copernicium.php"},"block":"d"},{"name":"Nihonium","appearance":null,"atomic_mass":286,"boil":1430,"category":"unknown, probably transition metal","density":16,"discovered_by":"RIKEN","melt":700,"molar_heat":null,"named_by":null,"number":113,"period":7,"group":13,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Ununtrium","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_113_nihonium/element_113_nihonium_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_113_nihonium/element_113_nihonium.glb","spectral_img":null,"summary":"Nihonium is a chemical element with atomic number 113. It has a symbol Nh. It is a synthetic element (an element that can be created in a laboratory but is not found in nature) and is extremely radioactive; its most stable known isotope, nihonium-286, has a half-life of 20 seconds.","symbol":"Nh","xpos":13,"ypos":7,"wxpos":27,"wypos":7,"shells":[2,8,18,32,32,18,3],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p6 5s2 4d10 5p6 6s2 4f14 5d10 6p6 7s2 5f14 6d10 7p1","electron_configuration_semantic":"*[Rn] 5f14 6d10 7s2 7p1","electron_affinity":66.6,"electronegativity_pauling":null,"ionization_energies":[],"cpk-hex":null,"image":{"title":"No Image Found","url":"https://images-of-elements.com/s/transactinoid.png","attribution":"Chemical Elments A Virtual Museum under a Creative Commons Attribution 3.0 Unported License, source: https://images-of-elements.com/nihonium.php"},"block":"p"},{"name":"Flerovium","appearance":null,"atomic_mass":289,"boil":420,"category":"post-transition metal","density":14,"discovered_by":"Joint Institute for Nuclear Research","melt":340,"molar_heat":null,"named_by":null,"number":114,"period":7,"group":14,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Flerovium","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_114_flerovium/element_114_flerovium_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_114_flerovium/element_114_flerovium.glb","spectral_img":null,"summary":"Flerovium is a superheavy artificial chemical element with symbol Fl and atomic number 114. It is an extremely radioactive synthetic element. The element is named after the Flerov Laboratory of Nuclear Reactions of the Joint Institute for Nuclear Research in Dubna, Russia, where the element was discovered in 1998.","symbol":"Fl","xpos":14,"ypos":7,"wxpos":28,"wypos":7,"shells":[2,8,18,32,32,18,4],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p6 5s2 4d10 5p6 6s2 4f14 5d10 6p6 7s2 5f14 6d10 7p2","electron_configuration_semantic":"*[Rn] 5f14 6d10 7s2 7p2","electron_affinity":null,"electronegativity_pauling":null,"ionization_energies":[],"cpk-hex":null,"image":{"title":"No Image Found","url":"https://images-of-elements.com/s/transactinoid.png","attribution":"Chemical Elments A Virtual Museum under a Creative Commons Attribution 3.0 Unported License, source: https://images-of-elements.com/flerovium.php"},"block":"p"},{"name":"Moscovium","appearance":null,"atomic_mass":289,"boil":1400,"category":"unknown, probably post-transition metal","density":13.5,"discovered_by":"Joint Institute for Nuclear Research","melt":670,"molar_heat":null,"named_by":null,"number":115,"period":7,"group":15,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Ununpentium","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_115_moscovium/element_115_moscovium_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_115_moscovium/element_115_moscovium.glb","spectral_img":null,"summary":"Moscovium is the name of a synthetic superheavy element in the periodic table that has the symbol Mc and has the atomic number 115. It is an extremely radioactive element; its most stable known isotope, moscovium-289, has a half-life of only 220 milliseconds. It is also known as eka-bismuth or simply element 115.","symbol":"Mc","xpos":15,"ypos":7,"wxpos":29,"wypos":7,"shells":[2,8,18,32,32,18,5],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p6 5s2 4d10 5p6 6s2 4f14 5d10 6p6 7s2 5f14 6d10 7p3","electron_configuration_semantic":"*[Rn] 5f14 6d10 7s2 7p3","electron_affinity":35.3,"electronegativity_pauling":null,"ionization_energies":[],"cpk-hex":null,"image":{"title":"No Image Found","url":"https://images-of-elements.com/s/transactinoid.png","attribution":"Chemical Elments A Virtual Museum under a Creative Commons Attribution 3.0 Unported License, source: https://images-of-elements.com/moscovium.php"},"block":"p"},{"name":"Livermorium","appearance":null,"atomic_mass":293,"boil":1085,"category":"unknown, probably post-transition metal","density":12.9,"discovered_by":"Joint Institute for Nuclear Research","melt":709,"molar_heat":null,"named_by":null,"number":116,"period":7,"group":16,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Livermorium","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_116_livermorium/element_116_livermorium_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_116_livermorium/element_116_livermorium.glb","spectral_img":null,"summary":"Livermorium is a synthetic superheavy element with symbol Lv and atomic number 116. It is an extremely radioactive element that has only been created in the laboratory and has not been observed in nature. The element is named after the Lawrence Livermore National Laboratory in the United States, which collaborated with the Joint Institute for Nuclear Research in Dubna, Russia to discover livermorium in 2000.","symbol":"Lv","xpos":16,"ypos":7,"wxpos":30,"wypos":7,"shells":[2,8,18,32,32,18,6],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p6 5s2 4d10 5p6 6s2 4f14 5d10 6p6 7s2 5f14 6d10 7p4","electron_configuration_semantic":"*[Rn] 5f14 6d10 7s2 7p4","electron_affinity":74.9,"electronegativity_pauling":null,"ionization_energies":[],"cpk-hex":null,"image":{"title":"No Image Found","url":"https://images-of-elements.com/s/transactinoid.png","attribution":"Chemical Elments A Virtual Museum under a Creative Commons Attribution 3.0 Unported License, source: https://images-of-elements.com/livermorium.php"},"block":"p"},{"name":"Tennessine","appearance":null,"atomic_mass":294,"boil":883,"category":"unknown, probably metalloid","density":7.17,"discovered_by":"Joint Institute for Nuclear Research","melt":723,"molar_heat":null,"named_by":null,"number":117,"period":7,"group":17,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Tennessine","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_117_tennessine/element_117_tennessine_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_117_tennessine/element_117_tennessine.glb","spectral_img":null,"summary":"Tennessine is a superheavy artificial chemical element with an atomic number of 117 and a symbol of Ts. Also known as eka-astatine or element 117, it is the second-heaviest known element and penultimate element of the 7th period of the periodic table. As of 2016, fifteen tennessine atoms have been observed: six when it was first synthesized in 2010, seven in 2012, and two in 2014.","symbol":"Ts","xpos":17,"ypos":7,"wxpos":31,"wypos":7,"shells":[2,8,18,32,32,18,7],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p6 5s2 4d10 5p6 6s2 4f14 5d10 6p6 7s2 5f14 6d10 7p5","electron_configuration_semantic":"*[Rn] 5f14 6d10 7s2 7p5","electron_affinity":165.9,"electronegativity_pauling":null,"ionization_energies":[],"cpk-hex":null,"image":{"title":"No Image Found","url":"https://images-of-elements.com/s/transactinoid.png","attribution":"Chemical Elments A Virtual Museum under a Creative Commons Attribution 3.0 Unported License, source: https://images-of-elements.com/tenessine.php"},"block":"p"},{"name":"Oganesson","appearance":null,"atomic_mass":294,"boil":350,"category":"unknown, predicted to be noble gas","density":4.95,"discovered_by":"Joint Institute for Nuclear Research","melt":null,"molar_heat":null,"named_by":null,"number":118,"period":7,"group":18,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Oganesson","bohr_model_image":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_118_oganesson/element_118_oganesson_srp_th.png","bohr_model_3d":"https://storage.googleapis.com/search-ar-edu/periodic-table/element_118_oganesson/element_118_oganesson.glb","spectral_img":null,"summary":"Oganesson is IUPAC\'s name for the transactinide element with the atomic number 118 and element symbol Og. It is also known as eka-radon or element 118, and on the periodic table of the elements it is a p-block element and the last one of the 7th period. Oganesson is currently the only synthetic member of group 18.","symbol":"Og","xpos":18,"ypos":7,"wxpos":32,"wypos":7,"shells":[2,8,18,32,32,18,8],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p6 5s2 4d10 5p6 6s2 4f14 5d10 6p6 7s2 5f14 6d10 7p6","electron_configuration_semantic":"*[Rn] 5f14 6d10 7s2 7p6","electron_affinity":5.40318,"electronegativity_pauling":null,"ionization_energies":[],"cpk-hex":null,"image":{"title":"No Image Found","url":"https://images-of-elements.com/s/transactinoid.png","attribution":"Chemical Elments A Virtual Museum under a Creative Commons Attribution 3.0 Unported License, source: https://images-of-elements.com/oganesson.php"},"block":"p"},{"name":"Ununennium","appearance":null,"atomic_mass":315,"boil":630,"category":"unknown, but predicted to be an alkali metal","density":3,"discovered_by":"GSI Helmholtz Centre for Heavy Ion Research","melt":null,"molar_heat":null,"named_by":null,"number":119,"period":8,"group":1,"phase":"Solid","source":"https://en.wikipedia.org/wiki/Ununennium","bohr_model_image":null,"bohr_model_3d":null,"spectral_img":null,"summary":"Ununennium, also known as eka-francium or simply element 119, is the hypothetical chemical element with symbol Uue and atomic number 119. Ununennium and Uue are the temporary systematic IUPAC name and symbol respectively, until a permanent name is decided upon. In the periodic table of the elements, it is expected to be an s-block element, an alkali metal, and the first element in the eighth period.","symbol":"Uue","xpos":1,"ypos":8,"wxpos":1,"wypos":8,"shells":[2,8,18,32,32,18,8,1],"electron_configuration":"1s2 2s2 2p6 3s2 3p6 4s2 3d10 4p6 5s2 4d10 5p6 6s2 4f14 5d10 6p6 7s2 5f14 6d10 7p6 8s1","electron_configuration_semantic":"*[Uuo] 8s1","electron_affinity":63.87,"electronegativity_pauling":null,"ionization_energies":[],"cpk-hex":null,"image":{"title":"No Image Found","url":"https://images-of-elements.com/s/transactinoid.png","attribution":"Chemical Elments A Virtual Museum under a Creative Commons Attribution 3.0 Unported License, source: https://images-of-elements.com"},"block":"s"}]}');function Ie(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,i=new Array(t);n<t;n++)i[n]=e[n];return i}function Te(){var e,n,i=(e=(0,t.useState)(!1),n=2,function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var i,a,r,o,l=[],s=!0,u=!1;try{if(r=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;s=!1}else for(;!(s=(i=r.call(n)).done)&&(l.push(i.value),l.length!==t);s=!0);}catch(e){u=!0,a=e}finally{try{if(!s&&null!=n.return&&(o=n.return(),Object(o)!==o))return}finally{if(u)throw a}}return l}}(e,n)||function(e,t){if(e){if("string"==typeof e)return Ie(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Ie(e,t):void 0}}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),a=i[0],r=i[1];return(0,t.useEffect)((function(){var e=function(){window.pageYOffset>300?r(!0):r(!1)};return window.addEventListener("scroll",e),function(){window.removeEventListener("scroll",e)}}),[]),t.createElement("div",null,a&&t.createElement("span",null,t.createElement("div",{onClick:function(){window.scrollTo({top:0,behavior:"smooth"})},className:"back-to-top"},t.createElement("div",{className:"arrowup"},"^"))))}function Re(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var i,a,r,o,l=[],s=!0,u=!1;try{if(r=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;s=!1}else for(;!(s=(i=r.call(n)).done)&&(l.push(i.value),l.length!==t);s=!0);}catch(e){u=!0,a=e}finally{try{if(!s&&null!=n.return&&(o=n.return(),Object(o)!==o))return}finally{if(u)throw a}}return l}}(e,t)||function(e,t){if(e){if("string"==typeof e)return Le(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Le(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Le(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,i=new Array(t);n<t;n++)i[n]=e[n];return i}const Me=function(){var e=Re((0,t.useState)(""),2),n=(e[0],e[1],Re((0,t.useState)(!0),2)),i=(n[0],n[1],Re((0,t.useState)(null),2)),a=(i[0],i[1],se()),r=function(e){console.log("klik na atomi",e),console.log("boja cpk",Pe.R.cpk_hex);var t="/".concat(e);a(t)};return console.log("ime posle boje",Pe.R.name),t.createElement(t.Fragment,null,t.createElement("table",{className:"fizika"},t.createElement("thead",null,t.createElement("tr",null,t.createElement("td",{rowSpan:3},t.createElement("h1",{className:"head"},"ELEMENTS")))),Pe.R.map((function(e){return t.createElement("tbody",{className:"atomDet",key:e.name},t.createElement("tr",null,t.createElement("td",{onClick:function(){return r(e.number)},className:"symbolClick"},t.createElement("span",null,e.symbol),t.createElement("small",{className:"number"},e.number),t.createElement("small",{className:"name"},e.atomic_mass)),t.createElement("td",{onClick:function(){return r(e.number)},className:"nameAtom"},e.name),t.createElement("td",null,t.createElement("img",{src:e.bohr_model_image,alt:" nema slike ",className:"spImg"}))))}))),t.createElement("div",null,t.createElement(Te,null)))};var Oe={"noble gas":"#c5cae9","alkaline earth metal":"#ff9e80","diatomic nonmetal":"#e0e0e0","alkali metal":"#ffccbc","transition metal":"#c8e6c9","post-transition metal":"#d1c4e9",actinide:"#fff9c4","polyatomic nonmetal":"#ffe0b2","unknown, probably transition metal":"#e8f5e9","unknown, probably post-transition metal":"#ede7f6","unknown, but predicted to be an alkali metal":"#fbe9e7","unknown, probably metalloid":"#e0f7fa","unknown, predicted to be noble gas":"#e8eaf6",lanthanide:"#b2dfdb",metalloid:"#b2ebf2"};const je=function(){var e=se();return t.createElement(t.Fragment,null,t.createElement("div",{className:"periodic-table"},Pe.R.map((function(n){return t.createElement("div",{onClick:function(){return function(t){console.log("klik na atomi",t);var n="/".concat(t);e(n)}(n.number)},className:"element",key:n.name,style:{gridRow:n.ypos,gridColumn:n.xpos,background:Oe[n.category]}},t.createElement("div",null,n.symbol),t.createElement("small",{className:"number"},n.number),t.createElement("small",{className:"name"},n.name))}))),t.createElement("table",{className:"category"},t.createElement("tbody",null,t.createElement("tr",null,t.createElement("td",{style:{background:Oe["noble gas"],padding:"10px"}},"Noble gas"),t.createElement("td",{style:{background:Oe["unknown, predicted to be noble gas"],padding:"10px"}},"Predicted to be noble gas"),t.createElement("td",{style:{background:Oe["polyatomic nonmetal"],padding:"10px"}},"Polyatomic nonmetal")),t.createElement("tr",null,t.createElement("td",{style:{background:Oe["transition metal"],padding:"10px"}},"Transition metal"),t.createElement("td",{style:{background:Oe["unknown, probably transition metal"],padding:"10px"}},"Probably transition metal"),t.createElement("td",{style:{background:Oe.actinide,padding:"10px"}},"Actinide")),t.createElement("tr",null,t.createElement("td",{style:{background:Oe["post-transition metal"],padding:"10px"}},"Post-transition metal"),t.createElement("td",{style:{background:Oe["unknown, probably post-transition metal"],padding:"10px"}},"Probably post-transition metal"),t.createElement("td",{style:{background:Oe["alkaline earth metal"],padding:"10px"}},"Alkaline earth metal")),t.createElement("tr",null,t.createElement("td",{style:{background:Oe.metalloid,padding:"10px"}},"Metalloid"),t.createElement("td",{style:{background:Oe["unknown, probably metalloid"],padding:"10px"}},"Probably metalloid"),t.createElement("td",{style:{background:Oe["diatomic nonmetal"],padding:"10px"}},"Diatomic nonmetal")),t.createElement("tr",null,t.createElement("td",{style:{background:Oe["alkali metal"],padding:"10px"}},"Alkali metal"),t.createElement("td",{style:{background:Oe["unknown, but predicted to be an alkali metal"],padding:"10px"}},"Predicted to be an alkali metal"),t.createElement("td",{style:{background:Oe.lanthanide,padding:"10px"}},"Lanthanide")),t.createElement("tr",null,t.createElement("td",{className:"place"})))))};function We(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var i,a,r,o,l=[],s=!0,u=!1;try{if(r=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;s=!1}else for(;!(s=(i=r.call(n)).done)&&(l.push(i.value),l.length!==t);s=!0);}catch(e){u=!0,a=e}finally{try{if(!s&&null!=n.return&&(o=n.return(),Object(o)!==o))return}finally{if(u)throw a}}return l}}(e,t)||Ue(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Ue(e,t){if(e){if("string"==typeof e)return Fe(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Fe(e,t):void 0}}function Fe(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,i=new Array(t);n<t;n++)i[n]=e[n];return i}const De=function(e){var n=We((0,t.useState)(null),2),i=(n[0],n[1],We((0,t.useState)([]),2)),a=i[0],r=i[1],o=We((0,t.useState)([]),2),l=o[0],s=o[1],u=function(){let{matches:e}=t.useContext(ie),n=e[e.length-1];return n?n.params:{}}(),c=t.useRef(),m=We((0,t.useState)([]),2),p=m[0],d=m[1],h=function(e){return"".concat(e.position.x," ").concat(e.position.y," ").concat(e.position.z)},g=function(e){return"".concat(e.normal.x," ").concat(e.normal.y," ").concat(e.normal.z)};(0,t.useEffect)((function(){f()}),[]);var f=function(){var e=u.atomNum;console.log("doslo sa klikom",e-1);var t=Pe.R;console.log("Detalj atoma bez axios",t[e-1]),r(t[e-1]),s(t[e-1].image)};return t.createElement(t.Fragment,null,t.createElement("div",{className:"fizika"},t.createElement("div",{className:"warp"},t.createElement("h1",null,a.name),t.createElement("div",{className:"symbol"},a.symbol),t.createElement("div",null,"Number:",a.number),t.createElement("div",null,"Atomic mass: ",a.atomic_mass),t.createElement("div",null,"Group: ",a.group),t.createElement("div",null,"Period: ",a.period),t.createElement("div",null,"Category: ",a.category),t.createElement("div",null,"Discovered by: ",a.discovered_by),t.createElement("div",null,"Phase: ",a.phase),t.createElement("div",null,"Appearance: ",a.appearance),t.createElement("div",null,"Density: ",a.density," "),t.createElement("div",null,"Melt: ",a.melt/10.17," C"),t.createElement("div",null,"Electron affinity: ",a.electron_affinity),t.createElement("div",null,"Electron configuration: ",a.electron_configuration),t.createElement("div",null,"Electronegativity pauling: ",a.electronegativity_pauling),t.createElement("div",null,"Source: ",t.createElement("a",{href:a.source,target:"_blanc"},"Wikipedia")),t.createElement("div",{className:"summary"},a.summary),t.createElement("div",null,t.createElement("img",{className:"imgHold",src:l.url,alt:"nema slike"})),t.createElement("p",null,l.attribution),t.createElement("div",null,l.title)),t.createElement("model-viewer",{src:a.bohr_model_3d,"shadow-intensity":"1","camera-controls":!0,ar:!0,"ar-modes":"webxr",onClick:function(e){var t=e.clientX,n=e.clientY;if(c.current){var i=c.current.positionAndNormalFromPoint(t,n);i&&d((function(e){return[].concat(function(e){if(Array.isArray(e))return Fe(e)}(t=e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(t)||Ue(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),[i]);var t}))}},ref:function(e){c.current=e},className:"moduleView"},p.map((function(e,n){return t.createElement("button",{key:"hotspot-".concat(n),className:"view-button",slot:"hotspot-".concat(n),"data-position":h(e),"data-normal":g(e)})}))),t.createElement("div",{className:"span"})))};function Ye(){return t.createElement(Ae,{basename:"/"},t.createElement("div",{className:"navContainer"},t.createElement("p",null,t.createElement(Ee,{to:"/",className:"linker"},"ELEMENTS")),t.createElement("p",null,t.createElement(Ee,{to:"/table",className:"linker"},"PERIODIC TABLE"))),t.createElement(ve,null,t.createElement(_e,{path:"/",element:t.createElement(Me,null)}),t.createElement(_e,{path:"/table",element:t.createElement(je,null)}),t.createElement(_e,{path:"/:atomNum",element:t.createElement(De,null)})),t.createElement("div",{className:"home"},t.createElement("div",{className:"img"})))}const He=t.createContext({searchStringValue:"",setSearchStringFn:function(){}});function Ge(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,i=new Array(t);n<t;n++)i[n]=e[n];return i}const Ve=function(){var e,n,i=(e=(0,t.useState)("Enter search criterium!"),n=2,function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var i,a,r,o,l=[],s=!0,u=!1;try{if(r=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;s=!1}else for(;!(s=(i=r.call(n)).done)&&(l.push(i.value),l.length!==t);s=!0);}catch(e){u=!0,a=e}finally{try{if(!s&&null!=n.return&&(o=n.return(),Object(o)!==o))return}finally{if(u)throw a}}return l}}(e,n)||function(e,t){if(e){if("string"==typeof e)return Ge(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Ge(e,t):void 0}}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),a=i[0],r=i[1];return t.createElement(He.Provider,{value:{setSearchStringFn:r,searchStringValue:a}},t.createElement(Ye,null))};i.createRoot(document.getElementById("app")).render(t.createElement(Ve,{number:10,title:"String from index file",text:"Text from index file"}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,